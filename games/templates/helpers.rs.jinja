%% include 'header.rs.jinja'

%% for name, info in helpers.items()
/// {{ name }} ( {{ info.args|join(',') }} )
/// {{ info.pr.text.replace('\n', ' ') }}
#[macro_export]
macro_rules! helper__{{ name|construct_id }} {
    ($ctx:expr, $world:expr{% for a in info.args %}, ${{ a.name }}:expr{% endfor %}) => {{ '{{' }}
        #[allow(unused_imports)]
        use $crate::items::Item;
        {{ info.pr|prToRust({})|escape_ctx }}
    {{ '}}' }};
}

%% endfor

%% for name, rule in rules.items()
/// Rule {{ name }}
#[macro_export]
macro_rules! rule__{{ name|construct_id }} {
    ($ctx:expr, $world:expr) => {{ '{{' }}
        use $crate::graph_enums::*;
        use $crate::rules;
        match $world.rule_{{ name|construct_id }} {
%% for v, info in rule.variants.items()
            Rule{{ name[1:]|camelize }}::{{ v|construct_id|camelize }} => {
                rules::{% if rule.rule == 'actions' %}action_{% else %}access_{% endif %}{{ info.func_id }}($ctx, $world)
            }
%% endfor
        }
    {{ '}}' }};
}

%% endfor
