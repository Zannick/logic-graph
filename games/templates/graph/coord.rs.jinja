%% include 'header.rs.jinja'

#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(unused)]

use crate::graph::enums::*;

pub fn coordinate(spot: SpotId) -> Result<(f32, f32), String> {
    match spot {
%% for area in gl.areas()
%% for sp in area.spots|selectattr('coord', 'defined')
        SpotId::{{ sp.id }} => Ok(({{ sp.coord[0]|float }}, {{ sp.coord[1]|float }})),
%% endfor
%% endfor
        _ => Err(format!("Spot has no coordinate: {}", spot)),
    }
}

pub fn distance(a: (f32, f32), b: (f32, f32)) -> f32 {
    ((a.0 - b.0).powi(2) + (a.1 - b.1).powi(2)).sqrt()
}

pub fn spot_distance(a: SpotId, b: SpotId) -> f32 {
    distance(coordinate(a).unwrap(), coordinate(b).unwrap())
}

pub fn spot_distance_or_inf(a: SpotId, b: SpotId) -> f32 {
    match (coordinate(a), coordinate(b)) {
        (Ok(c1), Ok(c2)) => distance(c1, c2),
        _ => f32::INFINITY,
    }
}
