# Shared setup for all tests in this document
name: LedgeTests
all:
  with:
    - Ice_Axe
    - Amashilama
  context:
    save: Glacier > Revival > Save Point
  visited:
    - Glacier > Sea Burial > Collapsing Ceiling > Drown
  start: Glacier > Vertical Room > East 9

tests:
  # can/cannot_obtain:
  #   Checks for immediate accessability of an unvisited location with the given item
  #   "immediate" means: doable without performing actions or collecting items
  - cannot_obtain: Ledge_Grab
  - with:
      - Switch_36_11
    can_obtain: Ledge_Grab
  #- settings:
  #    major_glitches: true
  #  can_obtain: Ledge_Grab
  
  # can/cannot_reach:
  #   Checks for immediate reachability of the given spot
  #   "immediate" means: doable without performing actions or collecting items
  - can_reach: Glacier > Revival > Save Point
  - cannot_reach: Glacier > Vertical Room > Peak

  # eventually_gets:
  #   Repeats the search algorithm for a fixed number of attempts to find the given item.
  #   TODO: might use the greedy algorithm instead
  - with: 
      - Boomerang
    eventually_gets: Ledge_Grab
  - eventually_gets: Ledge_Grab

  # path:
  #   Attempts to follow the list of spots as a path, failing if any step doesn't work.
  - name: switch_opens_gate
    with:
      - Switch_36_11
    path:
      - Glacier > Vertical Room > Mid 9
      - Glacier > Vertical Room > Under Switch
      - Glacier > Vertical Room > Past Gate

  - name: get_boomerang
    start: Glacier > Revival > Save Point
    path:
      - Glacier > Revival > West 8
      - Glacier > Grid 39-40,7-9 > Upper East
      - Glacier > Grid 39-40,7-9 > Upper Scaffolding
      - Glacier > Grid 39-40,7-9 > West
      - Glacier > Grid 37-38,9 > East
      - Glacier > Grid 37-38,9 > West
      - Glacier > Vertical Room > East 9
      - Glacier > Vertical Room > Mid 9
      - Glacier > Vertical Room > Mid 11
      - Glacier > Vertical Room > East 13
      - Glacier > Boomerang Antechamber > West 13
      - Glacier > Boomerang Antechamber > East 12
      - Glacier > Boomerang Room > West
      - Glacier > Boomerang Room > Platform
      - Glacier > Boomerang Room > Center-ish
      - Glacier > Boomerang Room > Pedestal

  - start: Glacier > Boomerang Room > Pedestal
    with:
      - Boomerang
    can_obtain: Switch_36_11
  
  - start: Glacier > Vertical Room > Under Switch
    with:
      - Boomerang
      - Switch_36_11
    can_obtain: Ledge_Grab

  ## Requires tests
  # "requires" lets you add a second setup, and then tests both 1) without those additional
  # settings, the goal is not completable, 2) with those settings, it is.
  # The tests correspond:
  #    to_reach -> cannot_reach/can_reach
  #    to_obtain -> cannot_obtain/can_obtain
  # Again, these tests perform no actions and visit no locations
  - requires:
      with: 
        - Ledge_Grab
      to_reach: Glacier > Vertical Room > Peak

  # eventually_requires:
  #   Similar to requires and eventually_gets, runs the search algorithm a fixed number of steps
  #   to find the goal item, and fails if any route got the goal item but not the requirement(s).
  #   (Also fails if it never found the goal item.)
  - eventually_requires:
      expect: 
        Boomerang: 1
      to_obtain: Ledge_Grab
      iteration_limit: 100
