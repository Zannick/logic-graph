//! AUTOGENERATED FOR Axiom Verge 2 - MODIFICATIONS WILL BE LOST

#![allow(unused)]
#![allow(non_snake_case)]

use analyzer::context::Ctx;
use analyzer::world::*;
use analyzer::*;
use libaxiom_verge2::context::{Context, Status};
use libaxiom_verge2::graph::{self, *};
use libaxiom_verge2::items::Item;

fn shared_setup() -> (graph::World, Context) {
    let mut world = graph::World::new();
    let mut ctx = Context::default();
    ctx.ice_axe = true;
    ctx.amashilama = true;
    ctx.boomerang = true;
    ctx.ledge_grab = true;
    ctx.save = SpotId::Ebih__Base_Camp__Save_Point;

    (world, ctx)
}

#[test]
fn can_reach_Ebih__Ebih_East__Corner() {
    let (mut world, mut ctx) = shared_setup();

    expect_any_route!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        SpotId::Ebih__Ebih_East__Corner
    );
}
#[test]
fn can_obtain_Infect() {
    let (mut world, mut ctx) = shared_setup();

    expect_obtainable!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        Item::Infect
    );
}
#[test]
fn context_flasks_1_can_obtain_Melee_Damage() {
    let (mut world, mut ctx) = shared_setup();
    ctx.flasks = 1;

    expect_obtainable!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        Item::Melee_Damage
    );
}
