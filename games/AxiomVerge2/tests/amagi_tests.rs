//! AUTOGENERATED FOR Axiom Verge 2 - MODIFICATIONS WILL BE LOST

#![allow(unused)]
#![allow(non_snake_case)]

use analyzer::context::Ctx;
use analyzer::world::*;
use analyzer::*;
use libaxiom_verge2::context::{enums, Context, Status};
use libaxiom_verge2::graph::{self, *};
use libaxiom_verge2::items::Item;

fn shared_setup() -> (graph::World, Context) {
    let mut world = graph::World::new();
    let mut ctx = Context::default();
    ctx.amashilama = true;
    ctx.ledge_grab = true;
    ctx.boomerang = true;
    ctx.remote_drone = true;
    ctx.infect = true;
    ctx.mode = enums::Mode::Indra;
    ctx.save = SpotId::Ebih__Base_Camp__Save_Point;

    (world, ctx)
}

#[test]
fn can_reach_Amagi__Main_Area__Save_Point() {
    let (mut world, mut ctx) = shared_setup();

    expect_any_route!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        SpotId::Amagi__Main_Area__Save_Point
    );
}
#[test]
fn can_reach_Amagi__Liru_Room__Shrine() {
    let (mut world, mut ctx) = shared_setup();

    expect_any_route!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        SpotId::Amagi__Liru_Room__Shrine
    );
}
#[test]
fn can_reach_Amagi__Main_Area__West_Side() {
    let (mut world, mut ctx) = shared_setup();

    expect_any_route!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        SpotId::Amagi__Main_Area__West_Side
    );
}
#[test]
fn start_Amagi__Main_Area__West_Side_requires_with_Liru_to_activate_Amagi__Main_Area__Carving__Key_Combo(
) {
    let (mut world, mut ctx) = shared_setup();

    let mut ctx2 = ctx.clone();
    ctx2.liru = true;

    expect_action_inaccessible!(
        &world,
        ctx,
        SpotId::Amagi__Main_Area__West_Side,
        ActionId::Amagi__Main_Area__Carving__Key_Combo
    );
    expect_action_accessible!(
        &world,
        ctx2,
        SpotId::Amagi__Main_Area__West_Side,
        ActionId::Amagi__Main_Area__Carving__Key_Combo
    );
}
#[test]
fn start_Amagi__Main_Area__Carving_context_amagi__main_area__ctx__combo_True_can_access_Amagi__Main_Area__Way_Off_To_The_Side__Item(
) {
    let (mut world, mut ctx) = shared_setup();
    ctx.amagi__main_area__ctx__combo = true;

    expect_accessible!(
        &world,
        ctx,
        SpotId::Amagi__Main_Area__Carving,
        LocationId::Amagi__Main_Area__Way_Off_To_The_Side__Item
    );
}
#[test]
fn context_mode_drone_indra_Amagi__Main_Area__East_19_can_obtain_Liru() {
    let (mut world, mut ctx) = shared_setup();
    ctx.mode = enums::Mode::Drone;
    ctx.indra = SpotId::Amagi__Main_Area__East_19;

    expect_obtainable!(&world, ctx, SpotId::Ebih__Base_Camp__Save_Point, Item::Liru);
}
#[test]
fn start_Amagi__Main_Area__Save_Point_with_Liru_context_save_Amagi__Main_Area__Save_Point_can_reach_Ebih__Base_Camp__Save_Point(
) {
    let (mut world, mut ctx) = shared_setup();
    ctx.liru = true;
    ctx.save = SpotId::Amagi__Main_Area__Save_Point;

    expect_any_route!(
        &world,
        ctx,
        SpotId::Amagi__Main_Area__Save_Point,
        SpotId::Ebih__Base_Camp__Save_Point
    );
}
