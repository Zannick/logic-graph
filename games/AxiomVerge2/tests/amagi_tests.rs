//! AUTOGENERATED FOR Axiom Verge 2 - MODIFICATIONS WILL BE LOST

#![allow(unused)]
#![allow(non_snake_case)]

use analyzer::context::{Ctx, Wrapper};
use analyzer::world::*;
use analyzer::*;
use libaxiom_verge2::context::{enums, flags, Context, Status};
use libaxiom_verge2::graph::{self, *};
use libaxiom_verge2::items::Item;

fn shared_setup() -> (graph::World, Context) {
    let mut world = graph::World::new();
    world.condense_graph();
    let mut ctx = Context::default();
    ctx.cbits1.insert(flags::ContextBits1::AMASHILAMA);
    ctx.cbits2.insert(flags::ContextBits2::LEDGE_GRAB);
    ctx.cbits1.insert(flags::ContextBits1::BOOMERANG);
    ctx.cbits2.insert(flags::ContextBits2::REMOTE_DRONE);
    ctx.infect = 1;
    ctx.mode = enums::Mode::Indra;
    ctx.save = SpotId::Ebih__Base_Camp__Save_Point;

    (world, ctx)
}

#[test]
fn can_reach_Amagi__Main_Area__Save_Point() {
    let (mut world, mut ctx) = shared_setup();

    expect_any_route!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        SpotId::Amagi__Main_Area__Save_Point
    );
}
#[test]
fn can_reach_Amagi__Liru_Room__Shrine() {
    let (mut world, mut ctx) = shared_setup();

    expect_any_route!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        SpotId::Amagi__Liru_Room__Shrine
    );
}
#[test]
fn can_reach_Amagi__Main_Area__West_Side() {
    let (mut world, mut ctx) = shared_setup();

    expect_any_route!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        SpotId::Amagi__Main_Area__West_Side
    );
}
#[test]
fn start_Amagi__Main_Area__West_Side_requires_with_Underwater_Movement_to_activate_Amagi__Main_Area__Carving__Key_Combo(
) {
    let (mut world, mut ctx) = shared_setup();

    let mut ctx2 = ctx.clone();
    ctx2.cbits2.insert(flags::ContextBits2::UNDERWATER_MOVEMENT);

    expect_action_inaccessible!(
        &world,
        ctx,
        SpotId::Amagi__Main_Area__West_Side,
        ActionId::Amagi__Main_Area__Carving__Key_Combo
    );
    expect_action_accessible!(
        &world,
        ctx2,
        SpotId::Amagi__Main_Area__West_Side,
        ActionId::Amagi__Main_Area__Carving__Key_Combo
    );
}
#[test]
fn start_Amagi__Main_Area__Carving_context_amagi__main_area__ctx__combo_True_can_access_Amagi__Main_Area__Way_Off_To_The_Side__Item(
) {
    let (mut world, mut ctx) = shared_setup();
    ctx.cbits1
        .insert(flags::ContextBits1::AMAGI__MAIN_AREA__CTX__COMBO);

    expect_accessible!(
        &world,
        ctx,
        SpotId::Amagi__Main_Area__Carving,
        LocationId::Amagi__Main_Area__Way_Off_To_The_Side__Item
    );
}
#[test]
fn context_mode_drone_indra_Amagi__Main_Area__East_19_can_obtain_Underwater_Movement() {
    let (mut world, mut ctx) = shared_setup();
    ctx.mode = enums::Mode::Drone;
    ctx.indra = SpotId::Amagi__Main_Area__East_19;

    expect_obtainable!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        Item::Underwater_Movement
    );
}
#[test]
fn start_Amagi__Main_Area__Save_Point_with_Underwater_Movement_context_save_Amagi__Main_Area__Save_Point_can_reach_Ebih__Base_Camp__Save_Point(
) {
    let (mut world, mut ctx) = shared_setup();
    ctx.cbits2.insert(flags::ContextBits2::UNDERWATER_MOVEMENT);
    ctx.save = SpotId::Amagi__Main_Area__Save_Point;

    expect_any_route!(
        &world,
        ctx,
        SpotId::Amagi__Main_Area__Save_Point,
        SpotId::Ebih__Base_Camp__Save_Point
    );
}
#[test]
fn with_Underwater_Movement_can_obtain_Shockwave() {
    let (mut world, mut ctx) = shared_setup();
    ctx.cbits2.insert(flags::ContextBits2::UNDERWATER_MOVEMENT);

    expect_obtainable!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        Item::Shockwave
    );
}
#[test]
fn with_Underwater_Movement_can_reach_Amagi__West_Lake__Cavern_Refill_Station() {
    let (mut world, mut ctx) = shared_setup();
    ctx.cbits2.insert(flags::ContextBits2::UNDERWATER_MOVEMENT);

    expect_any_route!(
        &world,
        ctx,
        SpotId::Ebih__Base_Camp__Save_Point,
        SpotId::Amagi__West_Lake__Cavern_Refill_Station
    );
}
#[test]
fn start_Amagi__West_Lake__Cavern_Refill_Station_with_Underwater_Movement__Shockwave_context_energy_300_can_obtain_Defeat_MUS_A_M20(
) {
    let (mut world, mut ctx) = shared_setup();
    ctx.cbits2.insert(flags::ContextBits2::UNDERWATER_MOVEMENT);
    ctx.cbits2.insert(flags::ContextBits2::SHOCKWAVE);
    ctx.energy = 300;

    expect_obtainable!(
        &world,
        ctx,
        SpotId::Amagi__West_Lake__Cavern_Refill_Station,
        Item::Defeat_MUS_A_M20
    );
}
