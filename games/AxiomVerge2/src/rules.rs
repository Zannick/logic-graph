//! AUTOGENERATED FOR Axiom Verge 2 - MODIFICATIONS WILL BE LOST

#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(unused)]

use crate::context::*;
use crate::graph::*;
use crate::items::Item;
use crate::prices::Currency;
use crate::*;
use analyzer::context::Ctx;
use analyzer::world;

pub fn access_default(_ctx: &Context) -> bool {
    true
}

pub fn access_amashilama(ctx: &Context) -> bool {
    // Amashilama
    ctx.has(Item::Amashilama)
}
pub fn access_amashilama__notes_2053_02_27(ctx: &Context) -> bool {
    // Amashilama && Notes_2053_02_27
    (ctx.has(Item::Amashilama) && ctx.has(Item::Notes_2053_02_27))
}
pub fn access_amashilama_and_mode__drone(ctx: &Context) -> bool {
    // Amashilama and ^mode != 'drone'
    (ctx.has(Item::Amashilama) && ctx.mode() != enums::Mode::Drone)
}
pub fn access_apocalypse_bomb(ctx: &Context) -> bool {
    // Apocalypse_Bomb
    ctx.has(Item::Apocalypse_Bomb)
}
pub fn access_boomerang(ctx: &Context) -> bool {
    // Boomerang
    ctx.has(Item::Boomerang)
}
pub fn access_break_box(ctx: &Context) -> bool {
    // $break_box
    helper__break_box!(ctx)
}
pub fn access_grab(ctx: &Context) -> bool {
    // $grab
    helper__grab!(ctx)
}
pub fn access_grab_and_switch_40_12(ctx: &Context) -> bool {
    // $grab and Switch_40_12
    (helper__grab!(ctx) && ctx.has(Item::Switch_40_12))
}
pub fn access_grab_or_climb(ctx: &Context) -> bool {
    // $grab or $climb
    (helper__grab!(ctx) || helper__climb!(ctx))
}
pub fn access_health_upgrade_1(ctx: &Context) -> bool {
    // Health_Upgrade_1
    ctx.has(Item::Health_Upgrade_1)
}
pub fn access_mist_upgraded(ctx: &Context) -> bool {
    // Mist_Upgraded
    ctx.has(Item::Mist_Upgraded)
}
pub fn access_mode__drone(ctx: &Context) -> bool {
    // ^mode == 'drone'
    ctx.mode() == enums::Mode::Drone
}
pub fn access_not_amashilama(ctx: &Context) -> bool {
    // NOT Amashilama
    !ctx.has(Item::Amashilama)
}
pub fn access_not_within_menu_and_flasks__0(ctx: &Context) -> bool {
    // NOT WITHIN `Menu` and ^flasks > 0
    (!(match get_region(ctx.position()) {
        RegionId::Menu => true,
        _ => false,
    }) && ctx.flasks() > 0)
}
pub fn access_offset(ctx: &Context) -> bool {
    // $offset
    helper__offset!(ctx)
}
pub fn access_placeholder(ctx: &Context) -> bool {
    // Placeholder
    ctx.has(Item::Placeholder)
}
pub fn access_station_power(ctx: &Context) -> bool {
    // Station_Power
    ctx.has(Item::Station_Power)
}
pub fn access_switch_36_11(ctx: &Context) -> bool {
    // Switch_36_11
    ctx.has(Item::Switch_36_11)
}
pub fn access_switch_40_12(ctx: &Context) -> bool {
    // Switch_40_12
    ctx.has(Item::Switch_40_12)
}
pub fn access_within_antarctica(ctx: &Context) -> bool {
    // WITHIN `Antarctica`
    (match get_region(ctx.position()) {
        RegionId::Antarctica => true,
        _ => false,
    })
}
pub fn access_within_menu(ctx: &Context) -> bool {
    // WITHIN `Menu`
    (match get_region(ctx.position()) {
        RegionId::Menu => true,
        _ => false,
    })
}
pub fn action_energy__1(ctx: &mut Context) {
    // ^energy += 1
    ctx.energy += 1;
}
pub fn action_has_effect_energy__1(ctx: &Context) -> bool {
    0 != 1
}
pub fn action_flasks__1(ctx: &mut Context) {
    // ^flasks += 1
    ctx.flasks += 1;
}
pub fn action_has_effect_flasks__1(ctx: &Context) -> bool {
    0 != 1
}
pub fn action_last__position(ctx: &mut Context) {
    // ^last = ^position
    ctx.last = ctx.position();
}
pub fn action_has_effect_last__position(ctx: &Context) -> bool {
    ctx.last != ctx.position()
}
pub fn action_save__glacier__revival__save_point(ctx: &mut Context) {
    // ^save = `Glacier > Revival > Save Point`
    ctx.save = SpotId::Glacier__Revival__Save_Point;
}
pub fn action_has_effect_save__glacier__revival__save_point(ctx: &Context) -> bool {
    ctx.save != SpotId::Glacier__Revival__Save_Point
}
pub fn action_save__position(ctx: &mut Context) {
    // ^save = ^position
    ctx.save = ctx.position();
}
pub fn action_has_effect_save__position(ctx: &Context) -> bool {
    ctx.save != ctx.position()
}
