name: Axiom Verge 2

context:  # MARK: context
  energy:
    max: 450
  flasks:
    max: 100
  refills:
    max: 4
  mode:
    opts: [Indra, drone]
    default: Indra

start:  # MARK: start
  position: Antarctica > West > Helipad
  save: Antarctica > West > Helipad
  breach_save: SpotId::None
  # By itself 'None' would be interpreted as a string,
  # which becomes its own independent per-variable enum type.
  indra: SpotId::None
  last: SpotId::None
  portal: SpotId::None
  prev_portal: SpotId::None
  prev_area: Antarctica > West
  # TODO: Destination spot for glitches

data:  # MARK: data
  realm: main
  water: false
  flipside: SpotId::None
  portal_start: SpotId::None
  portal_hidden: false
  save_point: SpotId::None
  map_spot: SpotId::None
  # fallthrough: SpotId::None  # Where Indra will fall to if the room is reset

rules:  # MARK: rules
  $victory:
    default: "[Escape, Apocalypse_Bomb, $objective]"
    just_objective: "[$objective]"
    bench: "[Remote_Drone, Flask{6}]"
  $objective:
    Any%: "[Infect, Nanite_Mist]"
    # Greedy search will have a problem with purchases if there are insufficient funds;
    # it will never consider skipping what's available and may be unable to buy something
    # necessary.
    All Items: >
      [$all_urns, $all_weapons, $other_items, $all_notes, $all_health, $all_flasks]
    All Urns: "[$all_urns]"

base_movements:  # MARK: base_movements
  - # the slowest movement is in water
    # a grid line = 1 unit. each minimap pixel is about .1 unit
    x: .222  # about 4.5s per grid x-unit underwater if we don't have liru
    fall: 1  # TODO: is fall speed any different?
    jump: 1  # can vary with jump height, so take a rough estimate of usual
    jump_down: .1
  - data:
      water: false
    x: .285  # about 3.5s per grid x-unit
    jump: .6  # can vary with jump height, so take a rough estimate of usual
    # max jump height is around .2, with Anuman it reaches .3... TODO: real measurement
    # hover can reach a height of .3 in about 100-110 frames, so 3 "jumps"
    # Anuman jump plus shift into hover could get even higher
    # other speeds apply
  - data:
      realm: map
    # approximate speeds using the right stick zoomed-out; it can be faster using both but tricky
    x: 15
    y: 10

movements:  # MARK: movements
  water:
    x: .285
    req: Underwater_Movement
  # TODO: anuman "movement" of constantly changing form?

exit_movements:  # MARK: exit_movements
  # drone slingshot+hover is faster x movement but is pretty circumstantial
  # *and* limited
  # But with just throw + hover, can cover about 2.5 in ~6s / 1 in 2.5s
  # aka ~.4-.416 speed in one direction for around 6s max
  fast_hover:
    x: .4
  fling:
    x: .75
  # TODO: does water affect this?
  mist1:
    ignore_base: true
    x: .1425  # ?
    y: .25
    # Actual price is 30/sec with no base, but we want a buffer
    # to ensure feasibility if it winds up very tight.
    price_per_sec: 33
    base_price: 5
  mist2:
    ignore_base: true
    # roughly .4 at a diagonal...
    x: .285
    y: .5
    # Actual price is 30/sec with no base, but we want a buffer
    # to ensure feasibility if it winds up very tight.
    price_per_sec: 33
    base_price: 5
    # it takes ~.6 seconds to exit form (though you might use that to keep moving)
  platform:
    ignore_base: true
    x: .138
    y: .24
    # technically uses xy (ortho) movement but x!=y
  bubbles:
    # Breaking bubbles while falling as drone
    fall: 0.9  # ?
  water_bubbles:
    x: .285
    fall: 0.9

time:  # MARK: time
  default: 1
  ## Pickups
  urn: 5.5
  flask: 5.5
  # when grabbing the urn/flask with the boomerang over x distance
  # the upgraded boomerang has a longer reach but approximately the same speed as indra
  # so there's little difference
  # TODO: should this be the same as urn but disallow savewarping for a second? to allow for arbitrary movement/fast travel?
  # without having to encode every possibility as a hybrid
  remote_urn: 6.5
  remote_flask: 6.5
  # when grabbing the urn/flask with the boomerang while falling or otherwise closer
  nearby_urn: 6
  nearby_flask: 6
  throw: 0.5
  # The remote boomerang has a slower speed but can go a more variable amount of distance
  # so we need a speed reference to estimate or time each one

  # item is freestanding -> can be picked up with no delay
  standing: 0

  ## common actions
  save: 1.3
  shockwave: 3.5  # even when shockwaving flasks and urns. price=100
  hack: 0.5
  button: 0.1  # melee button
  susar: 3.0  # caught by susar
  combo: 1.75  # entering a key combo
  # need to test slingshot charge time

  ## Transitions
  xshift: 1.35  # sometimes 1.2, sometimes 1.5?
  yshift: .83  # 50 frames-ish
  yfade: 1.5
  # When areas use connecting doors
  xdoor: 1.6  # up to 2??
  ydoor: 1.6
  # Some doors are just longer to go through
  # Doors leading inside/outside
  interior: 0.75
  exterior: 0.75
  tent: 0.25
  cave: 0.25
  # Portals
  portal: 3.6
  exit: 3

  charge_time: 1
  cskip: 0.2

  ## Penalties
  # When movements are calculated ignoring transitions, we have to add *back* the transition time
  # without double-counting the movement between transition points
  # (measured as .1 for open-air, and .2 for doors and vertical open-air, and .4 for vertical doors).
  # The movement time to subtract is dependent on the exit.
  # e.g. a movement speed of .4 means that .1 distance is traversed in 0.25 seconds
  # Note that vertical transitions have to use the fall speed to determine time
  fast_hover.1: 0.25
  fast_hover.2: 0.50
  base.1: 0.35
  fall.2: 0.2
  mist1.2: 0.8
  mist2.2: 0.4

warps:  # MARK: warps
  # initial savewarp pre-amashi
  earth_save:
    time: 3  # IGT goes backward due to the fadeout not counting
    req: allow_warps and WITHIN `Antarctica`
    to: ^save
    after: $reload
    loads: true
  main_save:
    time: 10.5  # IGT goes backward due to the fadeout not counting
    req: allow_warps and ^realm IN ['main', 'interior', 'emergence'] and Amashilama and not Apocalypse_Bomb
    to: ^save
    after: $reload
    loads: true
    penalties:
      - when: ^mode != 'drone'
        add: 2.5
  breach_save:
    time: 10.5
    req: allow_warps and ^realm == 'breach' and ^breach_save != $default and not Apocalypse_Bomb
    to: ^breach_save
    after: $reload
    loads: true
  menu:
    time: 1
    req: NOT WITHIN `Menu` and ^flasks > 0
    to: Menu > Upgrade Menu > Physiology
    before: ^last = ^position
    bulk_exit: true
  exit_menu:
    time: 0.2
    req: WITHIN `Menu > Upgrade Menu`
    to: ^last
    after: ^last = $default
  exit_breach:
    time: 3
    req: ^realm == 'breach' and Exit_Breach and ^flipside != $default
    to: ^flipside
    after: $clear_breach_save
    bulk_exit: true
    tags: [exit]
  # Fast travels are technically doable from the menu, but it costs time to switch tabs, so just model that
  # as exit menu time.
  # Fast travel isn't possible across realms: main/kiengir, breach, emergence, filter, interior(!)
  fast_travel_kiengir:
    time: 0.1
    req: allow_warps and $ft_main and (^map_spot WITHIN `Menu > Kiengir Map`) and not Apocalypse_Bomb
    to: ^map_spot
  fast_travel_breach:
    time: 0.1
    req: allow_warps and $ft_breach and (^map_spot WITHIN `Menu > Breach Map`) and not Apocalypse_Bomb
    to: ^map_spot
  portal:
    req: ^mode == 'drone' and ^portal == ^position and ^flipside != $default and (not ^portal_hidden or Breach_Sight) and not Apocalypse_Bomb
    to: ^flipside
    after: $post_portal_save_update
    time: 3.6
    bulk_exit: true
    penalties:
      - when: ^portal_hidden
        add: 0.25
    tags: [portal]

actions:  # MARK: actions
  - name: Recall Drone
    req: NOT WITHIN `Menu` and ^realm != 'breach' and $can_recall
    do: ^mode = 'Indra'
    to: ^indra
    after: ^indra = $default
    # Can open the menu during this time
    time: 3  # it's slightly less in-area
  - name: Recall Fast Travel
    req: allow_warps and NOT WITHIN `Menu` and $ft_main and $can_recall and ^map_spot != $default
    do: ^mode = 'Indra'; ^last = ^indra
    to: ^map_spot  # Starts map movement in a different place
    after: ^indra = $default
    time: 2  # Slight bonus to time for starting map movement immediately, but actually can't be less than recall time
  - name: Deploy Drone
    req: NOT WITHIN `Menu` and $can_deploy
    do: ^mode = 'drone'; ^indra = ^position
    time: 0.5
  - name: Become Drone
    req: NOT WITHIN `Menu` and Anuman and ^mode != 'drone'
    do: ^mode = 'drone'
    time: 0.1
  - name: Become Indra
    req: NOT WITHIN `Menu` and ^realm != 'breach' and Anuman and ^mode == 'drone'
    do: ^mode = 'Indra'
    time: 0.1
  - name: Move Portal Here
    req: NOT WITHIN `Menu` and $attract and ^portal != $default and ^portal != ^position
    do: ^portal = ^position
    time: 0.1
    penalties:
      # TODO: measure portal speed
      - calc: $spot_distance(^position, ^portal) * 2.0

helpers:  # MARK: helpers
  $weapon: Ice_Axe  # this should be expanded for randomizers but probably isn't necessary for the vanilla search
  $melee: $weapon or ^mode == 'drone'
  $boomerang: ^mode != 'drone' and (Boomerang or Boomerang_Upgrade)
  $boomerang2: ^mode != 'drone' and Boomerang_Upgrade
  $remote_boomerang: ^mode != 'drone' and Remote_Boomerang
  $can_damage: $melee or Boomerang or Boomerang_Upgrade
  $grab: ^mode != 'drone' and Ledge_Grab
  $climb: ^mode != 'drone' and Wall_Climb
  $hook: ^mode == 'drone' and Slingshot_Hook
  $hover: ^mode == 'drone' and Drone_Hover
  $charge: ^mode == 'drone' and Slingshot_Hook and Slingshot_Charge
  $spin: ^mode == 'drone' and Slingshot_Hook and Slingshot_Weapon
  $hookhover: ^mode == 'drone' and Slingshot_Hook and Drone_Hover
  $chargehover: ^mode == 'drone' and Slingshot_Hook and Slingshot_Charge and Drone_Hover
  $spinhover: ^mode == 'drone' and Slingshot_Hook and Slingshot_Weapon and Drone_Hover

  $can_deploy: Remote_Drone and ^mode != 'drone' and not Anuman
  $can_recall: ^mode == 'drone' and not Anuman and not Separation
  $shockwave: ^mode != 'drone' and Shockwave

  $open: Infect
  $activate: Infect
  $platform: Infect
  $overheat: Infect
  $slow: Infect
  $sync: Infect
  $allegiance1: Infect
  $allegiance2: Infect_L1
  $unlock2: Infect_L1
  $unlock3: Infect_L2
  $unlock4: Infect_L3

  $mist2: Nanite_Mist and Mist_Upgrade

  $ft_main: Fast_Travel and ^realm == 'main'
  $ft_breach: Fast_Travel and ^realm == 'breach'

  # shockwave range: ~.2 in width (.35 height)
  # boomerang range: ~.325 in width? .25 in .5s, .325 in ~.8s
  # upgraded boomerang: ~.39, pretty much .4; .3 in .5s, ~.4 in ~.75s
  # infection ranges (approx)
  # .185, .22, .26, .30
  # drone has one "level" less, at 0 it's ~.15?
  $range1: Infection_Range_2 or (Infection_Range and ^mode != 'drone')
  $range2: Infection_Range_3 or (Infection_Range_2 and ^mode != 'drone')
  $range3: Infection_Range_3 and ^mode != 'drone'

  $more_refills: ^refills < $count(Power_Matrix)

  $max_energy:num: PER Nano_Points { 3 => 450, 2 => 400, 1 => 350, _ => 300 }

  # glitches
  $bs: boomerang_steering and $boomerang
  $offset: major_glitches and $weapon
  $block_clip: minor_glitches and ^mode == 'drone'
  $block_clip_escape: minor_glitches and $hook

  # tricks
  $infinite_climb: Anuman and Wall_Climb and Remote_Drone and Drone_Hover
  $melee_cskip: ($weapon and indra_cskip) or ^mode == 'drone'

  # TODO: this is a temporary hack around the attract issue #131
  # TODO: to be tested: does indra affect drone portal attraction when she's inside? or between Kiengir/Emergence?
  $attract: Breach_Attractor and (Anuman or Separation or ^mode != 'drone' or ^indra == ^position or ^realm == 'breach')

  $all_notes:itemList: >
    [Dear_Ernest, Researchers_Missing, Letter_from_Trace,
     Heretics_Tablet, Terminal_Breakthrough_1, Companies_Layoff, Record_Losses,
     Under_Siege, The_Ideal_Kiengir, Building_of_the_School, Commemorative_Speech,
     Terminal_Breakthrough_2, Dangerous_Ideas, Storm_Bomb, Suspension_Bridge, Plague_of_Thoughts,
     Lament_for_Fools, Family_Tragedy, Destruction_Pogrom, The_Eternal_Arm, Beware_the_Patternmind, Dr_Gloria,
     Goodbye, Notes_2053_02_27, Forbidden_Knowledge, The_Student, Freedom_from_Aansur, Heretics_Granddaughter,
     Bounty_List, Submarine_Progress, Becoming_An_Arm]
  # TODO: can we check canon visits rather than reserve an i8?
  # Pending Big_Flask: Annuna Mirror Match
  $all_flasks:itemList: >
    [Flask{32}, Big_Flask{14}]
  $all_health:itemList: >
    [Health_Node{2}, Health_Fragment{16}]
  $all_weapons:itemList: >
    [Boomerang, Ice_Axe, Bronze_Axe, Royal_Dagger, Double_Axe]
  $other_items:itemList: >
    [Compass, Power_Matrix{4}, Nano_Lattice_2, Eye_Ring, Breach_Attractor, Udusan, Carnelian_Ring, Nano_Lattice_1,
     Diviners_Gem]
  $all_urns:itemList: >
    [Amashilama, Ledge_Grab, Melee_Charge, Infect, Remote_Drone, Shockwave, Wall_Climb, Slingshot_Hook, Breach_Sight,
     Drone_Hover, Fast_Travel, Anuman, Nanite_Mist, Exit_Breach, Drone_Melee_Charge, Slingshot_Charge]

  # TODO: If the conditional is data-only, can we automatically solve it before render?
  $save:action: IF (^realm == 'breach') { ^breach_save = ^position; } ELSE { ^save = ^position; }; $refill_energy
  # Otherwise we can hardcode for a small performance improvement to avoid the branch
  $breach_save:action: ^breach_save = ^position; $refill_energy
  $refill_energy:action: ^energy = $max_energy
  $deploy_drone:action: >
    ^mode = 'drone'; ^indra = ^position;
  $deploy_drone_and_move:action(indrapos:SpotId): >
    ^mode = 'drone'; ^indra = ^indrapos;

  # entry rules
  # This is important for any area that's not really a room
  $save_last:action: IF (^last == $default) { ^last = ^position }
  # ^position is the old value
  # testing to see if area(newpos) != area(position) != prev_area
  # and we aren't coming from the menu. If so, then we check if we're returning to prev_area.
  # If we are, we just make the current area the prev_area (i.e. swap).
  # But if not, then we reset that area and same the area we are leaving.
  # Case 2. The "Warp Only" area allows warps but does not count toward prev_area.
  # Instead, we save the actual player position at ^last and use that.
  $reset_old_area:action(newpos:SpotId): >
    IF (^position NOT WITHIN `Menu`
        AND ^position NOT WITHIN ^prev_area
        AND ^newpos NOT WITHIN $get_area(^position)) {
            IF (^newpos NOT WITHIN ^prev_area) {
                $reset_area(^prev_area);
                ^prev_portal = ^portal;
                ^portal = @^newpos^portal_start;
            } ELSE {
                SWAP ^portal, ^prev_portal;
            };
            ^prev_area = $get_area(^position);
            ^last = $default;
    } ELSE IF (^position WITHIN (`Menu > Warp Only`, `Menu > Kiengir Map`, `Menu > Breach Map`)
               AND ^last NOT WITHIN ^prev_area
               AND ^newpos NOT WITHIN $get_area(^last)) {
                  IF (^newpos NOT WITHIN ^prev_area) {
                      $reset_area(^prev_area);
                      ^prev_portal = ^portal;
                      ^portal = @^newpos^portal_start;
                  } ELSE {
                      SWAP ^portal, ^prev_portal;
                  };
                  ^prev_area = $get_area(^last);
                  ^last = $default;
    }
  # Breach portals are tied to particular save points in the breach,
  # basically whenever you portal into a room, you get assigned that room's save point.
  # TODO: Is this true of portals leaving the breach? Of portals leaving the breach that aren't attached to save points?
  # TODO: To be tested: off-screen breach portals use a) the portal's intended default, b) the entered breach room's default,
  # c) neither (last breach save point?)
  $post_portal_save_update:action: >
    IF (^save_point != $default) {
        IF (^realm == 'breach') {
            ^breach_save = ^save_point;
        } ELSE {
            ^save = ^save_point;
        }
    }
  $clear_breach_save:action: ^breach_save = $default
  $reload:action: ^prev_area = $get_area(^position); ^portal = ^portal_start; ^prev_portal = ^portal; $refill_energy

collect:  # MARK: collect
  Amashilama: ^save = `Glacier > Revival > Save Point`
  Anuman: ^indra = $default
  Flask: ^flasks += 1
  Big_Flask: ^flasks += 2
  Infect: $refill_energy
  Health_Fragment: $refill_energy
  Health_Node: $refill_energy
  Power_Core: ^refills += 1
  Amagi_Stronghold_Wall_And_Boulder_1: >
    $visit(`Amagi > West Lake > Stronghold Ceiling Left > Knock Down Left Boulder`);
    $add_item(Amagi_Stronghold_Wall_1);
    $add_item(Amagi_Stronghold_Boulder_1);
  Amagi_Stronghold_Boulder_And_Wall_2: >
    $visit(`Amagi > West Lake > Stronghold Ceiling Right > Knock Down Right Boulder`);
    $add_item(Amagi_Stronghold_Wall_2);
    $add_item(Amagi_Stronghold_Boulder_2);
  Ebih_Waterfall_Both_Blocks: >
    $visit(`Ebih > Waterfall > Alcove > Block Left`);
    $visit(`Ebih > Waterfall > Alcove > Block Right`);
    $add_item(Ebih_Waterfall_Block_Right);
    $add_item(Ebih_Waterfall_Block_Left);
  Defeat_MUS_A_M20:
    $visit(`Amagi > West Lake > Cavern Refill Station > Break Wall`);
    $add_item(Amagi_Dragon_Eye_Passage);
  Separation:
    $visit(`Giguna > Separator > Upper Brick > Break Bricks`);
    $add_item(Giguna_Separator_Bricks);
    ^indra = $default;

settings:  # MARK: settings
  boomerang_steering:
    type: bool
  major_glitches:
    type: bool
  minor_glitches:
    type: bool
  allow_warps:
    type: bool
    default: true
  indra_cskip:
    type: bool

special:  # MARK: special
  # For World.png,
  # a tile is 432x240, and split into 27x15 16x16 squares
  # scaled to 50%, it's 216x120. scaled to 10/24, it's 180x100
  graph_scale: [216, -120]
  graph_exclude_tags: [interior, exterior, portal, cskip, warp, menu]
  map_ppi: 72
  map_file: AV2-World-50%.png  # contact me
  map_min_coord: [0, -1]
  map_max_coord: [46, 90]
  unplaced_items: [Remote_Boomerang, Slingshot_Charge, Slingshot_Weapon]
  ignore_observations:
    - prev_area
