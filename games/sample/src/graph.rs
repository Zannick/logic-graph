//! AUTOGENERATED FOR sample - DO NOT MODIFY
//!
//! Context (game state).

#![allow(non_camel_case_types)]
#![allow(non_snake_case)]

use crate::context::*;
use crate::items::*;
use crate::prices::Currency;
use crate::rules;
use analyzer::context::Ctx;
use analyzer::world;
use enum_map::{enum_map, Enum, EnumMap};
use std::fmt;
use std::ops::Range;
use std::option::Option;

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum)]
pub enum RegionId {
    Deku_Tree,
    Kak,
    KF,
}
impl fmt::Display for RegionId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            RegionId::Deku_Tree => write!(f, "{}", "Deku Tree"),
            RegionId::Kak => write!(f, "{}", "Kakariko Village"),
            RegionId::KF => write!(f, "{}", "Kokiri Forest"),
        }
    }
}
impl analyzer::world::Id for RegionId {}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum)]
pub enum AreaId {
    Deku_Tree__Back_Room,
    Deku_Tree__Basement_1,
    Deku_Tree__Basement_2,
    Deku_Tree__Basement_Ledge,
    Deku_Tree__Boss_Room,
    Deku_Tree__Compass_Room,
    Deku_Tree__Floor_2,
    Deku_Tree__Floor_3,
    Deku_Tree__Lobby,
    Deku_Tree__Scrub_Room,
    Deku_Tree__Skull_Room,
    Deku_Tree__Slingshot_Room,
    Deku_Tree__Slingshot_Upper,
    Kak__Spider_House,
    KF__Baba_Corridor,
    KF__Boulder_Maze,
    KF__Knowitall_House,
    KF__Kokiri_Village,
    KF__Links_House,
    KF__Midos_House,
    KF__Outside_Deku_Tree,
    KF__Shop,
}
impl fmt::Display for AreaId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            AreaId::Deku_Tree__Back_Room => write!(f, "{}", "Deku Tree > Back Room"),
            AreaId::Deku_Tree__Basement_1 => write!(f, "{}", "Deku Tree > Basement 1"),
            AreaId::Deku_Tree__Basement_2 => write!(f, "{}", "Deku Tree > Basement 2"),
            AreaId::Deku_Tree__Basement_Ledge => write!(f, "{}", "Deku Tree > Basement Ledge"),
            AreaId::Deku_Tree__Boss_Room => write!(f, "{}", "Deku Tree > Boss Room"),
            AreaId::Deku_Tree__Compass_Room => write!(f, "{}", "Deku Tree > Compass Room"),
            AreaId::Deku_Tree__Floor_2 => write!(f, "{}", "Deku Tree > Floor 2"),
            AreaId::Deku_Tree__Floor_3 => write!(f, "{}", "Deku Tree > Floor 3"),
            AreaId::Deku_Tree__Lobby => write!(f, "{}", "Deku Tree > Lobby"),
            AreaId::Deku_Tree__Scrub_Room => write!(f, "{}", "Deku Tree > Scrub Room"),
            AreaId::Deku_Tree__Skull_Room => write!(f, "{}", "Deku Tree > Skull Room"),
            AreaId::Deku_Tree__Slingshot_Room => write!(f, "{}", "Deku Tree > Slingshot Room"),
            AreaId::Deku_Tree__Slingshot_Upper => write!(f, "{}", "Deku Tree > Slingshot Upper"),
            AreaId::Kak__Spider_House => write!(f, "{}", "Kak > Spider House"),
            AreaId::KF__Baba_Corridor => write!(f, "{}", "KF > Baba Corridor"),
            AreaId::KF__Boulder_Maze => write!(f, "{}", "KF > Boulder Maze"),
            AreaId::KF__Knowitall_House => write!(f, "{}", "KF > Know-it-all House"),
            AreaId::KF__Kokiri_Village => write!(f, "{}", "KF > Kokiri Village"),
            AreaId::KF__Links_House => write!(f, "{}", "KF > Link's House"),
            AreaId::KF__Midos_House => write!(f, "{}", "KF > Mido's House"),
            AreaId::KF__Outside_Deku_Tree => write!(f, "{}", "KF > Outside Deku Tree"),
            AreaId::KF__Shop => write!(f, "{}", "KF > Shop"),
        }
    }
}
impl analyzer::world::Id for AreaId {}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, Default)]
pub enum SpotId {
    #[default]
    None,
    Deku_Tree__Back_Room__East,
    Deku_Tree__Back_Room__Northwest,
    Deku_Tree__Back_Room__South,
    Deku_Tree__Basement_1__Center,
    Deku_Tree__Basement_1__Corner,
    Deku_Tree__Basement_1__South_Door,
    Deku_Tree__Basement_2__Boss_Door,
    Deku_Tree__Basement_2__Pool,
    Deku_Tree__Basement_Ledge__Block,
    Deku_Tree__Basement_Ledge__Web,
    Deku_Tree__Boss_Room__Arena,
    Deku_Tree__Boss_Room__Entry,
    Deku_Tree__Compass_Room__Compass,
    Deku_Tree__Compass_Room__Entry,
    Deku_Tree__Compass_Room__Ledge,
    Deku_Tree__Floor_2__Lower,
    Deku_Tree__Floor_2__Slingshot_Door,
    Deku_Tree__Floor_2__Vines,
    Deku_Tree__Floor_3__Climb,
    Deku_Tree__Floor_3__Door,
    Deku_Tree__Lobby__Center,
    Deku_Tree__Lobby__Entry,
    Deku_Tree__Lobby__Vines,
    Deku_Tree__Scrub_Room__Entry,
    Deku_Tree__Scrub_Room__Rear,
    Deku_Tree__Skull_Room__Entry,
    Deku_Tree__Slingshot_Room__Entry,
    Deku_Tree__Slingshot_Room__Slingshot,
    Deku_Tree__Slingshot_Upper__Ledge,
    Kak__Spider_House__Entry,
    KF__Baba_Corridor__Deku_Babas,
    KF__Baba_Corridor__Tree_Side,
    KF__Baba_Corridor__Village_Side,
    KF__Boulder_Maze__Entry,
    KF__Boulder_Maze__Reward,
    KF__Knowitall_House__Entry,
    KF__Kokiri_Village__Knowitall_Porch,
    KF__Kokiri_Village__Links_Porch,
    KF__Kokiri_Village__Midos_Guardpost,
    KF__Kokiri_Village__Midos_Porch,
    KF__Kokiri_Village__Sarias_Porch,
    KF__Kokiri_Village__Shop_Porch,
    KF__Kokiri_Village__Training_Center,
    KF__Links_House__Entry,
    KF__Links_House__Start_Point,
    KF__Midos_House__Entry,
    KF__Outside_Deku_Tree__Entry,
    KF__Outside_Deku_Tree__Left,
    KF__Outside_Deku_Tree__Mouth,
    KF__Outside_Deku_Tree__Right,
    KF__Shop__Entry,
}
impl fmt::Display for SpotId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            SpotId::None => write!(f, "{}", "None"),
            SpotId::Deku_Tree__Back_Room__East => write!(f, "{}", "Deku Tree > Back Room > East"),
            SpotId::Deku_Tree__Back_Room__Northwest => {
                write!(f, "{}", "Deku Tree > Back Room > Northwest")
            }
            SpotId::Deku_Tree__Back_Room__South => write!(f, "{}", "Deku Tree > Back Room > South"),
            SpotId::Deku_Tree__Basement_1__Center => {
                write!(f, "{}", "Deku Tree > Basement 1 > Center")
            }
            SpotId::Deku_Tree__Basement_1__Corner => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner")
            }
            SpotId::Deku_Tree__Basement_1__South_Door => {
                write!(f, "{}", "Deku Tree > Basement 1 > South Door")
            }
            SpotId::Deku_Tree__Basement_2__Boss_Door => {
                write!(f, "{}", "Deku Tree > Basement 2 > Boss Door")
            }
            SpotId::Deku_Tree__Basement_2__Pool => write!(f, "{}", "Deku Tree > Basement 2 > Pool"),
            SpotId::Deku_Tree__Basement_Ledge__Block => {
                write!(f, "{}", "Deku Tree > Basement Ledge > Block")
            }
            SpotId::Deku_Tree__Basement_Ledge__Web => {
                write!(f, "{}", "Deku Tree > Basement Ledge > Web")
            }
            SpotId::Deku_Tree__Boss_Room__Arena => write!(f, "{}", "Deku Tree > Boss Room > Arena"),
            SpotId::Deku_Tree__Boss_Room__Entry => write!(f, "{}", "Deku Tree > Boss Room > Entry"),
            SpotId::Deku_Tree__Compass_Room__Compass => {
                write!(f, "{}", "Deku Tree > Compass Room > Compass")
            }
            SpotId::Deku_Tree__Compass_Room__Entry => {
                write!(f, "{}", "Deku Tree > Compass Room > Entry")
            }
            SpotId::Deku_Tree__Compass_Room__Ledge => {
                write!(f, "{}", "Deku Tree > Compass Room > Ledge")
            }
            SpotId::Deku_Tree__Floor_2__Lower => write!(f, "{}", "Deku Tree > Floor 2 > Lower"),
            SpotId::Deku_Tree__Floor_2__Slingshot_Door => {
                write!(f, "{}", "Deku Tree > Floor 2 > Slingshot Door")
            }
            SpotId::Deku_Tree__Floor_2__Vines => write!(f, "{}", "Deku Tree > Floor 2 > Vines"),
            SpotId::Deku_Tree__Floor_3__Climb => write!(f, "{}", "Deku Tree > Floor 3 > Climb"),
            SpotId::Deku_Tree__Floor_3__Door => write!(f, "{}", "Deku Tree > Floor 3 > Door"),
            SpotId::Deku_Tree__Lobby__Center => write!(f, "{}", "Deku Tree > Lobby > Center"),
            SpotId::Deku_Tree__Lobby__Entry => write!(f, "{}", "Deku Tree > Lobby > Entry"),
            SpotId::Deku_Tree__Lobby__Vines => write!(f, "{}", "Deku Tree > Lobby > Vines"),
            SpotId::Deku_Tree__Scrub_Room__Entry => {
                write!(f, "{}", "Deku Tree > Scrub Room > Entry")
            }
            SpotId::Deku_Tree__Scrub_Room__Rear => write!(f, "{}", "Deku Tree > Scrub Room > Rear"),
            SpotId::Deku_Tree__Skull_Room__Entry => {
                write!(f, "{}", "Deku Tree > Skull Room > Entry")
            }
            SpotId::Deku_Tree__Slingshot_Room__Entry => {
                write!(f, "{}", "Deku Tree > Slingshot Room > Entry")
            }
            SpotId::Deku_Tree__Slingshot_Room__Slingshot => {
                write!(f, "{}", "Deku Tree > Slingshot Room > Slingshot")
            }
            SpotId::Deku_Tree__Slingshot_Upper__Ledge => {
                write!(f, "{}", "Deku Tree > Slingshot Upper > Ledge")
            }
            SpotId::Kak__Spider_House__Entry => write!(f, "{}", "Kak > Spider House > Entry"),
            SpotId::KF__Baba_Corridor__Deku_Babas => {
                write!(f, "{}", "KF > Baba Corridor > Deku Babas")
            }
            SpotId::KF__Baba_Corridor__Tree_Side => {
                write!(f, "{}", "KF > Baba Corridor > Tree Side")
            }
            SpotId::KF__Baba_Corridor__Village_Side => {
                write!(f, "{}", "KF > Baba Corridor > Village Side")
            }
            SpotId::KF__Boulder_Maze__Entry => write!(f, "{}", "KF > Boulder Maze > Entry"),
            SpotId::KF__Boulder_Maze__Reward => write!(f, "{}", "KF > Boulder Maze > Reward"),
            SpotId::KF__Knowitall_House__Entry => write!(f, "{}", "KF > Know-it-all House > Entry"),
            SpotId::KF__Kokiri_Village__Knowitall_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Know-it-all Porch")
            }
            SpotId::KF__Kokiri_Village__Links_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Link's Porch")
            }
            SpotId::KF__Kokiri_Village__Midos_Guardpost => {
                write!(f, "{}", "KF > Kokiri Village > Mido's Guardpost")
            }
            SpotId::KF__Kokiri_Village__Midos_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Mido's Porch")
            }
            SpotId::KF__Kokiri_Village__Sarias_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Saria's Porch")
            }
            SpotId::KF__Kokiri_Village__Shop_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Shop Porch")
            }
            SpotId::KF__Kokiri_Village__Training_Center => {
                write!(f, "{}", "KF > Kokiri Village > Training Center")
            }
            SpotId::KF__Links_House__Entry => write!(f, "{}", "KF > Link's House > Entry"),
            SpotId::KF__Links_House__Start_Point => {
                write!(f, "{}", "KF > Link's House > Start Point")
            }
            SpotId::KF__Midos_House__Entry => write!(f, "{}", "KF > Mido's House > Entry"),
            SpotId::KF__Outside_Deku_Tree__Entry => {
                write!(f, "{}", "KF > Outside Deku Tree > Entry")
            }
            SpotId::KF__Outside_Deku_Tree__Left => write!(f, "{}", "KF > Outside Deku Tree > Left"),
            SpotId::KF__Outside_Deku_Tree__Mouth => {
                write!(f, "{}", "KF > Outside Deku Tree > Mouth")
            }
            SpotId::KF__Outside_Deku_Tree__Right => {
                write!(f, "{}", "KF > Outside Deku Tree > Right")
            }
            SpotId::KF__Shop__Entry => write!(f, "{}", "KF > Shop > Entry"),
        }
    }
}
impl analyzer::world::Id for SpotId {}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum)]
pub enum LocationId {
    Deku_Tree__Back_Room__Northwest__Break_Wall,
    Deku_Tree__Back_Room__Northwest__Burn_Web,
    Deku_Tree__Basement_1__Center__Vines_GS,
    Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
    Deku_Tree__Basement_1__Corner__Chest,
    Deku_Tree__Basement_1__Corner__Gate_GS,
    Deku_Tree__Basement_1__Corner__Switch,
    Deku_Tree__Basement_2__Boss_Door__Scrubs,
    Deku_Tree__Basement_Ledge__Block__Push_Block,
    Deku_Tree__Basement_Ledge__Web__Burn_Web,
    Deku_Tree__Boss_Room__Arena__Blue_Warp,
    Deku_Tree__Boss_Room__Arena__Gohma,
    Deku_Tree__Boss_Room__Arena__Gohma_Heart,
    Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill,
    Deku_Tree__Compass_Room__Compass__Chest,
    Deku_Tree__Compass_Room__Entry__Burn_Web,
    Deku_Tree__Compass_Room__Ledge__Chest,
    Deku_Tree__Compass_Room__Ledge__GS,
    Deku_Tree__Floor_2__Vines__Map_Chest,
    Deku_Tree__Floor_3__Door__Break_Web,
    Deku_Tree__Lobby__Center__Deku_Baba_Sticks,
    Deku_Tree__Lobby__Center__Deku_Baby_Nuts,
    Deku_Tree__Lobby__Center__Web,
    Deku_Tree__Scrub_Room__Entry__Scrub,
    Deku_Tree__Skull_Room__Entry__GS,
    Deku_Tree__Slingshot_Room__Slingshot__Chest,
    Deku_Tree__Slingshot_Upper__Ledge__Chest,
    Kak__Spider_House__Entry__Skulls_10,
    KF__Baba_Corridor__Deku_Babas__Nuts,
    KF__Baba_Corridor__Deku_Babas__Sticks,
    KF__Boulder_Maze__Reward__Chest,
    KF__Kokiri_Village__Midos_Guardpost__Show_Mido,
    KF__Midos_House__Entry__Bottom_Left_Chest,
    KF__Midos_House__Entry__Bottom_Right_Chest,
    KF__Midos_House__Entry__Top_Left_Chest,
    KF__Midos_House__Entry__Top_Right_Chest,
    KF__Outside_Deku_Tree__Left__Gossip_Stone,
    KF__Outside_Deku_Tree__Right__Gossip_Stone,
    KF__Shop__Entry__Blue_Rupee,
    KF__Shop__Entry__Item_1,
    KF__Shop__Entry__Item_2,
    KF__Shop__Entry__Item_3,
    KF__Shop__Entry__Item_4,
    KF__Shop__Entry__Item_5,
    KF__Shop__Entry__Item_6,
    KF__Shop__Entry__Item_7,
    KF__Shop__Entry__Item_8,
}
impl fmt::Display for LocationId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => {
                write!(f, "{}", "Deku Tree > Back Room > Northwest Break Wall")
            }
            LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => {
                write!(f, "{}", "Deku Tree > Back Room > Northwest Burn Web")
            }
            LocationId::Deku_Tree__Basement_1__Center__Vines_GS => {
                write!(f, "{}", "Deku Tree > Basement 1 > Center Vines GS")
            }
            LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Burn Basement Web")
            }
            LocationId::Deku_Tree__Basement_1__Corner__Chest => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Chest")
            }
            LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Gate GS")
            }
            LocationId::Deku_Tree__Basement_1__Corner__Switch => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Switch")
            }
            LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => {
                write!(f, "{}", "Deku Tree > Basement 2 > Boss Door Scrubs")
            }
            LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => {
                write!(f, "{}", "Deku Tree > Basement Ledge > Block Push Block")
            }
            LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => {
                write!(f, "{}", "Deku Tree > Basement Ledge > Web Burn Web")
            }
            LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Blue Warp")
            }
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Gohma")
            }
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Gohma Heart")
            }
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Gohma Quick Kill")
            }
            LocationId::Deku_Tree__Compass_Room__Compass__Chest => {
                write!(f, "{}", "Deku Tree > Compass Room > Compass Chest")
            }
            LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => {
                write!(f, "{}", "Deku Tree > Compass Room > Entry Burn Web")
            }
            LocationId::Deku_Tree__Compass_Room__Ledge__Chest => {
                write!(f, "{}", "Deku Tree > Compass Room > Ledge Chest")
            }
            LocationId::Deku_Tree__Compass_Room__Ledge__GS => {
                write!(f, "{}", "Deku Tree > Compass Room > Ledge GS")
            }
            LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => {
                write!(f, "{}", "Deku Tree > Floor 2 > Vines Map Chest")
            }
            LocationId::Deku_Tree__Floor_3__Door__Break_Web => {
                write!(f, "{}", "Deku Tree > Floor 3 > Door Break Web")
            }
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => {
                write!(f, "{}", "Deku Tree > Lobby > Center Deku Baba Sticks")
            }
            LocationId::Deku_Tree__Lobby__Center__Deku_Baby_Nuts => {
                write!(f, "{}", "Deku Tree > Lobby > Center Deku Baby Nuts")
            }
            LocationId::Deku_Tree__Lobby__Center__Web => {
                write!(f, "{}", "Deku Tree > Lobby > Center Web")
            }
            LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => {
                write!(f, "{}", "Deku Tree > Scrub Room > Entry Scrub")
            }
            LocationId::Deku_Tree__Skull_Room__Entry__GS => {
                write!(f, "{}", "Deku Tree > Skull Room > Entry GS")
            }
            LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => {
                write!(f, "{}", "Deku Tree > Slingshot Room > Slingshot Chest")
            }
            LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => {
                write!(f, "{}", "Deku Tree > Slingshot Upper > Ledge Chest")
            }
            LocationId::Kak__Spider_House__Entry__Skulls_10 => {
                write!(f, "{}", "Kak > Spider House > Entry Skulls 10")
            }
            LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => {
                write!(f, "{}", "KF > Baba Corridor > Deku Babas Nuts")
            }
            LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => {
                write!(f, "{}", "KF > Baba Corridor > Deku Babas Sticks")
            }
            LocationId::KF__Boulder_Maze__Reward__Chest => {
                write!(f, "{}", "KF > Boulder Maze > Reward Chest")
            }
            LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => {
                write!(f, "{}", "KF > Kokiri Village > Mido's Guardpost Show Mido")
            }
            LocationId::KF__Midos_House__Entry__Bottom_Left_Chest => {
                write!(f, "{}", "KF > Mido's House > Entry Bottom Left Chest")
            }
            LocationId::KF__Midos_House__Entry__Bottom_Right_Chest => {
                write!(f, "{}", "KF > Mido's House > Entry Bottom Right Chest")
            }
            LocationId::KF__Midos_House__Entry__Top_Left_Chest => {
                write!(f, "{}", "KF > Mido's House > Entry Top Left Chest")
            }
            LocationId::KF__Midos_House__Entry__Top_Right_Chest => {
                write!(f, "{}", "KF > Mido's House > Entry Top Right Chest")
            }
            LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => {
                write!(f, "{}", "KF > Outside Deku Tree > Left Gossip Stone")
            }
            LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => {
                write!(f, "{}", "KF > Outside Deku Tree > Right Gossip Stone")
            }
            LocationId::KF__Shop__Entry__Blue_Rupee => {
                write!(f, "{}", "KF > Shop > Entry Blue Rupee")
            }
            LocationId::KF__Shop__Entry__Item_1 => write!(f, "{}", "KF > Shop > Entry Item 1"),
            LocationId::KF__Shop__Entry__Item_2 => write!(f, "{}", "KF > Shop > Entry Item 2"),
            LocationId::KF__Shop__Entry__Item_3 => write!(f, "{}", "KF > Shop > Entry Item 3"),
            LocationId::KF__Shop__Entry__Item_4 => write!(f, "{}", "KF > Shop > Entry Item 4"),
            LocationId::KF__Shop__Entry__Item_5 => write!(f, "{}", "KF > Shop > Entry Item 5"),
            LocationId::KF__Shop__Entry__Item_6 => write!(f, "{}", "KF > Shop > Entry Item 6"),
            LocationId::KF__Shop__Entry__Item_7 => write!(f, "{}", "KF > Shop > Entry Item 7"),
            LocationId::KF__Shop__Entry__Item_8 => write!(f, "{}", "KF > Shop > Entry Item 8"),
        }
    }
}
impl analyzer::world::Id for LocationId {}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum)]
pub enum ExitId {
    Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1,
    Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1,
    Deku_Tree__Basement_1__Center__ex__Lobby__Center_1,
    Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
    Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1,
    Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1,
    Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1,
    Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1,
    Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1,
    Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1,
    Deku_Tree__Boss_Room__Arena__Blue_Warp,
    Deku_Tree__Compass_Room__Entry__Burn_Web,
    Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1,
    Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1,
    Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1,
    Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1,
    Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1,
    Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1,
    Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1,
    Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2,
    Deku_Tree__Floor_2__Vines__ex__Lobby__Center_1,
    Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1,
    Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1,
    Deku_Tree__Floor_3__Door__Break_Web,
    Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1,
    Deku_Tree__Floor_3__Door__ex__Lobby__Center_1,
    Deku_Tree__Lobby__Center__ex__Basement_1__Center_1,
    Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1,
    Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1,
    Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1,
    Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1,
    Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1,
    Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1,
    Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1,
    Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1,
    Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1,
    KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1,
    KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1,
    KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1,
    KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1,
    KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1,
    KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1,
    KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1,
    KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1,
    KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1,
    KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1,
    KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1,
    KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1,
    KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1,
    KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1,
    KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1,
    KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1,
}
impl fmt::Display for ExitId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1 => write!(
                f,
                "{}",
                "Deku Tree > Back Room > East ==> Basement Ledge > Web (1)"
            ),
            ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Back Room > Northwest ==> Skull Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 1 > Center ==> Lobby > Center (1)"
            ),
            ExitId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Burn Basement Web")
            }
            ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 1 > Corner ==> Basement Ledge > Block (1)"
            ),
            ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 1 > South Door ==> Back Room > South (1)"
            ),
            ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 2 > Boss Door ==> Boss Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 2 > Pool ==> Basement Ledge > Web (1)"
            ),
            ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement Ledge > Block ==> Basement 1 > Corner (1)"
            ),
            ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement Ledge > Web ==> Basement 2 > Pool (1)"
            ),
            ExitId::Deku_Tree__Boss_Room__Arena__Blue_Warp => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Blue Warp")
            }
            ExitId::Deku_Tree__Compass_Room__Entry__Burn_Web => {
                write!(f, "{}", "Deku Tree > Compass Room > Entry Burn Web")
            }
            ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1 => write!(
                f,
                "{}",
                "Deku Tree > Compass Room > Entry ==> Floor 3 > Door (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Lower ==> Lobby > Center (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1 => {
                write!(f, "{}", "Deku Tree > Floor 2 > Lower ==> Lobby > Vines (1)")
            }
            ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Slingshot Door ==> Lobby > Center (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Slingshot Door ==> Lobby > Entry (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Slingshot Door ==> Scrub Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Vines ==> Floor 3 > Climb (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Vines ==> Floor 3 > Climb (2)"
            ),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Center_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Vines ==> Lobby > Center (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1 => {
                write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Lobby > Entry (1)")
            }
            ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1 => {
                write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Lobby > Vines (1)")
            }
            ExitId::Deku_Tree__Floor_3__Door__Break_Web => {
                write!(f, "{}", "Deku Tree > Floor 3 > Door Break Web")
            }
            ExitId::Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 3 > Door ==> Compass Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Floor_3__Door__ex__Lobby__Center_1 => {
                write!(f, "{}", "Deku Tree > Floor 3 > Door ==> Lobby > Center (1)")
            }
            ExitId::Deku_Tree__Lobby__Center__ex__Basement_1__Center_1 => write!(
                f,
                "{}",
                "Deku Tree > Lobby > Center ==> Basement 1 > Center (1)"
            ),
            ExitId::Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1 => write!(
                f,
                "{}",
                "Deku Tree > Lobby > Center ==> Basement Ledge > Block (1)"
            ),
            ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1 => {
                write!(f, "{}", "Deku Tree > Lobby > Vines ==> Floor 2 > Lower (1)")
            }
            ExitId::Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1 => write!(
                f,
                "{}",
                "Deku Tree > Scrub Room > Entry ==> Floor 2 > Slingshot Door (1)"
            ),
            ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Scrub Room > Rear ==> Slingshot Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1 => write!(
                f,
                "{}",
                "Deku Tree > Skull Room > Entry ==> Back Room > Northwest (1)"
            ),
            ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1 => write!(
                f,
                "{}",
                "Deku Tree > Slingshot Room > Entry ==> Scrub Room > Rear (1)"
            ),
            ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1 => write!(
                f,
                "{}",
                "Deku Tree > Slingshot Room > Slingshot ==> Slingshot Upper > Ledge (1)"
            ),
            ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1 => write!(
                f,
                "{}",
                "Deku Tree > Slingshot Upper > Ledge ==> Slingshot Room > Slingshot (1)"
            ),
            ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1 => write!(
                f,
                "{}",
                "Kak > Spider House > Entry ==> KF > Kokiri Village > Saria's Porch (1)"
            ),
            ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1 => write!(
                f,
                "{}",
                "KF > Baba Corridor > Tree Side ==> Outside Deku Tree > Entry (1)"
            ),
            ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1 => {
                write!(
                    f,
                    "{}",
                    "KF > Baba Corridor > Village Side ==> Kokiri Village > Mido's Guardpost (1)"
                )
            }
            ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1 => write!(
                f,
                "{}",
                "KF > Boulder Maze > Entry ==> Kokiri Village > Training Center (1)"
            ),
            ExitId::KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1 => write!(
                f,
                "{}",
                "KF > Know-it-all House > Entry ==> Kokiri Village > Know-it-all Porch (1)"
            ),
            ExitId::KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Know-it-all Porch ==> Know-it-all House > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Link's Porch ==> Link's House > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1 => {
                write!(
                    f,
                    "{}",
                    "KF > Kokiri Village > Mido's Guardpost ==> Baba Corridor > Village Side (1)"
                )
            }
            ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Mido's Porch ==> Mido's House > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Saria's Porch ==> Kak > Spider House > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Shop Porch ==> Shop > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Training Center ==> Boulder Maze > Entry (1)"
            ),
            ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1 => write!(
                f,
                "{}",
                "KF > Link's House > Entry ==> Kokiri Village > Link's Porch (1)"
            ),
            ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1 => write!(
                f,
                "{}",
                "KF > Mido's House > Entry ==> Kokiri Village > Mido's Porch (1)"
            ),
            ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1 => write!(
                f,
                "{}",
                "KF > Outside Deku Tree > Entry ==> Baba Corridor > Tree Side (1)"
            ),
            ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1 => write!(
                f,
                "{}",
                "KF > Outside Deku Tree > Mouth ==> Deku Tree > Lobby > Entry (1)"
            ),
            ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1 => write!(
                f,
                "{}",
                "KF > Shop > Entry ==> Kokiri Village > Shop Porch (1)"
            ),
        }
    }
}
impl analyzer::world::Id for ExitId {}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum)]
pub enum ActionId {
    Deku_Tree__Compass_Room__Entry__Light_Torch,
}
impl fmt::Display for ActionId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch => {
                write!(f, "{}", "Deku Tree > Compass Room > Entry Light Torch")
            }
        }
    }
}
impl analyzer::world::Id for ActionId {}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, Default)]
pub enum CanonId {
    #[default]
    None,
    Deku_Lobby_Web,
    Deku_Basement_Web,
    Defeat_Gohma,
}
impl fmt::Display for CanonId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            CanonId::None => write!(f, "{}", "None"),
            CanonId::Deku_Lobby_Web => write!(f, "{}", "Deku_Lobby_Web"),
            CanonId::Deku_Basement_Web => write!(f, "{}", "Deku_Basement_Web"),
            CanonId::Defeat_Gohma => write!(f, "{}", "Defeat_Gohma"),
        }
    }
}
impl analyzer::world::Id for CanonId {}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum)]
pub enum WarpId {
    Minuet,
    Save,
}
impl fmt::Display for WarpId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            WarpId::Minuet => write!(f, "{}", "Minuet"),
            WarpId::Save => write!(f, "{}", "Save"),
        }
    }
}
impl analyzer::world::Id for WarpId {}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum)]
pub enum Objective {
    Ganon,
    Triforce_Hunt,
    Gohma,
    Deku_Full_Clear,
}
impl fmt::Display for Objective {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            Objective::Ganon => write!(f, "{}", "Ganon"),
            Objective::Triforce_Hunt => write!(f, "{}", "Triforce Hunt"),
            Objective::Gohma => write!(f, "{}", "Gohma"),
            Objective::Deku_Full_Clear => write!(f, "{}", "Deku Full Clear"),
        }
    }
}
impl analyzer::world::Id for Objective {}

pub fn get_area(spot: SpotId) -> AreaId {
    match spot {
        SpotId::None => panic!("Spot not valid"),
        SpotId::Deku_Tree__Lobby__Entry
        | SpotId::Deku_Tree__Lobby__Center
        | SpotId::Deku_Tree__Lobby__Vines => AreaId::Deku_Tree__Lobby,
        SpotId::Deku_Tree__Floor_2__Lower
        | SpotId::Deku_Tree__Floor_2__Vines
        | SpotId::Deku_Tree__Floor_2__Slingshot_Door => AreaId::Deku_Tree__Floor_2,
        SpotId::Deku_Tree__Scrub_Room__Entry | SpotId::Deku_Tree__Scrub_Room__Rear => {
            AreaId::Deku_Tree__Scrub_Room
        }
        SpotId::Deku_Tree__Slingshot_Room__Entry | SpotId::Deku_Tree__Slingshot_Room__Slingshot => {
            AreaId::Deku_Tree__Slingshot_Room
        }
        SpotId::Deku_Tree__Slingshot_Upper__Ledge => AreaId::Deku_Tree__Slingshot_Upper,
        SpotId::Deku_Tree__Floor_3__Climb | SpotId::Deku_Tree__Floor_3__Door => {
            AreaId::Deku_Tree__Floor_3
        }
        SpotId::Deku_Tree__Compass_Room__Entry
        | SpotId::Deku_Tree__Compass_Room__Compass
        | SpotId::Deku_Tree__Compass_Room__Ledge => AreaId::Deku_Tree__Compass_Room,
        SpotId::Deku_Tree__Basement_1__Center
        | SpotId::Deku_Tree__Basement_1__Corner
        | SpotId::Deku_Tree__Basement_1__South_Door => AreaId::Deku_Tree__Basement_1,
        SpotId::Deku_Tree__Back_Room__South
        | SpotId::Deku_Tree__Back_Room__Northwest
        | SpotId::Deku_Tree__Back_Room__East => AreaId::Deku_Tree__Back_Room,
        SpotId::Deku_Tree__Skull_Room__Entry => AreaId::Deku_Tree__Skull_Room,
        SpotId::Deku_Tree__Basement_Ledge__Block | SpotId::Deku_Tree__Basement_Ledge__Web => {
            AreaId::Deku_Tree__Basement_Ledge
        }
        SpotId::Deku_Tree__Basement_2__Pool | SpotId::Deku_Tree__Basement_2__Boss_Door => {
            AreaId::Deku_Tree__Basement_2
        }
        SpotId::Deku_Tree__Boss_Room__Entry | SpotId::Deku_Tree__Boss_Room__Arena => {
            AreaId::Deku_Tree__Boss_Room
        }
        SpotId::KF__Links_House__Start_Point | SpotId::KF__Links_House__Entry => {
            AreaId::KF__Links_House
        }
        SpotId::KF__Kokiri_Village__Links_Porch
        | SpotId::KF__Kokiri_Village__Midos_Porch
        | SpotId::KF__Kokiri_Village__Knowitall_Porch
        | SpotId::KF__Kokiri_Village__Training_Center
        | SpotId::KF__Kokiri_Village__Shop_Porch
        | SpotId::KF__Kokiri_Village__Sarias_Porch
        | SpotId::KF__Kokiri_Village__Midos_Guardpost => AreaId::KF__Kokiri_Village,
        SpotId::KF__Boulder_Maze__Entry | SpotId::KF__Boulder_Maze__Reward => {
            AreaId::KF__Boulder_Maze
        }
        SpotId::KF__Baba_Corridor__Village_Side
        | SpotId::KF__Baba_Corridor__Deku_Babas
        | SpotId::KF__Baba_Corridor__Tree_Side => AreaId::KF__Baba_Corridor,
        SpotId::KF__Outside_Deku_Tree__Entry
        | SpotId::KF__Outside_Deku_Tree__Left
        | SpotId::KF__Outside_Deku_Tree__Right
        | SpotId::KF__Outside_Deku_Tree__Mouth => AreaId::KF__Outside_Deku_Tree,
        SpotId::KF__Midos_House__Entry => AreaId::KF__Midos_House,
        SpotId::KF__Knowitall_House__Entry => AreaId::KF__Knowitall_House,
        SpotId::KF__Shop__Entry => AreaId::KF__Shop,
        SpotId::Kak__Spider_House__Entry => AreaId::Kak__Spider_House,
    }
}
pub fn get_region(spot: SpotId) -> RegionId {
    match spot {
        SpotId::None => panic!("Spot not valid"),
        SpotId::Deku_Tree__Lobby__Entry
        | SpotId::Deku_Tree__Lobby__Center
        | SpotId::Deku_Tree__Lobby__Vines => RegionId::Deku_Tree,
        SpotId::Deku_Tree__Floor_2__Lower
        | SpotId::Deku_Tree__Floor_2__Vines
        | SpotId::Deku_Tree__Floor_2__Slingshot_Door => RegionId::Deku_Tree,
        SpotId::Deku_Tree__Scrub_Room__Entry | SpotId::Deku_Tree__Scrub_Room__Rear => {
            RegionId::Deku_Tree
        }
        SpotId::Deku_Tree__Slingshot_Room__Entry | SpotId::Deku_Tree__Slingshot_Room__Slingshot => {
            RegionId::Deku_Tree
        }
        SpotId::Deku_Tree__Slingshot_Upper__Ledge => RegionId::Deku_Tree,
        SpotId::Deku_Tree__Floor_3__Climb | SpotId::Deku_Tree__Floor_3__Door => RegionId::Deku_Tree,
        SpotId::Deku_Tree__Compass_Room__Entry
        | SpotId::Deku_Tree__Compass_Room__Compass
        | SpotId::Deku_Tree__Compass_Room__Ledge => RegionId::Deku_Tree,
        SpotId::Deku_Tree__Basement_1__Center
        | SpotId::Deku_Tree__Basement_1__Corner
        | SpotId::Deku_Tree__Basement_1__South_Door => RegionId::Deku_Tree,
        SpotId::Deku_Tree__Back_Room__South
        | SpotId::Deku_Tree__Back_Room__Northwest
        | SpotId::Deku_Tree__Back_Room__East => RegionId::Deku_Tree,
        SpotId::Deku_Tree__Skull_Room__Entry => RegionId::Deku_Tree,
        SpotId::Deku_Tree__Basement_Ledge__Block | SpotId::Deku_Tree__Basement_Ledge__Web => {
            RegionId::Deku_Tree
        }
        SpotId::Deku_Tree__Basement_2__Pool | SpotId::Deku_Tree__Basement_2__Boss_Door => {
            RegionId::Deku_Tree
        }
        SpotId::Deku_Tree__Boss_Room__Entry | SpotId::Deku_Tree__Boss_Room__Arena => {
            RegionId::Deku_Tree
        }
        SpotId::KF__Links_House__Start_Point | SpotId::KF__Links_House__Entry => RegionId::KF,
        SpotId::KF__Kokiri_Village__Links_Porch
        | SpotId::KF__Kokiri_Village__Midos_Porch
        | SpotId::KF__Kokiri_Village__Knowitall_Porch
        | SpotId::KF__Kokiri_Village__Training_Center
        | SpotId::KF__Kokiri_Village__Shop_Porch
        | SpotId::KF__Kokiri_Village__Sarias_Porch
        | SpotId::KF__Kokiri_Village__Midos_Guardpost => RegionId::KF,
        SpotId::KF__Boulder_Maze__Entry | SpotId::KF__Boulder_Maze__Reward => RegionId::KF,
        SpotId::KF__Baba_Corridor__Village_Side
        | SpotId::KF__Baba_Corridor__Deku_Babas
        | SpotId::KF__Baba_Corridor__Tree_Side => RegionId::KF,
        SpotId::KF__Outside_Deku_Tree__Entry
        | SpotId::KF__Outside_Deku_Tree__Left
        | SpotId::KF__Outside_Deku_Tree__Right
        | SpotId::KF__Outside_Deku_Tree__Mouth => RegionId::KF,
        SpotId::KF__Midos_House__Entry => RegionId::KF,
        SpotId::KF__Knowitall_House__Entry => RegionId::KF,
        SpotId::KF__Shop__Entry => RegionId::KF,
        SpotId::Kak__Spider_House__Entry => RegionId::Kak,
    }
}

#[derive(Copy, Clone, Debug)]
pub struct Location {
    id: LocationId,
    item: Item,
    canonical: CanonId,
    time: i32,
    exit_id: Option<ExitId>,
    price: Currency,
}

impl world::Accessible for Location {
    type Context<'a> = Context<'a>;
    fn can_access(&self, ctx: &Context) -> bool {
        ctx.can_afford(&self.price) && match self.id {
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => rules::access_is_adult_or_kokiri_sword_or_boomerang(&ctx),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baby_Nuts => rules::access_is_adult_or_slingshot_or_sticks_or_kokiri_sword(&ctx),
            LocationId::Deku_Tree__Lobby__Center__Web => rules::access_false(&ctx),
            LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => true,
            LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => rules::access_has_shield(&ctx),
            LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => true,
            LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => true,
            LocationId::Deku_Tree__Floor_3__Door__Break_Web => rules::access_is_adult_or_can_child_attack_or_nuts(&ctx),
            LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => rules::access_is_child_and_sticks_and_nuts(&ctx),
            LocationId::Deku_Tree__Compass_Room__Compass__Chest => true,
            LocationId::Deku_Tree__Compass_Room__Ledge__Chest => true,
            LocationId::Deku_Tree__Compass_Room__Ledge__GS => rules::access_is_adult_or_can_child_attack(&ctx),
            LocationId::Deku_Tree__Basement_1__Center__Vines_GS => rules::access_is_adult_or_sticks_or_kokiri_sword(&ctx),
            LocationId::Deku_Tree__Basement_1__Corner__Switch => true,
            LocationId::Deku_Tree__Basement_1__Corner__Chest => rules::access_deku_basement_switch(&ctx),
            LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => rules::access_is_adult_or_can_child_attack(&ctx),
            LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => rules::access_deku_basement_block_and_is_child_and_sticks(&ctx),
            LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => rules::access_has_fire_source_with_torch_or_can_use__bow(&ctx),
            LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => rules::access_deku_back_room_web_and_can_blast_or_smash(&ctx),
            LocationId::Deku_Tree__Skull_Room__Entry__GS => rules::access_can_use__boomerang_or_can_use__hookshot(&ctx),
            LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => true,
            LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => rules::access_has_fire_source(&ctx),
            LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => rules::access_has_shield(&ctx),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma => rules::access___nuts_or_can_use__slingshot_and_can_jumpslash(&ctx),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => rules::access_nuts_and_has_shield_and_if___is_child____sticks__else____biggoron_sword_(&ctx),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => rules::access_defeat_gohma(&ctx),
            LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => rules::access_defeat_gohma(&ctx),
            LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => rules::access_is_child_and_kokiri_sword_and_deku_shield(&ctx),
            LocationId::KF__Boulder_Maze__Reward__Chest => true,
            LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => rules::access_is_adult_or_kokiri_sword_or_boomerang(&ctx),
            LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => rules::access_is_adult(&ctx),
            LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => true,
            LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => true,
            LocationId::KF__Midos_House__Entry__Top_Left_Chest => true,
            LocationId::KF__Midos_House__Entry__Top_Right_Chest => true,
            LocationId::KF__Midos_House__Entry__Bottom_Left_Chest => true,
            LocationId::KF__Midos_House__Entry__Bottom_Right_Chest => true,
            LocationId::KF__Shop__Entry__Blue_Rupee => true,
            LocationId::KF__Shop__Entry__Item_1 => true,
            LocationId::KF__Shop__Entry__Item_2 => true,
            LocationId::KF__Shop__Entry__Item_3 => true,
            LocationId::KF__Shop__Entry__Item_4 => true,
            LocationId::KF__Shop__Entry__Item_5 => true,
            LocationId::KF__Shop__Entry__Item_6 => true,
            LocationId::KF__Shop__Entry__Item_7 => true,
            LocationId::KF__Shop__Entry__Item_8 => true,
            LocationId::Kak__Spider_House__Entry__Skulls_10 => rules::access_gold_skulltula_token__10(&ctx),
        }
    }
}

impl world::Location for Location {
    type LocId = LocationId;
    type CanonId = CanonId;
    type ExitId = ExitId;
    type Currency = Currency;

    fn id(&self) -> LocationId {
        self.id
    }
    fn item(&self) -> Item {
        self.item
    }
    fn canon_id(&self) -> CanonId {
        self.canonical
    }
    fn exit_id(&self) -> &Option<ExitId> {
        &self.exit_id
    }
    fn time(&self) -> i32 {
        self.time
    }
    fn price(&self) -> &Currency {
        &self.price
    }
}

#[derive(Copy, Clone, Debug)]
pub struct Exit {
    id: ExitId,
    time: i32,
    dest: SpotId,
    price: Currency,
    loc_id: Option<LocationId>,
}

impl world::Accessible for Exit {
    type Context<'a> = Context<'a>;
    fn can_access(&self, ctx: &Context) -> bool {
        ctx.can_afford(&self.price)
            && match self.id {
                ExitId::Deku_Tree__Lobby__Center__ex__Basement_1__Center_1 => {
                    rules::access_deku_lobby_web(&ctx)
                }
                ExitId::Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1 => {
                    rules::access_deku_lobby_web_and_logic_deku_b1_skip(&ctx)
                }
                ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1 => true,
                ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1 => true,
                ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1 => true,
                ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1 => true,
                ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2 => {
                    rules::access_can_use__slingshot(&ctx)
                }
                ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1 => true,
                ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1 => true,
                ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Center_1 => true,
                ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1 => true,
                ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1 => true,
                ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1 => true,
                ExitId::Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1 => true,
                ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1 => {
                    rules::access_deku_slingshot_scrub(&ctx)
                }
                ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1 => true,
                ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1 => true,
                ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1 => true,
                ExitId::Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1 => true,
                ExitId::Deku_Tree__Floor_3__Door__ex__Lobby__Center_1 => {
                    rules::access_is_adult_or_can_child_attack_or_nuts(&ctx)
                }
                ExitId::Deku_Tree__Floor_3__Door__Break_Web => {
                    rules::access_is_adult_or_can_child_attack_or_nuts(&ctx)
                }
                ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1 => {
                    rules::access_deku_tree__compass_room__entry__floor_3_(&ctx)
                }
                ExitId::Deku_Tree__Compass_Room__Entry__Burn_Web => {
                    rules::access_is_child_and_sticks_and_nuts(&ctx)
                }
                ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1 => true,
                ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1 => {
                    rules::access_is_adult_or_deku_basement_block(&ctx)
                }
                ExitId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => {
                    rules::access_deku_basement_block_and_is_child_and_sticks(&ctx)
                }
                ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1 => true,
                ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1 => {
                    rules::access_deku_back_room_web_and_deku_back_room_wall(&ctx)
                }
                ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1 => {
                    rules::access_is_child(&ctx)
                }
                ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1 => true,
                ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1 => true,
                ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1 => {
                    rules::access_deku_basement_web(&ctx)
                }
                ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1 => true,
                ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1 => {
                    rules::access_deku_basement_scrubs(&ctx)
                }
                ExitId::Deku_Tree__Boss_Room__Arena__Blue_Warp => rules::access_defeat_gohma(&ctx),
                ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1 => true,
                ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1 => true,
                ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1 => true,
                ExitId::KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1 => true,
                ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1 => {
                    rules::access_is_child(&ctx)
                }
                ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1 => true,
                ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1 => true,
                ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1 => {
                    rules::access_is_adult_or_showed_mido(&ctx)
                }
                ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1 => {
                    rules::access_is_child(&ctx)
                }
                ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1 => {
                    true
                }
                ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1 => true,
                ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1 => true,
                ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1 => true,
                ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1 => true,
                ExitId::KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1 => true,
                ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1 => true,
                ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1 => true,
            }
    }
}

impl world::Exit for Exit {
    type ExitId = ExitId;
    type SpotId = SpotId;
    type LocId = LocationId;

    fn id(&self) -> ExitId {
        self.id
    }
    fn dest(&self) -> SpotId {
        self.dest
    }
    fn connect(&mut self, dest: SpotId) {
        self.dest = dest;
    }
    fn loc_id(&self) -> &Option<LocationId> {
        &self.loc_id
    }
    fn time(&self) -> i32 {
        self.time
    }
}

#[derive(Copy, Clone, Debug)]
pub struct Action {
    id: ActionId,
    time: i32,
}

impl world::Accessible for Action {
    type Context<'a> = Context<'a>;
    fn can_access(&self, ctx: &Context) -> bool {
        match self.id {
            ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch => {
                rules::access_deku_tree__compass_room__entry_light_torch_req(&ctx)
            }
        }
    }
}
impl world::Action for Action {
    type ActionId = ActionId;
    fn id(&self) -> ActionId {
        self.id
    }
    fn time(&self) -> i32 {
        self.time
    }
    fn perform(&self, ctx: &mut Context) {
        match self.id {
            ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch => {
                rules::action_deku_tree__compass_room__entry_light_torch__do(ctx)
            }
        }
    }
}

#[derive(Copy, Clone, Debug)]
pub struct Warp {
    id: WarpId,
    dest: SpotId,
    time: i32,
}
impl world::Accessible for Warp {
    type Context<'a> = Context<'a>;
    fn can_access(&self, ctx: &Context) -> bool {
        match self.id {
            WarpId::Save => true,
            WarpId::Minuet => rules::access_can_play__minuet_of_forest(&ctx),
        }
    }
}
impl world::Warp for Warp {
    type WarpId = WarpId;
    type SpotId = SpotId;

    fn id(&self) -> WarpId {
        self.id
    }
    fn dest(&self, ctx: &Context) -> SpotId {
        if self.dest == SpotId::None {
            match self.id {
                WarpId::Minuet => SpotId::KF__Kokiri_Village__Shop_Porch,
                WarpId::Save => ctx.save,
            }
        } else {
            self.dest
        }
    }
    fn connect(&mut self, dest: SpotId) {
        self.dest = dest;
    }
    fn time(&self) -> i32 {
        self.time
    }
}

#[derive(Clone, Debug, Default)]
pub struct Spot {
    pub id: SpotId,
    pub locations: Range<usize>,
    pub exits: Range<usize>,
    pub actions: Range<usize>,
    // spots don't reference their area, so we index these by spot
    pub area_spots: Range<usize>,
}

#[derive(Clone, Debug)]
pub struct World {
    objective: Objective,
    // These are arrays that group the items together by their parent.
    // Using EnumMap for this ONLY WORKS if the keys are properly ordered to group
    // nearby things together.
    // For entrance rando, we would need to have a layer of indirection:
    // list_index: EnumMap<EnumType, usize>,
    // list: EnumArray<ObjType>,
    locations: EnumMap<LocationId, Location>,
    exits: EnumMap<ExitId, Exit>,
    actions: EnumMap<ActionId, Action>,
    warps: EnumMap<WarpId, Warp>,
    raw_spots: [SpotId; 52],
    // Index ranges for slices into the above arrays
    spots: EnumMap<SpotId, Spot>,
}

impl world::World for World {
    type Location = Location;
    type Exit = Exit;
    type Action = Action;
    type Warp = Warp;

    fn get_location(&self, id: LocationId) -> &Location {
        &self.locations[id]
    }
    fn get_spot_locations(&self, spot_id: SpotId) -> &[Location] {
        let r = &self.spots[spot_id].locations;
        &self.locations.as_slice()[r.start..r.end]
    }
    fn get_exit(&self, id: ExitId) -> &Exit {
        &self.exits[id]
    }
    fn get_spot_exits(&self, spot_id: SpotId) -> &[Exit] {
        let r = &self.spots[spot_id].exits;
        &self.exits.as_slice()[r.start..r.end]
    }
    fn get_action(&self, id: ActionId) -> &Action {
        &self.actions[id]
    }
    fn get_spot_actions(&self, spot_id: SpotId) -> &[Action] {
        let r = &self.spots[spot_id].actions;
        &self.actions.as_slice()[r.start..r.end]
    }
    fn get_warp(&self, id: WarpId) -> &Warp {
        &self.warps[id]
    }

    fn get_canon_locations(&self, loc_id: LocationId) -> Vec<LocationId> {
        let loc = self.get_location(loc_id);
        match world::Location::canon_id(loc) {
            CanonId::None => vec![],
            CanonId::Deku_Lobby_Web => vec![
                LocationId::Deku_Tree__Lobby__Center__Web,
                LocationId::Deku_Tree__Floor_3__Door__Break_Web,
                LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web,
            ],
            CanonId::Deku_Basement_Web => vec![
                LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
                LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web,
            ],
            CanonId::Defeat_Gohma => vec![
                LocationId::Deku_Tree__Boss_Room__Arena__Gohma,
                LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill,
            ],
        }
    }

    fn get_area_spots(&self, spot_id: SpotId) -> &[SpotId] {
        let r = &self.spots[spot_id].area_spots;
        &self.raw_spots[r.start..r.end]
    }
    fn get_warps(&self) -> &[Warp] {
        &self.warps.as_slice()
    }

    fn get_all_locations(&self) -> &[Location] {
        &self.locations.as_slice()
    }

    fn skip_unused_items(&self, ctx: &mut Context) {
        for (id, loc) in &self.locations {
            if unused_item(world::Location::item(loc)) {
                ctx.skip(id);
            }
        }
    }

    fn won(&self, ctx: &Context) -> bool {
        match self.objective {
            Objective::Ganon => rules::access_defeat_ganon(ctx),
            Objective::Triforce_Hunt => rules::access_triforce_piece__triforce_count(ctx),
            Objective::Gohma => rules::access_kokiri_emerald(ctx),
            Objective::Deku_Full_Clear => rules::access_all_region_checks__deku_tree(ctx),
        }
    }
}

impl World {
    pub fn new() -> World {
        World {
            objective: Objective::Gohma,
            locations: build_locations(),
            exits: build_exits(),
            actions: build_actions(),
            warps: build_warps(),
            raw_spots: [
                SpotId::None,
                SpotId::Deku_Tree__Back_Room__East,
                SpotId::Deku_Tree__Back_Room__Northwest,
                SpotId::Deku_Tree__Back_Room__South,
                SpotId::Deku_Tree__Basement_1__Center,
                SpotId::Deku_Tree__Basement_1__Corner,
                SpotId::Deku_Tree__Basement_1__South_Door,
                SpotId::Deku_Tree__Basement_2__Boss_Door,
                SpotId::Deku_Tree__Basement_2__Pool,
                SpotId::Deku_Tree__Basement_Ledge__Block,
                SpotId::Deku_Tree__Basement_Ledge__Web,
                SpotId::Deku_Tree__Boss_Room__Arena,
                SpotId::Deku_Tree__Boss_Room__Entry,
                SpotId::Deku_Tree__Compass_Room__Compass,
                SpotId::Deku_Tree__Compass_Room__Entry,
                SpotId::Deku_Tree__Compass_Room__Ledge,
                SpotId::Deku_Tree__Floor_2__Lower,
                SpotId::Deku_Tree__Floor_2__Slingshot_Door,
                SpotId::Deku_Tree__Floor_2__Vines,
                SpotId::Deku_Tree__Floor_3__Climb,
                SpotId::Deku_Tree__Floor_3__Door,
                SpotId::Deku_Tree__Lobby__Center,
                SpotId::Deku_Tree__Lobby__Entry,
                SpotId::Deku_Tree__Lobby__Vines,
                SpotId::Deku_Tree__Scrub_Room__Entry,
                SpotId::Deku_Tree__Scrub_Room__Rear,
                SpotId::Deku_Tree__Skull_Room__Entry,
                SpotId::Deku_Tree__Slingshot_Room__Entry,
                SpotId::Deku_Tree__Slingshot_Room__Slingshot,
                SpotId::Deku_Tree__Slingshot_Upper__Ledge,
                SpotId::Kak__Spider_House__Entry,
                SpotId::KF__Baba_Corridor__Deku_Babas,
                SpotId::KF__Baba_Corridor__Tree_Side,
                SpotId::KF__Baba_Corridor__Village_Side,
                SpotId::KF__Boulder_Maze__Entry,
                SpotId::KF__Boulder_Maze__Reward,
                SpotId::KF__Knowitall_House__Entry,
                SpotId::KF__Kokiri_Village__Knowitall_Porch,
                SpotId::KF__Kokiri_Village__Links_Porch,
                SpotId::KF__Kokiri_Village__Midos_Guardpost,
                SpotId::KF__Kokiri_Village__Midos_Porch,
                SpotId::KF__Kokiri_Village__Sarias_Porch,
                SpotId::KF__Kokiri_Village__Shop_Porch,
                SpotId::KF__Kokiri_Village__Training_Center,
                SpotId::KF__Links_House__Entry,
                SpotId::KF__Links_House__Start_Point,
                SpotId::KF__Midos_House__Entry,
                SpotId::KF__Outside_Deku_Tree__Entry,
                SpotId::KF__Outside_Deku_Tree__Left,
                SpotId::KF__Outside_Deku_Tree__Mouth,
                SpotId::KF__Outside_Deku_Tree__Right,
                SpotId::KF__Shop__Entry,
            ],
            spots: build_spots(),
        }
    }
}

pub fn build_locations() -> EnumMap<LocationId, Location> {
    enum_map! {
        LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => Location {
            id: LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks,
            canonical: CanonId::None,
            item: Item::Deku_Stick_Drop,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Lobby__Center__Deku_Baby_Nuts => Location {
            id: LocationId::Deku_Tree__Lobby__Center__Deku_Baby_Nuts,
            canonical: CanonId::None,
            item: Item::Deku_Nut_Drop,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Lobby__Center__Web => Location {
            id: LocationId::Deku_Tree__Lobby__Center__Web,
            canonical: CanonId::Deku_Lobby_Web,
            item: Item::Deku_Lobby_Web,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => Location {
            id: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest,
            canonical: CanonId::None,
            item: Item::Map_Deku_Tree,
            price: Currency::Free,
            time: 3000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => Location {
            id: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub,
            canonical: CanonId::None,
            item: Item::Deku_Slingshot_Scrub,
            price: Currency::Free,
            time: 2000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => Location {
            id: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest,
            canonical: CanonId::None,
            item: Item::Slingshot,
            price: Currency::Free,
            time: 3000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => Location {
            id: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest,
            canonical: CanonId::None,
            item: Item::Recovery_Heart,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Floor_3__Door__Break_Web => Location {
            id: LocationId::Deku_Tree__Floor_3__Door__Break_Web,
            canonical: CanonId::Deku_Lobby_Web,
            item: Item::Deku_Lobby_Web,
            price: Currency::Free,
            time: 0,
            exit_id: Some(ExitId::Deku_Tree__Floor_3__Door__Break_Web),
        },
        LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => Location {
            id: LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web,
            canonical: CanonId::Deku_Lobby_Web,
            item: Item::Deku_Lobby_Web,
            price: Currency::Free,
            time: 1000,
            exit_id: Some(ExitId::Deku_Tree__Compass_Room__Entry__Burn_Web),
        },
        LocationId::Deku_Tree__Compass_Room__Compass__Chest => Location {
            id: LocationId::Deku_Tree__Compass_Room__Compass__Chest,
            canonical: CanonId::None,
            item: Item::Compass_Deku_Tree,
            price: Currency::Free,
            time: 3000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Compass_Room__Ledge__Chest => Location {
            id: LocationId::Deku_Tree__Compass_Room__Ledge__Chest,
            canonical: CanonId::None,
            item: Item::Recovery_Heart,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Compass_Room__Ledge__GS => Location {
            id: LocationId::Deku_Tree__Compass_Room__Ledge__GS,
            canonical: CanonId::None,
            item: Item::Gold_Skulltula_Token,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Basement_1__Center__Vines_GS => Location {
            id: LocationId::Deku_Tree__Basement_1__Center__Vines_GS,
            canonical: CanonId::None,
            item: Item::Gold_Skulltula_Token,
            price: Currency::Free,
            time: 2000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Basement_1__Corner__Switch => Location {
            id: LocationId::Deku_Tree__Basement_1__Corner__Switch,
            canonical: CanonId::None,
            item: Item::Deku_Basement_Switch,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Basement_1__Corner__Chest => Location {
            id: LocationId::Deku_Tree__Basement_1__Corner__Chest,
            canonical: CanonId::None,
            item: Item::Recovery_Heart,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => Location {
            id: LocationId::Deku_Tree__Basement_1__Corner__Gate_GS,
            canonical: CanonId::None,
            item: Item::Gold_Skulltula_Token,
            price: Currency::Free,
            time: 2000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => Location {
            id: LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
            canonical: CanonId::Deku_Basement_Web,
            item: Item::Deku_Basement_Web,
            price: Currency::Free,
            time: 1000,
            exit_id: Some(ExitId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web),
        },
        LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => Location {
            id: LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web,
            canonical: CanonId::None,
            item: Item::Deku_Back_Room_Web,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => Location {
            id: LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall,
            canonical: CanonId::None,
            item: Item::Deku_Back_Room_Wall,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Skull_Room__Entry__GS => Location {
            id: LocationId::Deku_Tree__Skull_Room__Entry__GS,
            canonical: CanonId::None,
            item: Item::Gold_Skulltula_Token,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => Location {
            id: LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block,
            canonical: CanonId::None,
            item: Item::Deku_Basement_Block,
            price: Currency::Free,
            time: 4000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => Location {
            id: LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web,
            canonical: CanonId::Deku_Basement_Web,
            item: Item::Deku_Basement_Web,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => Location {
            id: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs,
            canonical: CanonId::None,
            item: Item::Deku_Basement_Scrubs,
            price: Currency::Free,
            time: 4000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Boss_Room__Arena__Gohma => Location {
            id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma,
            canonical: CanonId::Defeat_Gohma,
            item: Item::Defeat_Gohma,
            price: Currency::Free,
            time: 10000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => Location {
            id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill,
            canonical: CanonId::Defeat_Gohma,
            item: Item::Defeat_Gohma,
            price: Currency::Free,
            time: 4000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => Location {
            id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart,
            canonical: CanonId::None,
            item: Item::Heart_Container,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => Location {
            id: LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp,
            canonical: CanonId::None,
            item: Item::Kokiri_Emerald,
            price: Currency::Free,
            time: 6000,
            exit_id: Some(ExitId::Deku_Tree__Boss_Room__Arena__Blue_Warp),
        },
        LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => Location {
            id: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido,
            canonical: CanonId::None,
            item: Item::Showed_Mido,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Boulder_Maze__Reward__Chest => Location {
            id: LocationId::KF__Boulder_Maze__Reward__Chest,
            canonical: CanonId::None,
            item: Item::Kokiri_Sword,
            price: Currency::Free,
            time: 3000,
            exit_id: None,
        },
        LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => Location {
            id: LocationId::KF__Baba_Corridor__Deku_Babas__Sticks,
            canonical: CanonId::None,
            item: Item::Deku_Stick_Drop,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => Location {
            id: LocationId::KF__Baba_Corridor__Deku_Babas__Nuts,
            canonical: CanonId::None,
            item: Item::Deku_Nut_Drop,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => Location {
            id: LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone,
            canonical: CanonId::None,
            item: Item::None,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => Location {
            id: LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone,
            canonical: CanonId::None,
            item: Item::None,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Midos_House__Entry__Top_Left_Chest => Location {
            id: LocationId::KF__Midos_House__Entry__Top_Left_Chest,
            canonical: CanonId::None,
            item: Item::Rupees_5,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Midos_House__Entry__Top_Right_Chest => Location {
            id: LocationId::KF__Midos_House__Entry__Top_Right_Chest,
            canonical: CanonId::None,
            item: Item::Rupees_50,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Midos_House__Entry__Bottom_Left_Chest => Location {
            id: LocationId::KF__Midos_House__Entry__Bottom_Left_Chest,
            canonical: CanonId::None,
            item: Item::Rupee_1,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Midos_House__Entry__Bottom_Right_Chest => Location {
            id: LocationId::KF__Midos_House__Entry__Bottom_Right_Chest,
            canonical: CanonId::None,
            item: Item::Recovery_Heart,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Blue_Rupee => Location {
            id: LocationId::KF__Shop__Entry__Blue_Rupee,
            canonical: CanonId::None,
            item: Item::Rupees_5,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Item_1 => Location {
            id: LocationId::KF__Shop__Entry__Item_1,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Shield,
            price: Currency::Rupees(40),
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Item_2 => Location {
            id: LocationId::KF__Shop__Entry__Item_2,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Nut_5,
            price: Currency::Rupees(15),
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Item_3 => Location {
            id: LocationId::KF__Shop__Entry__Item_3,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Nut_10,
            price: Currency::Rupees(30),
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Item_4 => Location {
            id: LocationId::KF__Shop__Entry__Item_4,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Stick_1,
            price: Currency::Rupees(10),
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Item_5 => Location {
            id: LocationId::KF__Shop__Entry__Item_5,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Seeds_30,
            price: Currency::Rupees(30),
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Item_6 => Location {
            id: LocationId::KF__Shop__Entry__Item_6,
            canonical: CanonId::None,
            item: Item::Buy_Arrows_10,
            price: Currency::Rupees(20),
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Item_7 => Location {
            id: LocationId::KF__Shop__Entry__Item_7,
            canonical: CanonId::None,
            item: Item::Buy_Arrows_30,
            price: Currency::Rupees(60),
            time: 1000,
            exit_id: None,
        },
        LocationId::KF__Shop__Entry__Item_8 => Location {
            id: LocationId::KF__Shop__Entry__Item_8,
            canonical: CanonId::None,
            item: Item::Buy_Heart,
            price: Currency::Rupees(10),
            time: 1000,
            exit_id: None,
        },
        LocationId::Kak__Spider_House__Entry__Skulls_10 => Location {
            id: LocationId::Kak__Spider_House__Entry__Skulls_10,
            canonical: CanonId::None,
            item: Item::Arrows_10,
            price: Currency::Free,
            time: 1000,
            exit_id: None,
        },
    }
}

pub fn build_exits() -> EnumMap<ExitId, Exit> {
    enum_map! {
        ExitId::Deku_Tree__Lobby__Center__ex__Basement_1__Center_1 => Exit {
            id: ExitId::Deku_Tree__Lobby__Center__ex__Basement_1__Center_1,
            time: 2000,
            dest: SpotId::Deku_Tree__Basement_1__Center,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1 => Exit {
            id: ExitId::Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1,
            time: 5000,
            dest: SpotId::Deku_Tree__Basement_Ledge__Block,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1 => Exit {
            id: ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1,
            time: 4000,
            dest: SpotId::Deku_Tree__Floor_2__Lower,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Lobby__Vines,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Lobby__Center,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1,
            time: 16000,
            dest: SpotId::Deku_Tree__Floor_3__Climb,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2,
            time: 10000,
            dest: SpotId::Deku_Tree__Floor_3__Climb,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Lobby__Vines,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Lobby__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Center_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Center_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Lobby__Center,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Scrub_Room__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Lobby__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1 => Exit {
            id: ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Lobby__Center,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1 => Exit {
            id: ExitId::Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Floor_2__Slingshot_Door,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1 => Exit {
            id: ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Slingshot_Room__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1 => Exit {
            id: ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Scrub_Room__Rear,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1 => Exit {
            id: ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1,
            time: 4000,
            dest: SpotId::Deku_Tree__Slingshot_Upper__Ledge,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1 => Exit {
            id: ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Slingshot_Room__Slingshot,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1 => Exit {
            id: ExitId::Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Compass_Room__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_3__Door__ex__Lobby__Center_1 => Exit {
            id: ExitId::Deku_Tree__Floor_3__Door__ex__Lobby__Center_1,
            time: 3000,
            dest: SpotId::Deku_Tree__Lobby__Center,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Floor_3__Door__Break_Web => Exit {
            id: ExitId::Deku_Tree__Floor_3__Door__Break_Web,
            time: 4000,
            dest: SpotId::Deku_Tree__Basement_1__Center,
            price: Currency::Free,
            loc_id: Some(LocationId::Deku_Tree__Floor_3__Door__Break_Web),
        },
        ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1 => Exit {
            id: ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Floor_3__Door,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Compass_Room__Entry__Burn_Web => Exit {
            id: ExitId::Deku_Tree__Compass_Room__Entry__Burn_Web,
            time: 5000,
            dest: SpotId::Deku_Tree__Lobby__Center,
            price: Currency::Free,
            loc_id: Some(LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web),
        },
        ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1 => Exit {
            id: ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1,
            time: 6000,
            dest: SpotId::Deku_Tree__Lobby__Center,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1 => Exit {
            id: ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Basement_Ledge__Block,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => Exit {
            id: ExitId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
            time: 2000,
            dest: SpotId::Deku_Tree__Basement_Ledge__Web,
            price: Currency::Free,
            loc_id: Some(LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web),
        },
        ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1 => Exit {
            id: ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1,
            time: 20000,
            dest: SpotId::Deku_Tree__Back_Room__South,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1 => Exit {
            id: ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Skull_Room__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1 => Exit {
            id: ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1,
            time: 2000,
            dest: SpotId::Deku_Tree__Basement_Ledge__Web,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1 => Exit {
            id: ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Back_Room__Northwest,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1 => Exit {
            id: ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Basement_1__Corner,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1 => Exit {
            id: ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1,
            time: 1000,
            dest: SpotId::Deku_Tree__Basement_2__Pool,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1 => Exit {
            id: ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1,
            time: 6000,
            dest: SpotId::Deku_Tree__Basement_Ledge__Web,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1 => Exit {
            id: ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1,
            time: 2000,
            dest: SpotId::Deku_Tree__Boss_Room__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Deku_Tree__Boss_Room__Arena__Blue_Warp => Exit {
            id: ExitId::Deku_Tree__Boss_Room__Arena__Blue_Warp,
            time: 8000,
            dest: SpotId::KF__Outside_Deku_Tree__Mouth,
            price: Currency::Free,
            loc_id: Some(LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp),
        },
        ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1 => Exit {
            id: ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1,
            time: 2000,
            dest: SpotId::KF__Kokiri_Village__Links_Porch,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1 => Exit {
            id: ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1,
            time: 2000,
            dest: SpotId::KF__Links_House__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1 => Exit {
            id: ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1,
            time: 2000,
            dest: SpotId::KF__Midos_House__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1 => Exit {
            id: ExitId::KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1,
            time: 2000,
            dest: SpotId::KF__Knowitall_House__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1 => Exit {
            id: ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1,
            time: 6000,
            dest: SpotId::KF__Boulder_Maze__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1 => Exit {
            id: ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1,
            time: 2000,
            dest: SpotId::KF__Shop__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1 => Exit {
            id: ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1,
            time: 2000,
            dest: SpotId::Kak__Spider_House__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1 => Exit {
            id: ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1,
            time: 1000,
            dest: SpotId::KF__Baba_Corridor__Village_Side,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1 => Exit {
            id: ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1,
            time: 6000,
            dest: SpotId::KF__Kokiri_Village__Training_Center,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1 => Exit {
            id: ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1,
            time: 1000,
            dest: SpotId::KF__Kokiri_Village__Midos_Guardpost,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1 => Exit {
            id: ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1,
            time: 1000,
            dest: SpotId::KF__Outside_Deku_Tree__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1 => Exit {
            id: ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1,
            time: 1000,
            dest: SpotId::KF__Baba_Corridor__Tree_Side,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1 => Exit {
            id: ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1,
            time: 2000,
            dest: SpotId::Deku_Tree__Lobby__Entry,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1 => Exit {
            id: ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1,
            time: 2000,
            dest: SpotId::KF__Kokiri_Village__Midos_Porch,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1 => Exit {
            id: ExitId::KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1,
            time: 2000,
            dest: SpotId::KF__Kokiri_Village__Knowitall_Porch,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1 => Exit {
            id: ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1,
            time: 2000,
            dest: SpotId::KF__Kokiri_Village__Shop_Porch,
            price: Currency::Free,
            loc_id: None,
        },
        ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1 => Exit {
            id: ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1,
            time: 2000,
            dest: SpotId::KF__Kokiri_Village__Sarias_Porch,
            price: Currency::Free,
            loc_id: None,
        },
    }
}

pub fn build_actions() -> EnumMap<ActionId, Action> {
    enum_map! {
        ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch => Action {
            id: ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch,
            time: 1000,
        },
    }
}

pub fn build_spots() -> EnumMap<SpotId, Spot> {
    enum_map! {
        SpotId::None => Spot::default(),
        SpotId::Deku_Tree__Lobby__Entry => Spot {
            id: SpotId::Deku_Tree__Lobby__Entry,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Lobby__Center.into_usize(),
                end: SpotId::Deku_Tree__Lobby__Vines.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Lobby__Center => Spot {
            id: SpotId::Deku_Tree__Lobby__Center,
            locations: Range {
                start: LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks.into_usize(),
                end: LocationId::Deku_Tree__Lobby__Center__Web.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Lobby__Center__ex__Basement_1__Center_1.into_usize(),
                end: ExitId::Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Lobby__Center.into_usize(),
                end: SpotId::Deku_Tree__Lobby__Vines.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Lobby__Vines => Spot {
            id: SpotId::Deku_Tree__Lobby__Vines,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1.into_usize(),
                end: ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Lobby__Center.into_usize(),
                end: SpotId::Deku_Tree__Lobby__Vines.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Floor_2__Lower => Spot {
            id: SpotId::Deku_Tree__Floor_2__Lower,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1.into_usize(),
                end: ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Floor_2__Lower.into_usize(),
                end: SpotId::Deku_Tree__Floor_2__Vines.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Floor_2__Vines => Spot {
            id: SpotId::Deku_Tree__Floor_2__Vines,
            locations: Range {
                start: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest.into_usize(),
                end: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1.into_usize(),
                end: ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Floor_2__Lower.into_usize(),
                end: SpotId::Deku_Tree__Floor_2__Vines.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Floor_2__Slingshot_Door => Spot {
            id: SpotId::Deku_Tree__Floor_2__Slingshot_Door,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1.into_usize(),
                end: ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Floor_2__Lower.into_usize(),
                end: SpotId::Deku_Tree__Floor_2__Vines.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Scrub_Room__Entry => Spot {
            id: SpotId::Deku_Tree__Scrub_Room__Entry,
            locations: Range {
                start: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub.into_usize(),
                end: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1.into_usize(),
                end: ExitId::Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Scrub_Room__Entry.into_usize(),
                end: SpotId::Deku_Tree__Scrub_Room__Rear.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Scrub_Room__Rear => Spot {
            id: SpotId::Deku_Tree__Scrub_Room__Rear,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1.into_usize(),
                end: ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Scrub_Room__Entry.into_usize(),
                end: SpotId::Deku_Tree__Scrub_Room__Rear.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Slingshot_Room__Entry => Spot {
            id: SpotId::Deku_Tree__Slingshot_Room__Entry,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1.into_usize(),
                end: ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Slingshot_Room__Entry.into_usize(),
                end: SpotId::Deku_Tree__Slingshot_Room__Slingshot.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Slingshot_Room__Slingshot => Spot {
            id: SpotId::Deku_Tree__Slingshot_Room__Slingshot,
            locations: Range {
                start: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest.into_usize(),
                end: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1.into_usize(),
                end: ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Slingshot_Room__Entry.into_usize(),
                end: SpotId::Deku_Tree__Slingshot_Room__Slingshot.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Slingshot_Upper__Ledge => Spot {
            id: SpotId::Deku_Tree__Slingshot_Upper__Ledge,
            locations: Range {
                start: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest.into_usize(),
                end: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1.into_usize(),
                end: ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Slingshot_Upper__Ledge.into_usize(),
                end: SpotId::Deku_Tree__Slingshot_Upper__Ledge.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Floor_3__Climb => Spot {
            id: SpotId::Deku_Tree__Floor_3__Climb,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Floor_3__Climb.into_usize(),
                end: SpotId::Deku_Tree__Floor_3__Door.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Floor_3__Door => Spot {
            id: SpotId::Deku_Tree__Floor_3__Door,
            locations: Range {
                start: LocationId::Deku_Tree__Floor_3__Door__Break_Web.into_usize(),
                end: LocationId::Deku_Tree__Floor_3__Door__Break_Web.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1.into_usize(),
                end: ExitId::Deku_Tree__Floor_3__Door__ex__Lobby__Center_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Floor_3__Climb.into_usize(),
                end: SpotId::Deku_Tree__Floor_3__Door.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Compass_Room__Entry => Spot {
            id: SpotId::Deku_Tree__Compass_Room__Entry,
            locations: Range {
                start: LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web.into_usize(),
                end: LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1.into_usize(),
                end: ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1.into_usize() + 1,
            },
            actions: Range {
                start: ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch.into_usize(),
                end: ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch.into_usize() + 1,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Compass_Room__Compass.into_usize(),
                end: SpotId::Deku_Tree__Compass_Room__Ledge.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Compass_Room__Compass => Spot {
            id: SpotId::Deku_Tree__Compass_Room__Compass,
            locations: Range {
                start: LocationId::Deku_Tree__Compass_Room__Compass__Chest.into_usize(),
                end: LocationId::Deku_Tree__Compass_Room__Compass__Chest.into_usize() + 1,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Compass_Room__Compass.into_usize(),
                end: SpotId::Deku_Tree__Compass_Room__Ledge.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Compass_Room__Ledge => Spot {
            id: SpotId::Deku_Tree__Compass_Room__Ledge,
            locations: Range {
                start: LocationId::Deku_Tree__Compass_Room__Ledge__Chest.into_usize(),
                end: LocationId::Deku_Tree__Compass_Room__Ledge__GS.into_usize() + 1,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Compass_Room__Compass.into_usize(),
                end: SpotId::Deku_Tree__Compass_Room__Ledge.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Basement_1__Center => Spot {
            id: SpotId::Deku_Tree__Basement_1__Center,
            locations: Range {
                start: LocationId::Deku_Tree__Basement_1__Center__Vines_GS.into_usize(),
                end: LocationId::Deku_Tree__Basement_1__Center__Vines_GS.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1.into_usize(),
                end: ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Basement_1__Center.into_usize(),
                end: SpotId::Deku_Tree__Basement_1__South_Door.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Basement_1__Corner => Spot {
            id: SpotId::Deku_Tree__Basement_1__Corner,
            locations: Range {
                start: LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web.into_usize(),
                end: LocationId::Deku_Tree__Basement_1__Corner__Switch.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1.into_usize(),
                end: ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Basement_1__Center.into_usize(),
                end: SpotId::Deku_Tree__Basement_1__South_Door.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Basement_1__South_Door => Spot {
            id: SpotId::Deku_Tree__Basement_1__South_Door,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1.into_usize(),
                end: ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Basement_1__Center.into_usize(),
                end: SpotId::Deku_Tree__Basement_1__South_Door.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Back_Room__South => Spot {
            id: SpotId::Deku_Tree__Back_Room__South,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Back_Room__East.into_usize(),
                end: SpotId::Deku_Tree__Back_Room__South.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Back_Room__Northwest => Spot {
            id: SpotId::Deku_Tree__Back_Room__Northwest,
            locations: Range {
                start: LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall.into_usize(),
                end: LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1.into_usize(),
                end: ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Back_Room__East.into_usize(),
                end: SpotId::Deku_Tree__Back_Room__South.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Back_Room__East => Spot {
            id: SpotId::Deku_Tree__Back_Room__East,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1.into_usize(),
                end: ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Back_Room__East.into_usize(),
                end: SpotId::Deku_Tree__Back_Room__South.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Skull_Room__Entry => Spot {
            id: SpotId::Deku_Tree__Skull_Room__Entry,
            locations: Range {
                start: LocationId::Deku_Tree__Skull_Room__Entry__GS.into_usize(),
                end: LocationId::Deku_Tree__Skull_Room__Entry__GS.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1.into_usize(),
                end: ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Skull_Room__Entry.into_usize(),
                end: SpotId::Deku_Tree__Skull_Room__Entry.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Basement_Ledge__Block => Spot {
            id: SpotId::Deku_Tree__Basement_Ledge__Block,
            locations: Range {
                start: LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block.into_usize(),
                end: LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1.into_usize(),
                end: ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Basement_Ledge__Block.into_usize(),
                end: SpotId::Deku_Tree__Basement_Ledge__Web.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Basement_Ledge__Web => Spot {
            id: SpotId::Deku_Tree__Basement_Ledge__Web,
            locations: Range {
                start: LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web.into_usize(),
                end: LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1.into_usize(),
                end: ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Basement_Ledge__Block.into_usize(),
                end: SpotId::Deku_Tree__Basement_Ledge__Web.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Basement_2__Pool => Spot {
            id: SpotId::Deku_Tree__Basement_2__Pool,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1.into_usize(),
                end: ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Basement_2__Boss_Door.into_usize(),
                end: SpotId::Deku_Tree__Basement_2__Pool.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Basement_2__Boss_Door => Spot {
            id: SpotId::Deku_Tree__Basement_2__Boss_Door,
            locations: Range {
                start: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs.into_usize(),
                end: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1.into_usize(),
                end: ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Basement_2__Boss_Door.into_usize(),
                end: SpotId::Deku_Tree__Basement_2__Pool.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Boss_Room__Entry => Spot {
            id: SpotId::Deku_Tree__Boss_Room__Entry,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Boss_Room__Arena.into_usize(),
                end: SpotId::Deku_Tree__Boss_Room__Entry.into_usize() + 1,
            },
        },
        SpotId::Deku_Tree__Boss_Room__Arena => Spot {
            id: SpotId::Deku_Tree__Boss_Room__Arena,
            locations: Range {
                start: LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp.into_usize(),
                end: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill.into_usize() + 1,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Deku_Tree__Boss_Room__Arena.into_usize(),
                end: SpotId::Deku_Tree__Boss_Room__Entry.into_usize() + 1,
            },
        },
        SpotId::KF__Links_House__Start_Point => Spot {
            id: SpotId::KF__Links_House__Start_Point,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Links_House__Entry.into_usize(),
                end: SpotId::KF__Links_House__Start_Point.into_usize() + 1,
            },
        },
        SpotId::KF__Links_House__Entry => Spot {
            id: SpotId::KF__Links_House__Entry,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1.into_usize(),
                end: ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Links_House__Entry.into_usize(),
                end: SpotId::KF__Links_House__Start_Point.into_usize() + 1,
            },
        },
        SpotId::KF__Kokiri_Village__Links_Porch => Spot {
            id: SpotId::KF__Kokiri_Village__Links_Porch,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1.into_usize(),
                end: ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Kokiri_Village__Knowitall_Porch.into_usize(),
                end: SpotId::KF__Kokiri_Village__Training_Center.into_usize() + 1,
            },
        },
        SpotId::KF__Kokiri_Village__Midos_Porch => Spot {
            id: SpotId::KF__Kokiri_Village__Midos_Porch,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1.into_usize(),
                end: ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Kokiri_Village__Knowitall_Porch.into_usize(),
                end: SpotId::KF__Kokiri_Village__Training_Center.into_usize() + 1,
            },
        },
        SpotId::KF__Kokiri_Village__Knowitall_Porch => Spot {
            id: SpotId::KF__Kokiri_Village__Knowitall_Porch,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1.into_usize(),
                end: ExitId::KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Kokiri_Village__Knowitall_Porch.into_usize(),
                end: SpotId::KF__Kokiri_Village__Training_Center.into_usize() + 1,
            },
        },
        SpotId::KF__Kokiri_Village__Training_Center => Spot {
            id: SpotId::KF__Kokiri_Village__Training_Center,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1.into_usize(),
                end: ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Kokiri_Village__Knowitall_Porch.into_usize(),
                end: SpotId::KF__Kokiri_Village__Training_Center.into_usize() + 1,
            },
        },
        SpotId::KF__Kokiri_Village__Shop_Porch => Spot {
            id: SpotId::KF__Kokiri_Village__Shop_Porch,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1.into_usize(),
                end: ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Kokiri_Village__Knowitall_Porch.into_usize(),
                end: SpotId::KF__Kokiri_Village__Training_Center.into_usize() + 1,
            },
        },
        SpotId::KF__Kokiri_Village__Sarias_Porch => Spot {
            id: SpotId::KF__Kokiri_Village__Sarias_Porch,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1.into_usize(),
                end: ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Kokiri_Village__Knowitall_Porch.into_usize(),
                end: SpotId::KF__Kokiri_Village__Training_Center.into_usize() + 1,
            },
        },
        SpotId::KF__Kokiri_Village__Midos_Guardpost => Spot {
            id: SpotId::KF__Kokiri_Village__Midos_Guardpost,
            locations: Range {
                start: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido.into_usize(),
                end: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1.into_usize(),
                end: ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Kokiri_Village__Knowitall_Porch.into_usize(),
                end: SpotId::KF__Kokiri_Village__Training_Center.into_usize() + 1,
            },
        },
        SpotId::KF__Boulder_Maze__Entry => Spot {
            id: SpotId::KF__Boulder_Maze__Entry,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1.into_usize(),
                end: ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Boulder_Maze__Entry.into_usize(),
                end: SpotId::KF__Boulder_Maze__Reward.into_usize() + 1,
            },
        },
        SpotId::KF__Boulder_Maze__Reward => Spot {
            id: SpotId::KF__Boulder_Maze__Reward,
            locations: Range {
                start: LocationId::KF__Boulder_Maze__Reward__Chest.into_usize(),
                end: LocationId::KF__Boulder_Maze__Reward__Chest.into_usize() + 1,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Boulder_Maze__Entry.into_usize(),
                end: SpotId::KF__Boulder_Maze__Reward.into_usize() + 1,
            },
        },
        SpotId::KF__Baba_Corridor__Village_Side => Spot {
            id: SpotId::KF__Baba_Corridor__Village_Side,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1.into_usize(),
                end: ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Baba_Corridor__Deku_Babas.into_usize(),
                end: SpotId::KF__Baba_Corridor__Village_Side.into_usize() + 1,
            },
        },
        SpotId::KF__Baba_Corridor__Deku_Babas => Spot {
            id: SpotId::KF__Baba_Corridor__Deku_Babas,
            locations: Range {
                start: LocationId::KF__Baba_Corridor__Deku_Babas__Nuts.into_usize(),
                end: LocationId::KF__Baba_Corridor__Deku_Babas__Sticks.into_usize() + 1,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Baba_Corridor__Deku_Babas.into_usize(),
                end: SpotId::KF__Baba_Corridor__Village_Side.into_usize() + 1,
            },
        },
        SpotId::KF__Baba_Corridor__Tree_Side => Spot {
            id: SpotId::KF__Baba_Corridor__Tree_Side,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1.into_usize(),
                end: ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Baba_Corridor__Deku_Babas.into_usize(),
                end: SpotId::KF__Baba_Corridor__Village_Side.into_usize() + 1,
            },
        },
        SpotId::KF__Outside_Deku_Tree__Entry => Spot {
            id: SpotId::KF__Outside_Deku_Tree__Entry,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1.into_usize(),
                end: ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Outside_Deku_Tree__Entry.into_usize(),
                end: SpotId::KF__Outside_Deku_Tree__Right.into_usize() + 1,
            },
        },
        SpotId::KF__Outside_Deku_Tree__Left => Spot {
            id: SpotId::KF__Outside_Deku_Tree__Left,
            locations: Range {
                start: LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone.into_usize(),
                end: LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone.into_usize() + 1,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Outside_Deku_Tree__Entry.into_usize(),
                end: SpotId::KF__Outside_Deku_Tree__Right.into_usize() + 1,
            },
        },
        SpotId::KF__Outside_Deku_Tree__Right => Spot {
            id: SpotId::KF__Outside_Deku_Tree__Right,
            locations: Range {
                start: LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone.into_usize(),
                end: LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone.into_usize() + 1,
            },
            exits: Range {
                start: 0, end: 0,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Outside_Deku_Tree__Entry.into_usize(),
                end: SpotId::KF__Outside_Deku_Tree__Right.into_usize() + 1,
            },
        },
        SpotId::KF__Outside_Deku_Tree__Mouth => Spot {
            id: SpotId::KF__Outside_Deku_Tree__Mouth,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1.into_usize(),
                end: ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Outside_Deku_Tree__Entry.into_usize(),
                end: SpotId::KF__Outside_Deku_Tree__Right.into_usize() + 1,
            },
        },
        SpotId::KF__Midos_House__Entry => Spot {
            id: SpotId::KF__Midos_House__Entry,
            locations: Range {
                start: LocationId::KF__Midos_House__Entry__Bottom_Left_Chest.into_usize(),
                end: LocationId::KF__Midos_House__Entry__Top_Right_Chest.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1.into_usize(),
                end: ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Midos_House__Entry.into_usize(),
                end: SpotId::KF__Midos_House__Entry.into_usize() + 1,
            },
        },
        SpotId::KF__Knowitall_House__Entry => Spot {
            id: SpotId::KF__Knowitall_House__Entry,
            locations: Range {
                start: 0, end: 0,
            },
            exits: Range {
                start: ExitId::KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1.into_usize(),
                end: ExitId::KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Knowitall_House__Entry.into_usize(),
                end: SpotId::KF__Knowitall_House__Entry.into_usize() + 1,
            },
        },
        SpotId::KF__Shop__Entry => Spot {
            id: SpotId::KF__Shop__Entry,
            locations: Range {
                start: LocationId::KF__Shop__Entry__Blue_Rupee.into_usize(),
                end: LocationId::KF__Shop__Entry__Item_8.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1.into_usize(),
                end: ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::KF__Shop__Entry.into_usize(),
                end: SpotId::KF__Shop__Entry.into_usize() + 1,
            },
        },
        SpotId::Kak__Spider_House__Entry => Spot {
            id: SpotId::Kak__Spider_House__Entry,
            locations: Range {
                start: LocationId::Kak__Spider_House__Entry__Skulls_10.into_usize(),
                end: LocationId::Kak__Spider_House__Entry__Skulls_10.into_usize() + 1,
            },
            exits: Range {
                start: ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1.into_usize(),
                end: ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1.into_usize() + 1,
            },
            actions: Range {
                start: 0, end: 0,
            },
            area_spots: Range {
                start: SpotId::Kak__Spider_House__Entry.into_usize(),
                end: SpotId::Kak__Spider_House__Entry.into_usize() + 1,
            },
        },
    }
}

pub fn build_warps() -> EnumMap<WarpId, Warp> {
    enum_map! {
        WarpId::Minuet => Warp {
            id: WarpId::Minuet,
            dest: SpotId::KF__Kokiri_Village__Shop_Porch,
            time: 5000,
        },
        WarpId::Save => Warp {
            id: WarpId::Save,
            dest: SpotId::None,
            time: 8000,
        },
    }
}

pub fn spot_locations(id: SpotId) -> Range<usize> {
    match id {
        SpotId::None => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Lobby__Entry => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Lobby__Center => Range {
            start: LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks.into_usize(),
            end: LocationId::Deku_Tree__Lobby__Center__Web.into_usize() + 1,
        },
        SpotId::Deku_Tree__Lobby__Vines => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Floor_2__Lower => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Floor_2__Vines => Range {
            start: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest.into_usize(),
            end: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest.into_usize() + 1,
        },
        SpotId::Deku_Tree__Floor_2__Slingshot_Door => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Scrub_Room__Entry => Range {
            start: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub.into_usize(),
            end: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub.into_usize() + 1,
        },
        SpotId::Deku_Tree__Scrub_Room__Rear => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Slingshot_Room__Entry => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Slingshot_Room__Slingshot => Range {
            start: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest.into_usize(),
            end: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest.into_usize() + 1,
        },
        SpotId::Deku_Tree__Slingshot_Upper__Ledge => Range {
            start: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest.into_usize(),
            end: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest.into_usize() + 1,
        },
        SpotId::Deku_Tree__Floor_3__Climb => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Floor_3__Door => Range {
            start: LocationId::Deku_Tree__Floor_3__Door__Break_Web.into_usize(),
            end: LocationId::Deku_Tree__Floor_3__Door__Break_Web.into_usize() + 1,
        },
        SpotId::Deku_Tree__Compass_Room__Entry => Range {
            start: LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web.into_usize(),
            end: LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web.into_usize() + 1,
        },
        SpotId::Deku_Tree__Compass_Room__Compass => Range {
            start: LocationId::Deku_Tree__Compass_Room__Compass__Chest.into_usize(),
            end: LocationId::Deku_Tree__Compass_Room__Compass__Chest.into_usize() + 1,
        },
        SpotId::Deku_Tree__Compass_Room__Ledge => Range {
            start: LocationId::Deku_Tree__Compass_Room__Ledge__Chest.into_usize(),
            end: LocationId::Deku_Tree__Compass_Room__Ledge__GS.into_usize() + 1,
        },
        SpotId::Deku_Tree__Basement_1__Center => Range {
            start: LocationId::Deku_Tree__Basement_1__Center__Vines_GS.into_usize(),
            end: LocationId::Deku_Tree__Basement_1__Center__Vines_GS.into_usize() + 1,
        },
        SpotId::Deku_Tree__Basement_1__Corner => Range {
            start: LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web.into_usize(),
            end: LocationId::Deku_Tree__Basement_1__Corner__Switch.into_usize() + 1,
        },
        SpotId::Deku_Tree__Basement_1__South_Door => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Back_Room__South => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Back_Room__Northwest => Range {
            start: LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall.into_usize(),
            end: LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web.into_usize() + 1,
        },
        SpotId::Deku_Tree__Back_Room__East => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Skull_Room__Entry => Range {
            start: LocationId::Deku_Tree__Skull_Room__Entry__GS.into_usize(),
            end: LocationId::Deku_Tree__Skull_Room__Entry__GS.into_usize() + 1,
        },
        SpotId::Deku_Tree__Basement_Ledge__Block => Range {
            start: LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block.into_usize(),
            end: LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block.into_usize() + 1,
        },
        SpotId::Deku_Tree__Basement_Ledge__Web => Range {
            start: LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web.into_usize(),
            end: LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web.into_usize() + 1,
        },
        SpotId::Deku_Tree__Basement_2__Pool => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Basement_2__Boss_Door => Range {
            start: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs.into_usize(),
            end: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs.into_usize() + 1,
        },
        SpotId::Deku_Tree__Boss_Room__Entry => Range { start: 0, end: 0 },
        SpotId::Deku_Tree__Boss_Room__Arena => Range {
            start: LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp.into_usize(),
            end: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill.into_usize() + 1,
        },
        SpotId::KF__Links_House__Start_Point => Range { start: 0, end: 0 },
        SpotId::KF__Links_House__Entry => Range { start: 0, end: 0 },
        SpotId::KF__Kokiri_Village__Links_Porch => Range { start: 0, end: 0 },
        SpotId::KF__Kokiri_Village__Midos_Porch => Range { start: 0, end: 0 },
        SpotId::KF__Kokiri_Village__Knowitall_Porch => Range { start: 0, end: 0 },
        SpotId::KF__Kokiri_Village__Training_Center => Range { start: 0, end: 0 },
        SpotId::KF__Kokiri_Village__Shop_Porch => Range { start: 0, end: 0 },
        SpotId::KF__Kokiri_Village__Sarias_Porch => Range { start: 0, end: 0 },
        SpotId::KF__Kokiri_Village__Midos_Guardpost => Range {
            start: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido.into_usize(),
            end: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido.into_usize() + 1,
        },
        SpotId::KF__Boulder_Maze__Entry => Range { start: 0, end: 0 },
        SpotId::KF__Boulder_Maze__Reward => Range {
            start: LocationId::KF__Boulder_Maze__Reward__Chest.into_usize(),
            end: LocationId::KF__Boulder_Maze__Reward__Chest.into_usize() + 1,
        },
        SpotId::KF__Baba_Corridor__Village_Side => Range { start: 0, end: 0 },
        SpotId::KF__Baba_Corridor__Deku_Babas => Range {
            start: LocationId::KF__Baba_Corridor__Deku_Babas__Nuts.into_usize(),
            end: LocationId::KF__Baba_Corridor__Deku_Babas__Sticks.into_usize() + 1,
        },
        SpotId::KF__Baba_Corridor__Tree_Side => Range { start: 0, end: 0 },
        SpotId::KF__Outside_Deku_Tree__Entry => Range { start: 0, end: 0 },
        SpotId::KF__Outside_Deku_Tree__Left => Range {
            start: LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone.into_usize(),
            end: LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone.into_usize() + 1,
        },
        SpotId::KF__Outside_Deku_Tree__Right => Range {
            start: LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone.into_usize(),
            end: LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone.into_usize() + 1,
        },
        SpotId::KF__Outside_Deku_Tree__Mouth => Range { start: 0, end: 0 },
        SpotId::KF__Midos_House__Entry => Range {
            start: LocationId::KF__Midos_House__Entry__Bottom_Left_Chest.into_usize(),
            end: LocationId::KF__Midos_House__Entry__Top_Right_Chest.into_usize() + 1,
        },
        SpotId::KF__Knowitall_House__Entry => Range { start: 0, end: 0 },
        SpotId::KF__Shop__Entry => Range {
            start: LocationId::KF__Shop__Entry__Blue_Rupee.into_usize(),
            end: LocationId::KF__Shop__Entry__Item_8.into_usize() + 1,
        },
        SpotId::Kak__Spider_House__Entry => Range {
            start: LocationId::Kak__Spider_House__Entry__Skulls_10.into_usize(),
            end: LocationId::Kak__Spider_House__Entry__Skulls_10.into_usize() + 1,
        },
    }
}

pub fn area_locations(id: AreaId) -> Range<usize> {
    match id {
        AreaId::Deku_Tree__Lobby => Range {
            start: LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks.into_usize(),
            end: LocationId::Deku_Tree__Lobby__Center__Web.into_usize(),
        },
        AreaId::Deku_Tree__Floor_2 => Range {
            start: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest.into_usize(),
            end: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest.into_usize(),
        },
        AreaId::Deku_Tree__Scrub_Room => Range {
            start: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub.into_usize(),
            end: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub.into_usize(),
        },
        AreaId::Deku_Tree__Slingshot_Room => Range {
            start: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest.into_usize(),
            end: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest.into_usize(),
        },
        AreaId::Deku_Tree__Slingshot_Upper => Range {
            start: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest.into_usize(),
            end: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest.into_usize(),
        },
        AreaId::Deku_Tree__Floor_3 => Range {
            start: LocationId::Deku_Tree__Floor_3__Door__Break_Web.into_usize(),
            end: LocationId::Deku_Tree__Floor_3__Door__Break_Web.into_usize(),
        },
        AreaId::Deku_Tree__Compass_Room => Range {
            start: LocationId::Deku_Tree__Compass_Room__Compass__Chest.into_usize(),
            end: LocationId::Deku_Tree__Compass_Room__Ledge__GS.into_usize(),
        },
        AreaId::Deku_Tree__Basement_1 => Range {
            start: LocationId::Deku_Tree__Basement_1__Center__Vines_GS.into_usize(),
            end: LocationId::Deku_Tree__Basement_1__Corner__Switch.into_usize(),
        },
        AreaId::Deku_Tree__Back_Room => Range {
            start: LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall.into_usize(),
            end: LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web.into_usize(),
        },
        AreaId::Deku_Tree__Skull_Room => Range {
            start: LocationId::Deku_Tree__Skull_Room__Entry__GS.into_usize(),
            end: LocationId::Deku_Tree__Skull_Room__Entry__GS.into_usize(),
        },
        AreaId::Deku_Tree__Basement_Ledge => Range {
            start: LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block.into_usize(),
            end: LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web.into_usize(),
        },
        AreaId::Deku_Tree__Basement_2 => Range {
            start: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs.into_usize(),
            end: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs.into_usize(),
        },
        AreaId::Deku_Tree__Boss_Room => Range {
            start: LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp.into_usize(),
            end: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill.into_usize(),
        },
        AreaId::KF__Links_House => Range { start: 0, end: 0 },
        AreaId::KF__Kokiri_Village => Range {
            start: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido.into_usize(),
            end: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido.into_usize(),
        },
        AreaId::KF__Boulder_Maze => Range {
            start: LocationId::KF__Boulder_Maze__Reward__Chest.into_usize(),
            end: LocationId::KF__Boulder_Maze__Reward__Chest.into_usize(),
        },
        AreaId::KF__Baba_Corridor => Range {
            start: LocationId::KF__Baba_Corridor__Deku_Babas__Nuts.into_usize(),
            end: LocationId::KF__Baba_Corridor__Deku_Babas__Sticks.into_usize(),
        },
        AreaId::KF__Outside_Deku_Tree => Range {
            start: LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone.into_usize(),
            end: LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone.into_usize(),
        },
        AreaId::KF__Midos_House => Range {
            start: LocationId::KF__Midos_House__Entry__Bottom_Left_Chest.into_usize(),
            end: LocationId::KF__Midos_House__Entry__Top_Right_Chest.into_usize(),
        },
        AreaId::KF__Knowitall_House => Range { start: 0, end: 0 },
        AreaId::KF__Shop => Range {
            start: LocationId::KF__Shop__Entry__Blue_Rupee.into_usize(),
            end: LocationId::KF__Shop__Entry__Item_8.into_usize(),
        },
        AreaId::Kak__Spider_House => Range {
            start: LocationId::Kak__Spider_House__Entry__Skulls_10.into_usize(),
            end: LocationId::Kak__Spider_House__Entry__Skulls_10.into_usize(),
        },
    }
}

pub fn region_locations(id: RegionId) -> Range<usize> {
    match id {
        RegionId::Deku_Tree => Range {
            start: LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall.into_usize(),
            end: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest.into_usize(),
        },
        RegionId::KF => Range {
            start: LocationId::KF__Baba_Corridor__Deku_Babas__Nuts.into_usize(),
            end: LocationId::KF__Shop__Entry__Item_8.into_usize(),
        },
        RegionId::Kak => Range {
            start: LocationId::Kak__Spider_House__Entry__Skulls_10.into_usize(),
            end: LocationId::Kak__Spider_House__Entry__Skulls_10.into_usize(),
        },
    }
}
