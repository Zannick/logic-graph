//! AUTOGENERATED FOR sample - DO NOT MODIFY
//!
//! Context (game state).

#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(unused_variables)]
#![allow(unused_parens)]

use crate::context::*;
use crate::items::Item;
use crate::prices::Currency;
use crate::*;
use analyzer::context::Ctx;
use analyzer::world;
use enum_map::{enum_map, EnumMap};
use std::fmt;

#[derive(Debug, PartialEq, Eq, Copy, Clone, enum_map::Enum)]
pub enum RegionId {
    Deku_Tree,
    KF,
    Kak,
}
impl fmt::Display for RegionId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            RegionId::Deku_Tree => write!(f, "{}", "Deku Tree"),
            RegionId::KF => write!(f, "{}", "Kokiri Forest"),
            RegionId::Kak => write!(f, "{}", "Kakariko Village"),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, enum_map::Enum)]
pub enum AreaId {
    Deku_Tree__Lobby,
    Deku_Tree__Floor_2,
    Deku_Tree__Scrub_Room,
    Deku_Tree__Slingshot_Room,
    Deku_Tree__Slingshot_Upper,
    Deku_Tree__Floor_3,
    Deku_Tree__Compass_Room,
    Deku_Tree__Basement_1,
    Deku_Tree__Back_Room,
    Deku_Tree__Skull_Room,
    Deku_Tree__Basement_Ledge,
    Deku_Tree__Basement_2,
    Deku_Tree__Boss_Room,
    KF__Links_House,
    KF__Kokiri_Village,
    KF__Boulder_Maze,
    KF__Baba_Corridor,
    KF__Outside_Deku_Tree,
    KF__Midos_House,
    KF__Knowitall_House,
    KF__Shop,
    Kak__Spider_House,
}
impl fmt::Display for AreaId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            AreaId::Deku_Tree__Lobby => write!(f, "{}", "Deku Tree > Lobby"),
            AreaId::Deku_Tree__Floor_2 => write!(f, "{}", "Deku Tree > Floor 2"),
            AreaId::Deku_Tree__Scrub_Room => write!(f, "{}", "Deku Tree > Scrub Room"),
            AreaId::Deku_Tree__Slingshot_Room => write!(f, "{}", "Deku Tree > Slingshot Room"),
            AreaId::Deku_Tree__Slingshot_Upper => write!(f, "{}", "Deku Tree > Slingshot Upper"),
            AreaId::Deku_Tree__Floor_3 => write!(f, "{}", "Deku Tree > Floor 3"),
            AreaId::Deku_Tree__Compass_Room => write!(f, "{}", "Deku Tree > Compass Room"),
            AreaId::Deku_Tree__Basement_1 => write!(f, "{}", "Deku Tree > Basement 1"),
            AreaId::Deku_Tree__Back_Room => write!(f, "{}", "Deku Tree > Back Room"),
            AreaId::Deku_Tree__Skull_Room => write!(f, "{}", "Deku Tree > Skull Room"),
            AreaId::Deku_Tree__Basement_Ledge => write!(f, "{}", "Deku Tree > Basement Ledge"),
            AreaId::Deku_Tree__Basement_2 => write!(f, "{}", "Deku Tree > Basement 2"),
            AreaId::Deku_Tree__Boss_Room => write!(f, "{}", "Deku Tree > Boss Room"),
            AreaId::KF__Links_House => write!(f, "{}", "KF > Link's House"),
            AreaId::KF__Kokiri_Village => write!(f, "{}", "KF > Kokiri Village"),
            AreaId::KF__Boulder_Maze => write!(f, "{}", "KF > Boulder Maze"),
            AreaId::KF__Baba_Corridor => write!(f, "{}", "KF > Baba Corridor"),
            AreaId::KF__Outside_Deku_Tree => write!(f, "{}", "KF > Outside Deku Tree"),
            AreaId::KF__Midos_House => write!(f, "{}", "KF > Mido's House"),
            AreaId::KF__Knowitall_House => write!(f, "{}", "KF > Know-it-all House"),
            AreaId::KF__Shop => write!(f, "{}", "KF > Shop"),
            AreaId::Kak__Spider_House => write!(f, "{}", "Kak > Spider House"),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, enum_map::Enum, Default)]
pub enum SpotId {
    #[default]
    None,
    Deku_Tree__Lobby__Entry,
    Deku_Tree__Lobby__Center,
    Deku_Tree__Lobby__Vines,
    Deku_Tree__Floor_2__Lower,
    Deku_Tree__Floor_2__Vines,
    Deku_Tree__Floor_2__Slingshot_Door,
    Deku_Tree__Scrub_Room__Entry,
    Deku_Tree__Scrub_Room__Rear,
    Deku_Tree__Slingshot_Room__Entry,
    Deku_Tree__Slingshot_Room__Slingshot,
    Deku_Tree__Slingshot_Upper__Ledge,
    Deku_Tree__Floor_3__Climb,
    Deku_Tree__Floor_3__Door,
    Deku_Tree__Compass_Room__Entry,
    Deku_Tree__Compass_Room__Compass,
    Deku_Tree__Compass_Room__Ledge,
    Deku_Tree__Basement_1__Center,
    Deku_Tree__Basement_1__Corner,
    Deku_Tree__Basement_1__South_Door,
    Deku_Tree__Back_Room__South,
    Deku_Tree__Back_Room__Northwest,
    Deku_Tree__Back_Room__East,
    Deku_Tree__Skull_Room__Entry,
    Deku_Tree__Basement_Ledge__Block,
    Deku_Tree__Basement_Ledge__Web,
    Deku_Tree__Basement_2__Pool,
    Deku_Tree__Basement_2__Boss_Door,
    Deku_Tree__Boss_Room__Entry,
    Deku_Tree__Boss_Room__Arena,
    KF__Links_House__Start_Point,
    KF__Links_House__Entry,
    KF__Kokiri_Village__Links_Porch,
    KF__Kokiri_Village__Midos_Porch,
    KF__Kokiri_Village__Knowitall_Porch,
    KF__Kokiri_Village__Training_Center,
    KF__Kokiri_Village__Shop_Porch,
    KF__Kokiri_Village__Sarias_Porch,
    KF__Kokiri_Village__Midos_Guardpost,
    KF__Boulder_Maze__Entry,
    KF__Boulder_Maze__Reward,
    KF__Baba_Corridor__Village_Side,
    KF__Baba_Corridor__Deku_Babas,
    KF__Baba_Corridor__Tree_Side,
    KF__Outside_Deku_Tree__Entry,
    KF__Outside_Deku_Tree__Left,
    KF__Outside_Deku_Tree__Right,
    KF__Outside_Deku_Tree__Mouth,
    KF__Midos_House__Entry,
    KF__Knowitall_House__Entry,
    KF__Shop__Entry,
    Kak__Spider_House__Entry,
}
impl fmt::Display for SpotId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            SpotId::None => write!(f, "{}", "None"),
            SpotId::Deku_Tree__Lobby__Entry => write!(f, "{}", "Deku Tree > Lobby > Entry"),
            SpotId::Deku_Tree__Lobby__Center => write!(f, "{}", "Deku Tree > Lobby > Center"),
            SpotId::Deku_Tree__Lobby__Vines => write!(f, "{}", "Deku Tree > Lobby > Vines"),
            SpotId::Deku_Tree__Floor_2__Lower => write!(f, "{}", "Deku Tree > Floor 2 > Lower"),
            SpotId::Deku_Tree__Floor_2__Vines => write!(f, "{}", "Deku Tree > Floor 2 > Vines"),
            SpotId::Deku_Tree__Floor_2__Slingshot_Door => {
                write!(f, "{}", "Deku Tree > Floor 2 > Slingshot Door")
            }
            SpotId::Deku_Tree__Scrub_Room__Entry => {
                write!(f, "{}", "Deku Tree > Scrub Room > Entry")
            }
            SpotId::Deku_Tree__Scrub_Room__Rear => write!(f, "{}", "Deku Tree > Scrub Room > Rear"),
            SpotId::Deku_Tree__Slingshot_Room__Entry => {
                write!(f, "{}", "Deku Tree > Slingshot Room > Entry")
            }
            SpotId::Deku_Tree__Slingshot_Room__Slingshot => {
                write!(f, "{}", "Deku Tree > Slingshot Room > Slingshot")
            }
            SpotId::Deku_Tree__Slingshot_Upper__Ledge => {
                write!(f, "{}", "Deku Tree > Slingshot Upper > Ledge")
            }
            SpotId::Deku_Tree__Floor_3__Climb => write!(f, "{}", "Deku Tree > Floor 3 > Climb"),
            SpotId::Deku_Tree__Floor_3__Door => write!(f, "{}", "Deku Tree > Floor 3 > Door"),
            SpotId::Deku_Tree__Compass_Room__Entry => {
                write!(f, "{}", "Deku Tree > Compass Room > Entry")
            }
            SpotId::Deku_Tree__Compass_Room__Compass => {
                write!(f, "{}", "Deku Tree > Compass Room > Compass")
            }
            SpotId::Deku_Tree__Compass_Room__Ledge => {
                write!(f, "{}", "Deku Tree > Compass Room > Ledge")
            }
            SpotId::Deku_Tree__Basement_1__Center => {
                write!(f, "{}", "Deku Tree > Basement 1 > Center")
            }
            SpotId::Deku_Tree__Basement_1__Corner => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner")
            }
            SpotId::Deku_Tree__Basement_1__South_Door => {
                write!(f, "{}", "Deku Tree > Basement 1 > South Door")
            }
            SpotId::Deku_Tree__Back_Room__South => write!(f, "{}", "Deku Tree > Back Room > South"),
            SpotId::Deku_Tree__Back_Room__Northwest => {
                write!(f, "{}", "Deku Tree > Back Room > Northwest")
            }
            SpotId::Deku_Tree__Back_Room__East => write!(f, "{}", "Deku Tree > Back Room > East"),
            SpotId::Deku_Tree__Skull_Room__Entry => {
                write!(f, "{}", "Deku Tree > Skull Room > Entry")
            }
            SpotId::Deku_Tree__Basement_Ledge__Block => {
                write!(f, "{}", "Deku Tree > Basement Ledge > Block")
            }
            SpotId::Deku_Tree__Basement_Ledge__Web => {
                write!(f, "{}", "Deku Tree > Basement Ledge > Web")
            }
            SpotId::Deku_Tree__Basement_2__Pool => write!(f, "{}", "Deku Tree > Basement 2 > Pool"),
            SpotId::Deku_Tree__Basement_2__Boss_Door => {
                write!(f, "{}", "Deku Tree > Basement 2 > Boss Door")
            }
            SpotId::Deku_Tree__Boss_Room__Entry => write!(f, "{}", "Deku Tree > Boss Room > Entry"),
            SpotId::Deku_Tree__Boss_Room__Arena => write!(f, "{}", "Deku Tree > Boss Room > Arena"),
            SpotId::KF__Links_House__Start_Point => {
                write!(f, "{}", "KF > Link's House > Start Point")
            }
            SpotId::KF__Links_House__Entry => write!(f, "{}", "KF > Link's House > Entry"),
            SpotId::KF__Kokiri_Village__Links_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Link's Porch")
            }
            SpotId::KF__Kokiri_Village__Midos_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Mido's Porch")
            }
            SpotId::KF__Kokiri_Village__Knowitall_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Know-it-all Porch")
            }
            SpotId::KF__Kokiri_Village__Training_Center => {
                write!(f, "{}", "KF > Kokiri Village > Training Center")
            }
            SpotId::KF__Kokiri_Village__Shop_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Shop Porch")
            }
            SpotId::KF__Kokiri_Village__Sarias_Porch => {
                write!(f, "{}", "KF > Kokiri Village > Saria's Porch")
            }
            SpotId::KF__Kokiri_Village__Midos_Guardpost => {
                write!(f, "{}", "KF > Kokiri Village > Mido's Guardpost")
            }
            SpotId::KF__Boulder_Maze__Entry => write!(f, "{}", "KF > Boulder Maze > Entry"),
            SpotId::KF__Boulder_Maze__Reward => write!(f, "{}", "KF > Boulder Maze > Reward"),
            SpotId::KF__Baba_Corridor__Village_Side => {
                write!(f, "{}", "KF > Baba Corridor > Village Side")
            }
            SpotId::KF__Baba_Corridor__Deku_Babas => {
                write!(f, "{}", "KF > Baba Corridor > Deku Babas")
            }
            SpotId::KF__Baba_Corridor__Tree_Side => {
                write!(f, "{}", "KF > Baba Corridor > Tree Side")
            }
            SpotId::KF__Outside_Deku_Tree__Entry => {
                write!(f, "{}", "KF > Outside Deku Tree > Entry")
            }
            SpotId::KF__Outside_Deku_Tree__Left => write!(f, "{}", "KF > Outside Deku Tree > Left"),
            SpotId::KF__Outside_Deku_Tree__Right => {
                write!(f, "{}", "KF > Outside Deku Tree > Right")
            }
            SpotId::KF__Outside_Deku_Tree__Mouth => {
                write!(f, "{}", "KF > Outside Deku Tree > Mouth")
            }
            SpotId::KF__Midos_House__Entry => write!(f, "{}", "KF > Mido's House > Entry"),
            SpotId::KF__Knowitall_House__Entry => write!(f, "{}", "KF > Know-it-all House > Entry"),
            SpotId::KF__Shop__Entry => write!(f, "{}", "KF > Shop > Entry"),
            SpotId::Kak__Spider_House__Entry => write!(f, "{}", "Kak > Spider House > Entry"),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, enum_map::Enum)]
pub enum LocationId {
    Deku_Tree__Lobby__Center__Deku_Baba_Sticks,
    Deku_Tree__Lobby__Center__Deku_Baby_Nuts,
    Deku_Tree__Lobby__Center__Web,
    Deku_Tree__Floor_2__Vines__Map_Chest,
    Deku_Tree__Scrub_Room__Entry__Scrub,
    Deku_Tree__Slingshot_Room__Slingshot__Chest,
    Deku_Tree__Slingshot_Upper__Ledge__Chest,
    Deku_Tree__Floor_3__Door__Break_Web,
    Deku_Tree__Compass_Room__Entry__Burn_Web,
    Deku_Tree__Compass_Room__Compass__Chest,
    Deku_Tree__Compass_Room__Ledge__Chest,
    Deku_Tree__Compass_Room__Ledge__GS,
    Deku_Tree__Basement_1__Center__Vines_GS,
    Deku_Tree__Basement_1__Corner__Switch,
    Deku_Tree__Basement_1__Corner__Chest,
    Deku_Tree__Basement_1__Corner__Gate_GS,
    Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
    Deku_Tree__Back_Room__Northwest__Burn_Web,
    Deku_Tree__Back_Room__Northwest__Break_Wall,
    Deku_Tree__Skull_Room__Entry__GS,
    Deku_Tree__Basement_Ledge__Block__Push_Block,
    Deku_Tree__Basement_Ledge__Web__Burn_Web,
    Deku_Tree__Basement_2__Boss_Door__Scrubs,
    Deku_Tree__Boss_Room__Arena__Gohma,
    Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill,
    Deku_Tree__Boss_Room__Arena__Gohma_Heart,
    Deku_Tree__Boss_Room__Arena__Blue_Warp,
    KF__Kokiri_Village__Midos_Guardpost__Show_Mido,
    KF__Boulder_Maze__Reward__Chest,
    KF__Baba_Corridor__Deku_Babas__Sticks,
    KF__Baba_Corridor__Deku_Babas__Nuts,
    KF__Outside_Deku_Tree__Left__Gossip_Stone,
    KF__Outside_Deku_Tree__Right__Gossip_Stone,
    KF__Midos_House__Entry__Top_Left_Chest,
    KF__Midos_House__Entry__Top_Right_Chest,
    KF__Midos_House__Entry__Bottom_Left_Chest,
    KF__Midos_House__Entry__Bottom_Right_Chest,
    KF__Shop__Entry__Blue_Rupee,
    KF__Shop__Entry__Item_1,
    KF__Shop__Entry__Item_2,
    KF__Shop__Entry__Item_3,
    KF__Shop__Entry__Item_4,
    KF__Shop__Entry__Item_5,
    KF__Shop__Entry__Item_6,
    KF__Shop__Entry__Item_7,
    KF__Shop__Entry__Item_8,
    Kak__Spider_House__Entry__Skulls_10,
}
impl fmt::Display for LocationId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => {
                write!(f, "{}", "Deku Tree > Lobby > Center Deku Baba Sticks")
            }
            LocationId::Deku_Tree__Lobby__Center__Deku_Baby_Nuts => {
                write!(f, "{}", "Deku Tree > Lobby > Center Deku Baby Nuts")
            }
            LocationId::Deku_Tree__Lobby__Center__Web => {
                write!(f, "{}", "Deku Tree > Lobby > Center Web")
            }
            LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => {
                write!(f, "{}", "Deku Tree > Floor 2 > Vines Map Chest")
            }
            LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => {
                write!(f, "{}", "Deku Tree > Scrub Room > Entry Scrub")
            }
            LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => {
                write!(f, "{}", "Deku Tree > Slingshot Room > Slingshot Chest")
            }
            LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => {
                write!(f, "{}", "Deku Tree > Slingshot Upper > Ledge Chest")
            }
            LocationId::Deku_Tree__Floor_3__Door__Break_Web => {
                write!(f, "{}", "Deku Tree > Floor 3 > Door Break Web")
            }
            LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => {
                write!(f, "{}", "Deku Tree > Compass Room > Entry Burn Web")
            }
            LocationId::Deku_Tree__Compass_Room__Compass__Chest => {
                write!(f, "{}", "Deku Tree > Compass Room > Compass Chest")
            }
            LocationId::Deku_Tree__Compass_Room__Ledge__Chest => {
                write!(f, "{}", "Deku Tree > Compass Room > Ledge Chest")
            }
            LocationId::Deku_Tree__Compass_Room__Ledge__GS => {
                write!(f, "{}", "Deku Tree > Compass Room > Ledge GS")
            }
            LocationId::Deku_Tree__Basement_1__Center__Vines_GS => {
                write!(f, "{}", "Deku Tree > Basement 1 > Center Vines GS")
            }
            LocationId::Deku_Tree__Basement_1__Corner__Switch => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Switch")
            }
            LocationId::Deku_Tree__Basement_1__Corner__Chest => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Chest")
            }
            LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Gate GS")
            }
            LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Burn Basement Web")
            }
            LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => {
                write!(f, "{}", "Deku Tree > Back Room > Northwest Burn Web")
            }
            LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => {
                write!(f, "{}", "Deku Tree > Back Room > Northwest Break Wall")
            }
            LocationId::Deku_Tree__Skull_Room__Entry__GS => {
                write!(f, "{}", "Deku Tree > Skull Room > Entry GS")
            }
            LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => {
                write!(f, "{}", "Deku Tree > Basement Ledge > Block Push Block")
            }
            LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => {
                write!(f, "{}", "Deku Tree > Basement Ledge > Web Burn Web")
            }
            LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => {
                write!(f, "{}", "Deku Tree > Basement 2 > Boss Door Scrubs")
            }
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Gohma")
            }
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Gohma Quick Kill")
            }
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Gohma Heart")
            }
            LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Blue Warp")
            }
            LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => {
                write!(f, "{}", "KF > Kokiri Village > Mido's Guardpost Show Mido")
            }
            LocationId::KF__Boulder_Maze__Reward__Chest => {
                write!(f, "{}", "KF > Boulder Maze > Reward Chest")
            }
            LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => {
                write!(f, "{}", "KF > Baba Corridor > Deku Babas Sticks")
            }
            LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => {
                write!(f, "{}", "KF > Baba Corridor > Deku Babas Nuts")
            }
            LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => {
                write!(f, "{}", "KF > Outside Deku Tree > Left Gossip Stone")
            }
            LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => {
                write!(f, "{}", "KF > Outside Deku Tree > Right Gossip Stone")
            }
            LocationId::KF__Midos_House__Entry__Top_Left_Chest => {
                write!(f, "{}", "KF > Mido's House > Entry Top Left Chest")
            }
            LocationId::KF__Midos_House__Entry__Top_Right_Chest => {
                write!(f, "{}", "KF > Mido's House > Entry Top Right Chest")
            }
            LocationId::KF__Midos_House__Entry__Bottom_Left_Chest => {
                write!(f, "{}", "KF > Mido's House > Entry Bottom Left Chest")
            }
            LocationId::KF__Midos_House__Entry__Bottom_Right_Chest => {
                write!(f, "{}", "KF > Mido's House > Entry Bottom Right Chest")
            }
            LocationId::KF__Shop__Entry__Blue_Rupee => {
                write!(f, "{}", "KF > Shop > Entry Blue Rupee")
            }
            LocationId::KF__Shop__Entry__Item_1 => write!(f, "{}", "KF > Shop > Entry Item 1"),
            LocationId::KF__Shop__Entry__Item_2 => write!(f, "{}", "KF > Shop > Entry Item 2"),
            LocationId::KF__Shop__Entry__Item_3 => write!(f, "{}", "KF > Shop > Entry Item 3"),
            LocationId::KF__Shop__Entry__Item_4 => write!(f, "{}", "KF > Shop > Entry Item 4"),
            LocationId::KF__Shop__Entry__Item_5 => write!(f, "{}", "KF > Shop > Entry Item 5"),
            LocationId::KF__Shop__Entry__Item_6 => write!(f, "{}", "KF > Shop > Entry Item 6"),
            LocationId::KF__Shop__Entry__Item_7 => write!(f, "{}", "KF > Shop > Entry Item 7"),
            LocationId::KF__Shop__Entry__Item_8 => write!(f, "{}", "KF > Shop > Entry Item 8"),
            LocationId::Kak__Spider_House__Entry__Skulls_10 => {
                write!(f, "{}", "Kak > Spider House > Entry Skulls 10")
            }
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, enum_map::Enum)]
pub enum ExitId {
    Deku_Tree__Lobby__Center__ex__Basement_1__Center_1,
    Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1,
    Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1,
    Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1,
    Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1,
    Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2,
    Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1,
    Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1,
    Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1,
    Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1,
    Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1,
    Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1,
    Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1,
    Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1,
    Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1,
    Deku_Tree__Floor_3__Door__ex__Lobby__Center_1,
    Deku_Tree__Floor_3__Door__Break_Web,
    Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1,
    Deku_Tree__Compass_Room__Entry__Burn_Web,
    Deku_Tree__Compass_Room__Compass__ex__Ledge_1,
    Deku_Tree__Compass_Room__Ledge__ex__Compass_1,
    Deku_Tree__Basement_1__Center__ex__Lobby__Center_1,
    Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1,
    Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
    Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1,
    Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1,
    Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1,
    Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northweest_1,
    Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1,
    Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1,
    Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1,
    Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1,
    Deku_Tree__Boss_Room__Arena__Blue_Warp,
    KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1,
    KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1,
    KF__Kokiri_Village__Links_Porch__ex__Knowitall_Porch_1,
    KF__Kokiri_Village__Links_Porch__ex__Training_Center_1,
    KF__Kokiri_Village__Links_Porch__ex__Midos_Guardpost_1,
    KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1,
    KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1,
    KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1,
    KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1,
    KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1,
    KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1,
    KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1,
    KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1,
    KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1,
    KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1,
    KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1,
    KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1,
    KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1,
    KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1,
    Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1,
}
impl fmt::Display for ExitId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            ExitId::Deku_Tree__Lobby__Center__ex__Basement_1__Center_1 => write!(
                f,
                "{}",
                "Deku Tree > Lobby > Center ==> Basement 1 > Center (1)"
            ),
            ExitId::Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1 => write!(
                f,
                "{}",
                "Deku Tree > Lobby > Center ==> Basement Ledge > Block (1)"
            ),
            ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1 => {
                write!(f, "{}", "Deku Tree > Lobby > Vines ==> Floor 2 > Lower (1)")
            }
            ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1 => {
                write!(f, "{}", "Deku Tree > Floor 2 > Lower ==> Lobby > Vines (1)")
            }
            ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Vines ==> Floor 3 > Climb (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Vines ==> Floor 3 > Climb (2)"
            ),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1 => {
                write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Lobby > Vines (1)")
            }
            ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1 => {
                write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Lobby > Entry (1)")
            }
            ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Slingshot Door ==> Scrub Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 2 > Slingshot Door ==> Lobby > Entry (1)"
            ),
            ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Scrub Room > Rear ==> Slingshot Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1 => write!(
                f,
                "{}",
                "Deku Tree > Slingshot Room > Entry ==> Scrub Room > Rear (1)"
            ),
            ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1 => write!(
                f,
                "{}",
                "Deku Tree > Slingshot Room > Slingshot ==> Slingshot Upper > Ledge (1)"
            ),
            ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1 => write!(
                f,
                "{}",
                "Deku Tree > Slingshot Upper > Ledge ==> Slingshot Room > Slingshot (1)"
            ),
            ExitId::Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Floor 3 > Door ==> Compass Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Floor_3__Door__ex__Lobby__Center_1 => {
                write!(f, "{}", "Deku Tree > Floor 3 > Door ==> Lobby > Center (1)")
            }
            ExitId::Deku_Tree__Floor_3__Door__Break_Web => {
                write!(f, "{}", "Deku Tree > Floor 3 > Door Break Web")
            }
            ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1 => write!(
                f,
                "{}",
                "Deku Tree > Compass Room > Entry ==> Floor 3 > Door (1)"
            ),
            ExitId::Deku_Tree__Compass_Room__Entry__Burn_Web => {
                write!(f, "{}", "Deku Tree > Compass Room > Entry Burn Web")
            }
            ExitId::Deku_Tree__Compass_Room__Compass__ex__Ledge_1 => {
                write!(f, "{}", "Deku Tree > Compass Room > Compass ==> Ledge (1)")
            }
            ExitId::Deku_Tree__Compass_Room__Ledge__ex__Compass_1 => {
                write!(f, "{}", "Deku Tree > Compass Room > Ledge ==> Compass (1)")
            }
            ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 1 > Center ==> Lobby > Center (1)"
            ),
            ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 1 > Corner ==> Basement Ledge > Block (1)"
            ),
            ExitId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => {
                write!(f, "{}", "Deku Tree > Basement 1 > Corner Burn Basement Web")
            }
            ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 1 > South Door ==> Back Room > South (1)"
            ),
            ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Back Room > Northwest ==> Skull Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1 => write!(
                f,
                "{}",
                "Deku Tree > Back Room > East ==> Basement Ledge > Web (1)"
            ),
            ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northweest_1 => write!(
                f,
                "{}",
                "Deku Tree > Skull Room > Entry ==> Back Room > Northweest (1)"
            ),
            ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement Ledge > Block ==> Basement 1 > Corner (1)"
            ),
            ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement Ledge > Web ==> Basement 2 > Pool (1)"
            ),
            ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 2 > Pool ==> Basement Ledge > Web (1)"
            ),
            ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1 => write!(
                f,
                "{}",
                "Deku Tree > Basement 2 > Boss Door ==> Boss Room > Entry (1)"
            ),
            ExitId::Deku_Tree__Boss_Room__Arena__Blue_Warp => {
                write!(f, "{}", "Deku Tree > Boss Room > Arena Blue Warp")
            }
            ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1 => write!(
                f,
                "{}",
                "KF > Link's House > Entry ==> Kokiri Village > Link's Porch (1)"
            ),
            ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Link's Porch ==> Link's House > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Links_Porch__ex__Knowitall_Porch_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Link's Porch ==> Know-it-all Porch (1)"
            ),
            ExitId::KF__Kokiri_Village__Links_Porch__ex__Training_Center_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Link's Porch ==> Training Center (1)"
            ),
            ExitId::KF__Kokiri_Village__Links_Porch__ex__Midos_Guardpost_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Link's Porch ==> Mido's Guardpost (1)"
            ),
            ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Mido's Porch ==> Mido's House > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Knowitall_Porch__ex__Knowitall_House__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Know-it-all Porch ==> Know-it-all House > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Training Center ==> Boulder Maze > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Shop Porch ==> Shop > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1 => write!(
                f,
                "{}",
                "KF > Kokiri Village > Saria's Porch ==> Kak > Spider House > Entry (1)"
            ),
            ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1 => {
                write!(
                    f,
                    "{}",
                    "KF > Kokiri Village > Mido's Guardpost ==> Baba Corridor > Village Side (1)"
                )
            }
            ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1 => write!(
                f,
                "{}",
                "KF > Boulder Maze > Entry ==> Kokiri Village > Training Center (1)"
            ),
            ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1 => {
                write!(
                    f,
                    "{}",
                    "KF > Baba Corridor > Village Side ==> Kokiri Village > Mido's Guardpost (1)"
                )
            }
            ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1 => write!(
                f,
                "{}",
                "KF > Baba Corridor > Tree Side ==> Outside Deku Tree > Entry (1)"
            ),
            ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1 => write!(
                f,
                "{}",
                "KF > Outside Deku Tree > Entry ==> Baba Corridor > Tree Side (1)"
            ),
            ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1 => write!(
                f,
                "{}",
                "KF > Outside Deku Tree > Mouth ==> Deku Tree > Lobby > Entry (1)"
            ),
            ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1 => write!(
                f,
                "{}",
                "KF > Mido's House > Entry ==> Kokiri Village > Mido's Porch (1)"
            ),
            ExitId::KF__Knowitall_House__Entry__ex__Kokiri_Village__Knowitall_Porch_1 => write!(
                f,
                "{}",
                "KF > Know-it-all House > Entry ==> Kokiri Village > Know-it-all Porch (1)"
            ),
            ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1 => write!(
                f,
                "{}",
                "KF > Shop > Entry ==> Kokiri Village > Shop Porch (1)"
            ),
            ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1 => write!(
                f,
                "{}",
                "Kak > Spider House > Entry ==> KF > Kokiri Village > Saria's Porch (1)"
            ),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, enum_map::Enum)]
pub enum ActionId {
    Deku_Tree__Compass_Room__Entry__Light_Torch,
}
impl fmt::Display for ActionId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch => {
                write!(f, "{}", "Deku Tree > Compass Room > Entry Light Torch")
            }
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, enum_map::Enum, Default)]
pub enum CanonId {
    #[default]
    None,
    Deku_Lobby_Web,
    Deku_Basement_Web,
    Defeat_Gohma,
}
impl fmt::Display for CanonId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            CanonId::None => write!(f, "{}", "None"),
            CanonId::Deku_Lobby_Web => write!(f, "{}", "Deku_Lobby_Web"),
            CanonId::Deku_Basement_Web => write!(f, "{}", "Deku_Basement_Web"),
            CanonId::Defeat_Gohma => write!(f, "{}", "Defeat_Gohma"),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone)]
pub enum History {
    Warp(SpotId),
    Get(LocationId),
    Move(ExitId),
    Activate(ActionId),
}

#[derive(Copy, Clone)]
pub struct Location {
    id: LocationId,
    item: Item,
    canonical: CanonId,
    time: i8,
    pub price: Currency,

    pub access_rule: fn(&Context) -> bool,
}

impl world::Accessible for Location {
    type Context = Context;
    fn can_access(&self, ctx: &Context) -> bool {
        ctx.can_afford(&self.price)
            && match self.id {
                LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => {
                    access_is_adult_or_kokiri_sword_or_boomerang(&ctx)
                }
                LocationId::Deku_Tree__Lobby__Center__Deku_Baby_Nuts => {
                    access_is_adult_or_slingshot_or_sticks_or_kokiri_sword(&ctx)
                }
                LocationId::Deku_Tree__Lobby__Center__Web => access_false(&ctx),
                LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => true,
                LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => access_has_shield(&ctx),
                LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => true,
                LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => true,
                LocationId::Deku_Tree__Floor_3__Door__Break_Web => {
                    access_is_adult_or_can_child_attack_or_nuts(&ctx)
                }
                LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => {
                    access_is_child_and_sticks_and_nuts(&ctx)
                }
                LocationId::Deku_Tree__Compass_Room__Compass__Chest => true,
                LocationId::Deku_Tree__Compass_Room__Ledge__Chest => true,
                LocationId::Deku_Tree__Compass_Room__Ledge__GS => {
                    access_is_adult_or_can_child_attack(&ctx)
                }
                LocationId::Deku_Tree__Basement_1__Center__Vines_GS => {
                    access_is_adult_or_sticks_or_kokiri_sword(&ctx)
                }
                LocationId::Deku_Tree__Basement_1__Corner__Switch => true,
                LocationId::Deku_Tree__Basement_1__Corner__Chest => {
                    access_deku_basement_switch(&ctx)
                }
                LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => {
                    access_is_adult_or_can_child_attack(&ctx)
                }
                LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => {
                    access_deku_basement_block_and_is_child_and_sticks(&ctx)
                }
                LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => {
                    access_has_fire_source_with_torch_or_can_usebow(&ctx)
                }
                LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => {
                    access_deku_back_room_web_and_can_blast_or_smash(&ctx)
                }
                LocationId::Deku_Tree__Skull_Room__Entry__GS => {
                    access_can_useboomerang_or_can_usehookshot(&ctx)
                }
                LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => true,
                LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => {
                    access_has_fire_source(&ctx)
                }
                LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => access_has_shield(&ctx),
                LocationId::Deku_Tree__Boss_Room__Arena__Gohma => {
                    access_nuts_or_can_useslingshot_and_can_jumpslash(&ctx)
                }
                LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => {
                    access_nuts_and_has_shield_and_if_is_child__sticks__else__biggoron_sword_(&ctx)
                }
                LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => access_defeat_gohma(&ctx),
                LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => access_defeat_gohma(&ctx),
                LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => {
                    access_is_child_and_kokiri_sword_and_deku_shield(&ctx)
                }
                LocationId::KF__Boulder_Maze__Reward__Chest => true,
                LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => {
                    access_is_adult_or_kokiri_sword_or_boomerang(&ctx)
                }
                LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => access_is_adult(&ctx),
                LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => true,
                LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => true,
                LocationId::KF__Midos_House__Entry__Top_Left_Chest => true,
                LocationId::KF__Midos_House__Entry__Top_Right_Chest => true,
                LocationId::KF__Midos_House__Entry__Bottom_Left_Chest => true,
                LocationId::KF__Midos_House__Entry__Bottom_Right_Chest => true,
                LocationId::KF__Shop__Entry__Blue_Rupee => true,
                LocationId::KF__Shop__Entry__Item_1 => true,
                LocationId::KF__Shop__Entry__Item_2 => true,
                LocationId::KF__Shop__Entry__Item_3 => true,
                LocationId::KF__Shop__Entry__Item_4 => true,
                LocationId::KF__Shop__Entry__Item_5 => true,
                LocationId::KF__Shop__Entry__Item_6 => true,
                LocationId::KF__Shop__Entry__Item_7 => true,
                LocationId::KF__Shop__Entry__Item_8 => true,
                LocationId::Kak__Spider_House__Entry__Skulls_10 => {
                    access_gold_skulltula_token10(&ctx)
                }
            }
    }
}

impl world::Location for Location {
    type LocId = LocationId;
    type CanonId = CanonId;

    fn id(&self) -> &LocationId {
        &self.id
    }
    fn item(&self) -> &Item {
        &self.item
    }

    fn canon_id(&self) -> &CanonId {
        &self.canonical
    }
}

fn default_access(_ctx: &Context) -> bool {
    true
}

fn access_defeat_ganon(ctx: &Context) -> bool {
    ctx.has(&Item::Defeat_Ganon)
}
fn access_triforce_piecetriforce_count(ctx: &Context) -> bool {
    ctx.count(&Item::Triforce_Piece) >= ctx.triforce_count
}
fn access_kokiri_emerald(ctx: &Context) -> bool {
    ctx.has(&Item::Kokiri_Emerald)
}
fn access_can_playminuet_of_forest(ctx: &Context) -> bool {
    helper__can_play!(ctx, Item::Minuet_of_Forest)
}
fn access_is_adult_or_kokiri_sword_or_boomerang(ctx: &Context) -> bool {
    ((helper__is_adult!(ctx) || ctx.has(&Item::Kokiri_Sword)) || ctx.has(&Item::Boomerang))
}
fn access_is_adult_or_slingshot_or_sticks_or_kokiri_sword(ctx: &Context) -> bool {
    (((helper__is_adult!(ctx) || ctx.has(&Item::Slingshot)) || helper__Sticks!(ctx))
        || ctx.has(&Item::Kokiri_Sword))
}
fn access_false(ctx: &Context) -> bool {
    false
}
fn access_deku_lobby_web(ctx: &Context) -> bool {
    ctx.has(&Item::Deku_Lobby_Web)
}
fn access_deku_lobby_web_and_logic_deku_b1_skip(ctx: &Context) -> bool {
    (ctx.has(&Item::Deku_Lobby_Web) && ctx.logic_deku_b1_skip)
}
fn access_can_useslingshot(ctx: &Context) -> bool {
    helper__can_use!(ctx, Item::Slingshot)
}
fn access_has_shield(ctx: &Context) -> bool {
    helper__has_shield!(ctx)
}
fn access_deku_slingshot_scrub(ctx: &Context) -> bool {
    ctx.has(&Item::Deku_Slingshot_Scrub)
}
fn access_is_adult_or_can_child_attack_or_nuts(ctx: &Context) -> bool {
    ((helper__is_adult!(ctx) || helper__can_child_attack!(ctx)) || helper__Nuts!(ctx))
}
fn access_is_child_and_sticks_and_nuts(ctx: &Context) -> bool {
    ((helper__is_child!(ctx) && helper__Sticks!(ctx)) && helper__Nuts!(ctx))
}
fn access_Deku_Tree__Compass_Room__Entry__Floor(ctx: &Context) -> bool {
    ctx.deku_tree__compass_room__ctx__torch
}
fn access_is_child_and_sticks(ctx: &Context) -> bool {
    (helper__is_child!(ctx) && helper__Sticks!(ctx))
}
fn access_is_adult_or_can_child_attack(ctx: &Context) -> bool {
    (helper__is_adult!(ctx) || helper__can_child_attack!(ctx))
}
fn access_is_adult_or_sticks_or_kokiri_sword(ctx: &Context) -> bool {
    ((helper__is_adult!(ctx) || helper__Sticks!(ctx)) || ctx.has(&Item::Kokiri_Sword))
}
fn access_deku_basement_switch(ctx: &Context) -> bool {
    ctx.has(&Item::Deku_Basement_Switch)
}
fn access_deku_basement_block_and_is_child_and_sticks(ctx: &Context) -> bool {
    ((ctx.has(&Item::Deku_Basement_Block) && helper__is_child!(ctx)) && helper__Sticks!(ctx))
}
fn access_is_adult_or_deku_basement_block(ctx: &Context) -> bool {
    (helper__is_adult!(ctx) || ctx.has(&Item::Deku_Basement_Block))
}
fn access_has_fire_source_with_torch_or_can_usebow(ctx: &Context) -> bool {
    (helper__has_fire_source_with_torch!(ctx) || helper__can_use!(ctx, Item::Bow))
}
fn access_deku_back_room_web_and_can_blast_or_smash(ctx: &Context) -> bool {
    (ctx.has(&Item::Deku_Back_Room_Web) && helper__can_blast_or_smash!(ctx))
}
fn access_deku_back_room_web_and_deku_back_room_wall(ctx: &Context) -> bool {
    (ctx.has(&Item::Deku_Back_Room_Web) && ctx.has(&Item::Deku_Back_Room_Wall))
}
fn access_is_child(ctx: &Context) -> bool {
    helper__is_child!(ctx)
}
fn access_can_useboomerang_or_can_usehookshot(ctx: &Context) -> bool {
    (helper__can_use!(ctx, Item::Boomerang) || helper__can_use!(ctx, Item::Hookshot))
}
fn access_has_fire_source(ctx: &Context) -> bool {
    helper__has_fire_source!(ctx)
}
fn access_deku_basement_web(ctx: &Context) -> bool {
    ctx.has(&Item::Deku_Basement_Web)
}
fn access_deku_basement_scrubs(ctx: &Context) -> bool {
    ctx.has(&Item::Deku_Basement_Scrubs)
}
fn access_nuts_or_can_useslingshot_and_can_jumpslash(ctx: &Context) -> bool {
    ((helper__Nuts!(ctx) || helper__can_use!(ctx, Item::Slingshot)) && helper__can_jumpslash!(ctx))
}
fn access_nuts_and_has_shield_and_if_is_child__sticks__else__biggoron_sword_(
    ctx: &Context,
) -> bool {
    ((helper__Nuts!(ctx) && helper__has_shield!(ctx))
        && if helper__is_child!(ctx) {
            helper__Sticks!(ctx)
        } else {
            ctx.has(&Item::Biggoron_Sword)
        })
}
fn access_defeat_gohma(ctx: &Context) -> bool {
    ctx.has(&Item::Defeat_Gohma)
}
fn access_is_child_and_kokiri_sword_and_deku_shield(ctx: &Context) -> bool {
    ((helper__is_child!(ctx) && ctx.has(&Item::Kokiri_Sword)) && helper__Deku_Shield!(ctx))
}
fn access_is_adult_or_showed_mido(ctx: &Context) -> bool {
    (helper__is_adult!(ctx) || ctx.has(&Item::Showed_Mido))
}
fn access_is_adult(ctx: &Context) -> bool {
    helper__is_adult!(ctx)
}
fn access_gold_skulltula_token10(ctx: &Context) -> bool {
    ctx.count(&Item::Gold_Skulltula_Token) >= 10
}
#[derive(Copy, Clone)]
struct Exit {
    id: ExitId,
    time: i8,
    dest: SpotId,
    price: Currency,

    loc_id: LocationId,
    item: Item,
    canonical: CanonId,
    item_time: i8,

    access_rule: fn(&Context) -> bool,
}

impl world::Accessible for Exit {
    type Context = Context;
    fn can_access(&self, ctx: &Context) -> bool {
        ctx.can_afford(&self.price) && (self.access_rule)(ctx)
    }
}

impl world::Exit for Exit {
    type ExitId = ExitId;
    type SpotId = SpotId;

    fn id(&self) -> &ExitId {
        &self.id
    }
    fn dest(&self) -> &SpotId {
        &self.dest
    }
    fn connect(&mut self, dest: &SpotId) {
        self.dest = *dest;
    }
}

impl world::Location for Exit {
    type LocId = LocationId;
    type CanonId = CanonId;

    fn id(&self) -> &LocationId {
        &self.loc_id
    }
    fn item(&self) -> &Item {
        &self.item
    }

    fn canon_id(&self) -> &CanonId {
        &self.canonical
    }
}

#[derive(Copy, Clone)]
struct Action {
    id: ActionId,
    access_rule: fn(&Context) -> bool,
    activate: fn(&mut Context),
    time: i8,
}

impl world::Accessible for Action {
    type Context = Context;
    fn can_access(&self, ctx: &Context) -> bool {
        (self.access_rule)(ctx)
    }
}
impl world::Action for Action {
    type ActionId = ActionId;
    fn id(&self) -> &ActionId {
        &self.id
    }
}

#[derive(Copy, Clone)]
struct Spot<'a> {
    id: SpotId,
    // we can hold slices here to the real things held in World
    locations: &'a [Location],
    exits: &'a [Exit],
    actions: &'a [Action],
}

impl<'a> world::Spot for Spot<'a> {
    type SpotId = SpotId;
    type Location = Location;
    type Exit = Exit;
    type Action = Action;

    fn id(&self) -> &SpotId {
        &self.id
    }
    fn locations(&self) -> &'a [Location] {
        &self.locations
    }
    fn exits(&self) -> &'a [Exit] {
        &self.exits
    }
    fn actions(&self) -> &'a [Action] {
        &self.actions
    }
}

#[derive(Clone)]
struct World<'a> {
    // These are arrays that group the items together by their parent.
    // Using EnumMap for this ONLY WORKS if the keys are properly ordered to group
    // nearby things together.
    // For entrance rando, we would need to have a layer of indirection:
    // list_index: EnumMap<EnumType, usize>,
    // list: EnumArray<ObjType>,
    locations: EnumMap<LocationId, Location>,
    exits: EnumMap<ExitId, Exit>,
    actions: EnumMap<ActionId, Action>,
    spots: EnumMap<SpotId, Spot<'a>>,
}

impl<'a> world::World for World<'a> {
    type Location = Location;
    type Exit = Exit;
    type Action = Action;
    type Spot = Spot<'a>;

    fn get_location(&self, loc_id: &LocationId) -> &Location {
        &self.locations[*loc_id]
    }
    fn get_exit(&self, ex_id: &ExitId) -> &Exit {
        &self.exits[*ex_id]
    }
    fn get_action(&self, act_id: &ActionId) -> &Action {
        &self.actions[*act_id]
    }
    fn get_spot(&self, sp_id: &SpotId) -> &Spot<'a> {
        &self.spots[*sp_id]
    }
}

pub fn build_locations() -> EnumMap<LocationId, Location> {
    enum_map! {
        LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => Location {
            id: LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks,
            access_rule: access_is_adult_or_kokiri_sword_or_boomerang,
            canonical: CanonId::None,
            item: Item::Deku_Stick_Drop,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Lobby__Center__Deku_Baby_Nuts => Location {
            id: LocationId::Deku_Tree__Lobby__Center__Deku_Baby_Nuts,
            access_rule: access_is_adult_or_slingshot_or_sticks_or_kokiri_sword,
            canonical: CanonId::None,
            item: Item::Deku_Nut_Drop,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Lobby__Center__Web => Location {
            id: LocationId::Deku_Tree__Lobby__Center__Web,
            access_rule: access_false,
            canonical: CanonId::Deku_Lobby_Web,
            item: Item::Deku_Lobby_Web,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => Location {
            id: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Map_Deku_Tree,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => Location {
            id: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub,
            access_rule: access_has_shield,
            canonical: CanonId::None,
            item: Item::Deku_Slingshot_Scrub,
            price: Currency::Free,
            time: 2,
        },
        LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => Location {
            id: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Slingshot,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => Location {
            id: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Recovery_Heart,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Floor_3__Door__Break_Web => Location {
            id: LocationId::Deku_Tree__Floor_3__Door__Break_Web,
            access_rule: access_is_adult_or_can_child_attack_or_nuts,
            canonical: CanonId::Deku_Lobby_Web,
            item: Item::Deku_Lobby_Web,
            price: Currency::Free,
            time: 0,
        },
        LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => Location {
            id: LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web,
            access_rule: access_is_child_and_sticks_and_nuts,
            canonical: CanonId::Deku_Lobby_Web,
            item: Item::Deku_Lobby_Web,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Compass_Room__Compass__Chest => Location {
            id: LocationId::Deku_Tree__Compass_Room__Compass__Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Compass_Deku_Tree,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Compass_Room__Ledge__Chest => Location {
            id: LocationId::Deku_Tree__Compass_Room__Ledge__Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Recovery_Heart,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Compass_Room__Ledge__GS => Location {
            id: LocationId::Deku_Tree__Compass_Room__Ledge__GS,
            access_rule: access_is_adult_or_can_child_attack,
            canonical: CanonId::None,
            item: Item::Gold_Skulltula_Token,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Basement_1__Center__Vines_GS => Location {
            id: LocationId::Deku_Tree__Basement_1__Center__Vines_GS,
            access_rule: access_is_adult_or_sticks_or_kokiri_sword,
            canonical: CanonId::None,
            item: Item::Gold_Skulltula_Token,
            price: Currency::Free,
            time: 2,
        },
        LocationId::Deku_Tree__Basement_1__Corner__Switch => Location {
            id: LocationId::Deku_Tree__Basement_1__Corner__Switch,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Deku_Basement_Switch,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Basement_1__Corner__Chest => Location {
            id: LocationId::Deku_Tree__Basement_1__Corner__Chest,
            access_rule: access_deku_basement_switch,
            canonical: CanonId::None,
            item: Item::Recovery_Heart,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => Location {
            id: LocationId::Deku_Tree__Basement_1__Corner__Gate_GS,
            access_rule: access_is_adult_or_can_child_attack,
            canonical: CanonId::None,
            item: Item::Gold_Skulltula_Token,
            price: Currency::Free,
            time: 2,
        },
        LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => Location {
            id: LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
            access_rule: access_deku_basement_block_and_is_child_and_sticks,
            canonical: CanonId::Deku_Basement_Web,
            item: Item::Deku_Basement_Web,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => Location {
            id: LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web,
            access_rule: access_has_fire_source_with_torch_or_can_usebow,
            canonical: CanonId::None,
            item: Item::Deku_Back_Room_Web,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => Location {
            id: LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall,
            access_rule: access_deku_back_room_web_and_can_blast_or_smash,
            canonical: CanonId::None,
            item: Item::Deku_Back_Room_Wall,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Skull_Room__Entry__GS => Location {
            id: LocationId::Deku_Tree__Skull_Room__Entry__GS,
            access_rule: access_can_useboomerang_or_can_usehookshot,
            canonical: CanonId::None,
            item: Item::Gold_Skulltula_Token,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => Location {
            id: LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Deku_Basement_Block,
            price: Currency::Free,
            time: 4,
        },
        LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => Location {
            id: LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web,
            access_rule: access_has_fire_source,
            canonical: CanonId::Deku_Basement_Web,
            item: Item::Deku_Basement_Web,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => Location {
            id: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs,
            access_rule: access_has_shield,
            canonical: CanonId::None,
            item: Item::Deku_Basement_Scrubs,
            price: Currency::Free,
            time: 4,
        },
        LocationId::Deku_Tree__Boss_Room__Arena__Gohma => Location {
            id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma,
            access_rule: access_nuts_or_can_useslingshot_and_can_jumpslash,
            canonical: CanonId::Defeat_Gohma,
            item: Item::Defeat_Gohma,
            price: Currency::Free,
            time: 10,
        },
        LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => Location {
            id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill,
            access_rule: access_nuts_and_has_shield_and_if_is_child__sticks__else__biggoron_sword_,
            canonical: CanonId::Defeat_Gohma,
            item: Item::Defeat_Gohma,
            price: Currency::Free,
            time: 4,
        },
        LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => Location {
            id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart,
            access_rule: access_defeat_gohma,
            canonical: CanonId::None,
            item: Item::Heart_Container,
            price: Currency::Free,
            time: 1,
        },
        LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => Location {
            id: LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp,
            access_rule: access_defeat_gohma,
            canonical: CanonId::None,
            item: Item::Kokiri_Emerald,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => Location {
            id: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido,
            access_rule: access_is_child_and_kokiri_sword_and_deku_shield,
            canonical: CanonId::None,
            item: Item::Showed_Mido,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Boulder_Maze__Reward__Chest => Location {
            id: LocationId::KF__Boulder_Maze__Reward__Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Kokiri_Sword,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => Location {
            id: LocationId::KF__Baba_Corridor__Deku_Babas__Sticks,
            access_rule: access_is_adult_or_kokiri_sword_or_boomerang,
            canonical: CanonId::None,
            item: Item::Deku_Stick_Drop,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => Location {
            id: LocationId::KF__Baba_Corridor__Deku_Babas__Nuts,
            access_rule: access_is_adult,
            canonical: CanonId::None,
            item: Item::Deku_Nut_Drop,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => Location {
            id: LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::None,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => Location {
            id: LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::None,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Midos_House__Entry__Top_Left_Chest => Location {
            id: LocationId::KF__Midos_House__Entry__Top_Left_Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Rupees_5,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Midos_House__Entry__Top_Right_Chest => Location {
            id: LocationId::KF__Midos_House__Entry__Top_Right_Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Rupees_50,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Midos_House__Entry__Bottom_Left_Chest => Location {
            id: LocationId::KF__Midos_House__Entry__Bottom_Left_Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Rupee_1,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Midos_House__Entry__Bottom_Right_Chest => Location {
            id: LocationId::KF__Midos_House__Entry__Bottom_Right_Chest,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Recovery_Heart,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Shop__Entry__Blue_Rupee => Location {
            id: LocationId::KF__Shop__Entry__Blue_Rupee,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Rupees_5,
            price: Currency::Free,
            time: 1,
        },
        LocationId::KF__Shop__Entry__Item_1 => Location {
            id: LocationId::KF__Shop__Entry__Item_1,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Shield,
            price: Currency::Rupees(40),
            time: 1,
        },
        LocationId::KF__Shop__Entry__Item_2 => Location {
            id: LocationId::KF__Shop__Entry__Item_2,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Nut_5,
            price: Currency::Rupees(15),
            time: 1,
        },
        LocationId::KF__Shop__Entry__Item_3 => Location {
            id: LocationId::KF__Shop__Entry__Item_3,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Nut_10,
            price: Currency::Rupees(30),
            time: 1,
        },
        LocationId::KF__Shop__Entry__Item_4 => Location {
            id: LocationId::KF__Shop__Entry__Item_4,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Stick_1,
            price: Currency::Rupees(10),
            time: 1,
        },
        LocationId::KF__Shop__Entry__Item_5 => Location {
            id: LocationId::KF__Shop__Entry__Item_5,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Buy_Deku_Seeds_30,
            price: Currency::Rupees(30),
            time: 1,
        },
        LocationId::KF__Shop__Entry__Item_6 => Location {
            id: LocationId::KF__Shop__Entry__Item_6,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Buy_Arrows_10,
            price: Currency::Rupees(20),
            time: 1,
        },
        LocationId::KF__Shop__Entry__Item_7 => Location {
            id: LocationId::KF__Shop__Entry__Item_7,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Buy_Arrows_30,
            price: Currency::Rupees(60),
            time: 1,
        },
        LocationId::KF__Shop__Entry__Item_8 => Location {
            id: LocationId::KF__Shop__Entry__Item_8,
            access_rule: default_access,
            canonical: CanonId::None,
            item: Item::Buy_Heart,
            price: Currency::Rupees(10),
            time: 1,
        },
        LocationId::Kak__Spider_House__Entry__Skulls_10 => Location {
            id: LocationId::Kak__Spider_House__Entry__Skulls_10,
            access_rule: access_gold_skulltula_token10,
            canonical: CanonId::None,
            item: Item::Arrows_10,
            price: Currency::Free,
            time: 1,
        },
    }
}
