//! AUTOGENERATED FOR sample - MODIFICATIONS WILL BE LOST

#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(unused)]

use std::fmt;

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum RegionId {
    Deku_Tree,
    KF,
    Kak,
}
impl fmt::Display for RegionId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            RegionId::Deku_Tree => write!(f, "{}", "Deku Tree"),
            RegionId::KF => write!(f, "{}", "Kokiri Forest"),
            RegionId::Kak => write!(f, "{}", "Kakariko Village"),
        }
    }
}
impl analyzer::world::Id for RegionId {}
impl std::str::FromStr for RegionId {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Deku Tree" => Ok(RegionId::Deku_Tree),
            "Kokiri Forest" => Ok(RegionId::KF),
            "Kakariko Village" => Ok(RegionId::Kak),
            _ => Err(format!("Could not recognize as a RegionId: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum AreaId {
    Deku_Tree__Back_Room,
    Deku_Tree__Basement_1,
    Deku_Tree__Basement_2,
    Deku_Tree__Basement_Ledge,
    Deku_Tree__Boss_Room,
    Deku_Tree__Compass_Room,
    Deku_Tree__Floor_2,
    Deku_Tree__Floor_3,
    Deku_Tree__Lobby,
    Deku_Tree__Scrub_Room,
    Deku_Tree__Skull_Room,
    Deku_Tree__Slingshot_Room,
    Deku_Tree__Slingshot_Upper,
    KF__Baba_Corridor,
    KF__Boulder_Maze,
    KF__Know_it_all_House,
    KF__Kokiri_Village,
    KF__Links_House,
    KF__Midos_House,
    KF__Outside_Deku_Tree,
    KF__Shop,
    Kak__Spider_House,
}
impl fmt::Display for AreaId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            AreaId::Deku_Tree__Back_Room => write!(f, "{}", "Deku Tree > Back Room"),
            AreaId::Deku_Tree__Basement_1 => write!(f, "{}", "Deku Tree > Basement 1"),
            AreaId::Deku_Tree__Basement_2 => write!(f, "{}", "Deku Tree > Basement 2"),
            AreaId::Deku_Tree__Basement_Ledge => write!(f, "{}", "Deku Tree > Basement Ledge"),
            AreaId::Deku_Tree__Boss_Room => write!(f, "{}", "Deku Tree > Boss Room"),
            AreaId::Deku_Tree__Compass_Room => write!(f, "{}", "Deku Tree > Compass Room"),
            AreaId::Deku_Tree__Floor_2 => write!(f, "{}", "Deku Tree > Floor 2"),
            AreaId::Deku_Tree__Floor_3 => write!(f, "{}", "Deku Tree > Floor 3"),
            AreaId::Deku_Tree__Lobby => write!(f, "{}", "Deku Tree > Lobby"),
            AreaId::Deku_Tree__Scrub_Room => write!(f, "{}", "Deku Tree > Scrub Room"),
            AreaId::Deku_Tree__Skull_Room => write!(f, "{}", "Deku Tree > Skull Room"),
            AreaId::Deku_Tree__Slingshot_Room => write!(f, "{}", "Deku Tree > Slingshot Room"),
            AreaId::Deku_Tree__Slingshot_Upper => write!(f, "{}", "Deku Tree > Slingshot Upper"),
            AreaId::KF__Baba_Corridor => write!(f, "{}", "KF > Baba Corridor"),
            AreaId::KF__Boulder_Maze => write!(f, "{}", "KF > Boulder Maze"),
            AreaId::KF__Know_it_all_House => write!(f, "{}", "KF > Know-it-all House"),
            AreaId::KF__Kokiri_Village => write!(f, "{}", "KF > Kokiri Village"),
            AreaId::KF__Links_House => write!(f, "{}", "KF > Link's House"),
            AreaId::KF__Midos_House => write!(f, "{}", "KF > Mido's House"),
            AreaId::KF__Outside_Deku_Tree => write!(f, "{}", "KF > Outside Deku Tree"),
            AreaId::KF__Shop => write!(f, "{}", "KF > Shop"),
            AreaId::Kak__Spider_House => write!(f, "{}", "Kak > Spider House"),
        }
    }
}
impl analyzer::world::Id for AreaId {}
impl std::str::FromStr for AreaId {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Deku Tree > Back Room" => Ok(AreaId::Deku_Tree__Back_Room),
            "Deku Tree > Basement 1" => Ok(AreaId::Deku_Tree__Basement_1),
            "Deku Tree > Basement 2" => Ok(AreaId::Deku_Tree__Basement_2),
            "Deku Tree > Basement Ledge" => Ok(AreaId::Deku_Tree__Basement_Ledge),
            "Deku Tree > Boss Room" => Ok(AreaId::Deku_Tree__Boss_Room),
            "Deku Tree > Compass Room" => Ok(AreaId::Deku_Tree__Compass_Room),
            "Deku Tree > Floor 2" => Ok(AreaId::Deku_Tree__Floor_2),
            "Deku Tree > Floor 3" => Ok(AreaId::Deku_Tree__Floor_3),
            "Deku Tree > Lobby" => Ok(AreaId::Deku_Tree__Lobby),
            "Deku Tree > Scrub Room" => Ok(AreaId::Deku_Tree__Scrub_Room),
            "Deku Tree > Skull Room" => Ok(AreaId::Deku_Tree__Skull_Room),
            "Deku Tree > Slingshot Room" => Ok(AreaId::Deku_Tree__Slingshot_Room),
            "Deku Tree > Slingshot Upper" => Ok(AreaId::Deku_Tree__Slingshot_Upper),
            "KF > Baba Corridor" => Ok(AreaId::KF__Baba_Corridor),
            "KF > Boulder Maze" => Ok(AreaId::KF__Boulder_Maze),
            "KF > Know-it-all House" => Ok(AreaId::KF__Know_it_all_House),
            "KF > Kokiri Village" => Ok(AreaId::KF__Kokiri_Village),
            "KF > Link's House" => Ok(AreaId::KF__Links_House),
            "KF > Mido's House" => Ok(AreaId::KF__Midos_House),
            "KF > Outside Deku Tree" => Ok(AreaId::KF__Outside_Deku_Tree),
            "KF > Shop" => Ok(AreaId::KF__Shop),
            "Kak > Spider House" => Ok(AreaId::Kak__Spider_House),
            _ => Err(format!("Could not recognize as a AreaId: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, Default, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum SpotId {
    #[default]
    None,
    Deku_Tree__Back_Room__East,
    Deku_Tree__Back_Room__Northwest,
    Deku_Tree__Back_Room__South,
    Deku_Tree__Basement_1__Center,
    Deku_Tree__Basement_1__Corner,
    Deku_Tree__Basement_1__South_Door,
    Deku_Tree__Basement_2__Boss_Door,
    Deku_Tree__Basement_2__Pool,
    Deku_Tree__Basement_Ledge__Block,
    Deku_Tree__Basement_Ledge__Web,
    Deku_Tree__Boss_Room__Arena,
    Deku_Tree__Boss_Room__Entry,
    Deku_Tree__Compass_Room__Compass,
    Deku_Tree__Compass_Room__Entry,
    Deku_Tree__Compass_Room__Ledge,
    Deku_Tree__Floor_2__Lower,
    Deku_Tree__Floor_2__Slingshot_Door,
    Deku_Tree__Floor_2__Vines,
    Deku_Tree__Floor_3__Climb,
    Deku_Tree__Floor_3__Door,
    Deku_Tree__Lobby__Center,
    Deku_Tree__Lobby__Entry,
    Deku_Tree__Lobby__Vines,
    Deku_Tree__Scrub_Room__Entry,
    Deku_Tree__Scrub_Room__Rear,
    Deku_Tree__Skull_Room__Entry,
    Deku_Tree__Slingshot_Room__Entry,
    Deku_Tree__Slingshot_Room__Slingshot,
    Deku_Tree__Slingshot_Upper__Ledge,
    KF__Baba_Corridor__Deku_Babas,
    KF__Baba_Corridor__Tree_Side,
    KF__Baba_Corridor__Village_Side,
    KF__Boulder_Maze__Entry,
    KF__Boulder_Maze__Reward,
    KF__Know_it_all_House__Entry,
    KF__Kokiri_Village__Know_it_all_Porch,
    KF__Kokiri_Village__Links_Porch,
    KF__Kokiri_Village__Midos_Guardpost,
    KF__Kokiri_Village__Midos_Porch,
    KF__Kokiri_Village__Sarias_Porch,
    KF__Kokiri_Village__Shop_Porch,
    KF__Kokiri_Village__Training_Center,
    KF__Links_House__Entry,
    KF__Links_House__Start_Point,
    KF__Midos_House__Entry,
    KF__Outside_Deku_Tree__Entry,
    KF__Outside_Deku_Tree__Left,
    KF__Outside_Deku_Tree__Mouth,
    KF__Outside_Deku_Tree__Right,
    KF__Shop__Entry,
    Kak__Spider_House__Entry,
}
impl fmt::Display for SpotId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            SpotId::None => write!(f, "{}", "None"),
            SpotId::Deku_Tree__Back_Room__East => write!(f, "{}", "Deku Tree > Back Room > East"),
            SpotId::Deku_Tree__Back_Room__Northwest => write!(f, "{}", "Deku Tree > Back Room > Northwest"),
            SpotId::Deku_Tree__Back_Room__South => write!(f, "{}", "Deku Tree > Back Room > South"),
            SpotId::Deku_Tree__Basement_1__Center => write!(f, "{}", "Deku Tree > Basement 1 > Center"),
            SpotId::Deku_Tree__Basement_1__Corner => write!(f, "{}", "Deku Tree > Basement 1 > Corner"),
            SpotId::Deku_Tree__Basement_1__South_Door => write!(f, "{}", "Deku Tree > Basement 1 > South Door"),
            SpotId::Deku_Tree__Basement_2__Boss_Door => write!(f, "{}", "Deku Tree > Basement 2 > Boss Door"),
            SpotId::Deku_Tree__Basement_2__Pool => write!(f, "{}", "Deku Tree > Basement 2 > Pool"),
            SpotId::Deku_Tree__Basement_Ledge__Block => write!(f, "{}", "Deku Tree > Basement Ledge > Block"),
            SpotId::Deku_Tree__Basement_Ledge__Web => write!(f, "{}", "Deku Tree > Basement Ledge > Web"),
            SpotId::Deku_Tree__Boss_Room__Arena => write!(f, "{}", "Deku Tree > Boss Room > Arena"),
            SpotId::Deku_Tree__Boss_Room__Entry => write!(f, "{}", "Deku Tree > Boss Room > Entry"),
            SpotId::Deku_Tree__Compass_Room__Compass => write!(f, "{}", "Deku Tree > Compass Room > Compass"),
            SpotId::Deku_Tree__Compass_Room__Entry => write!(f, "{}", "Deku Tree > Compass Room > Entry"),
            SpotId::Deku_Tree__Compass_Room__Ledge => write!(f, "{}", "Deku Tree > Compass Room > Ledge"),
            SpotId::Deku_Tree__Floor_2__Lower => write!(f, "{}", "Deku Tree > Floor 2 > Lower"),
            SpotId::Deku_Tree__Floor_2__Slingshot_Door => write!(f, "{}", "Deku Tree > Floor 2 > Slingshot Door"),
            SpotId::Deku_Tree__Floor_2__Vines => write!(f, "{}", "Deku Tree > Floor 2 > Vines"),
            SpotId::Deku_Tree__Floor_3__Climb => write!(f, "{}", "Deku Tree > Floor 3 > Climb"),
            SpotId::Deku_Tree__Floor_3__Door => write!(f, "{}", "Deku Tree > Floor 3 > Door"),
            SpotId::Deku_Tree__Lobby__Center => write!(f, "{}", "Deku Tree > Lobby > Center"),
            SpotId::Deku_Tree__Lobby__Entry => write!(f, "{}", "Deku Tree > Lobby > Entry"),
            SpotId::Deku_Tree__Lobby__Vines => write!(f, "{}", "Deku Tree > Lobby > Vines"),
            SpotId::Deku_Tree__Scrub_Room__Entry => write!(f, "{}", "Deku Tree > Scrub Room > Entry"),
            SpotId::Deku_Tree__Scrub_Room__Rear => write!(f, "{}", "Deku Tree > Scrub Room > Rear"),
            SpotId::Deku_Tree__Skull_Room__Entry => write!(f, "{}", "Deku Tree > Skull Room > Entry"),
            SpotId::Deku_Tree__Slingshot_Room__Entry => write!(f, "{}", "Deku Tree > Slingshot Room > Entry"),
            SpotId::Deku_Tree__Slingshot_Room__Slingshot => write!(f, "{}", "Deku Tree > Slingshot Room > Slingshot"),
            SpotId::Deku_Tree__Slingshot_Upper__Ledge => write!(f, "{}", "Deku Tree > Slingshot Upper > Ledge"),
            SpotId::KF__Baba_Corridor__Deku_Babas => write!(f, "{}", "KF > Baba Corridor > Deku Babas"),
            SpotId::KF__Baba_Corridor__Tree_Side => write!(f, "{}", "KF > Baba Corridor > Tree Side"),
            SpotId::KF__Baba_Corridor__Village_Side => write!(f, "{}", "KF > Baba Corridor > Village Side"),
            SpotId::KF__Boulder_Maze__Entry => write!(f, "{}", "KF > Boulder Maze > Entry"),
            SpotId::KF__Boulder_Maze__Reward => write!(f, "{}", "KF > Boulder Maze > Reward"),
            SpotId::KF__Know_it_all_House__Entry => write!(f, "{}", "KF > Know-it-all House > Entry"),
            SpotId::KF__Kokiri_Village__Know_it_all_Porch => write!(f, "{}", "KF > Kokiri Village > Know-it-all Porch"),
            SpotId::KF__Kokiri_Village__Links_Porch => write!(f, "{}", "KF > Kokiri Village > Link's Porch"),
            SpotId::KF__Kokiri_Village__Midos_Guardpost => write!(f, "{}", "KF > Kokiri Village > Mido's Guardpost"),
            SpotId::KF__Kokiri_Village__Midos_Porch => write!(f, "{}", "KF > Kokiri Village > Mido's Porch"),
            SpotId::KF__Kokiri_Village__Sarias_Porch => write!(f, "{}", "KF > Kokiri Village > Saria's Porch"),
            SpotId::KF__Kokiri_Village__Shop_Porch => write!(f, "{}", "KF > Kokiri Village > Shop Porch"),
            SpotId::KF__Kokiri_Village__Training_Center => write!(f, "{}", "KF > Kokiri Village > Training Center"),
            SpotId::KF__Links_House__Entry => write!(f, "{}", "KF > Link's House > Entry"),
            SpotId::KF__Links_House__Start_Point => write!(f, "{}", "KF > Link's House > Start Point"),
            SpotId::KF__Midos_House__Entry => write!(f, "{}", "KF > Mido's House > Entry"),
            SpotId::KF__Outside_Deku_Tree__Entry => write!(f, "{}", "KF > Outside Deku Tree > Entry"),
            SpotId::KF__Outside_Deku_Tree__Left => write!(f, "{}", "KF > Outside Deku Tree > Left"),
            SpotId::KF__Outside_Deku_Tree__Mouth => write!(f, "{}", "KF > Outside Deku Tree > Mouth"),
            SpotId::KF__Outside_Deku_Tree__Right => write!(f, "{}", "KF > Outside Deku Tree > Right"),
            SpotId::KF__Shop__Entry => write!(f, "{}", "KF > Shop > Entry"),
            SpotId::Kak__Spider_House__Entry => write!(f, "{}", "Kak > Spider House > Entry"),
        }
    }
}
impl analyzer::world::Id for SpotId {}
impl std::str::FromStr for SpotId {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Deku Tree > Back Room > East" => Ok(SpotId::Deku_Tree__Back_Room__East),
            "Deku Tree > Back Room > Northwest" => Ok(SpotId::Deku_Tree__Back_Room__Northwest),
            "Deku Tree > Back Room > South" => Ok(SpotId::Deku_Tree__Back_Room__South),
            "Deku Tree > Basement 1 > Center" => Ok(SpotId::Deku_Tree__Basement_1__Center),
            "Deku Tree > Basement 1 > Corner" => Ok(SpotId::Deku_Tree__Basement_1__Corner),
            "Deku Tree > Basement 1 > South Door" => Ok(SpotId::Deku_Tree__Basement_1__South_Door),
            "Deku Tree > Basement 2 > Boss Door" => Ok(SpotId::Deku_Tree__Basement_2__Boss_Door),
            "Deku Tree > Basement 2 > Pool" => Ok(SpotId::Deku_Tree__Basement_2__Pool),
            "Deku Tree > Basement Ledge > Block" => Ok(SpotId::Deku_Tree__Basement_Ledge__Block),
            "Deku Tree > Basement Ledge > Web" => Ok(SpotId::Deku_Tree__Basement_Ledge__Web),
            "Deku Tree > Boss Room > Arena" => Ok(SpotId::Deku_Tree__Boss_Room__Arena),
            "Deku Tree > Boss Room > Entry" => Ok(SpotId::Deku_Tree__Boss_Room__Entry),
            "Deku Tree > Compass Room > Compass" => Ok(SpotId::Deku_Tree__Compass_Room__Compass),
            "Deku Tree > Compass Room > Entry" => Ok(SpotId::Deku_Tree__Compass_Room__Entry),
            "Deku Tree > Compass Room > Ledge" => Ok(SpotId::Deku_Tree__Compass_Room__Ledge),
            "Deku Tree > Floor 2 > Lower" => Ok(SpotId::Deku_Tree__Floor_2__Lower),
            "Deku Tree > Floor 2 > Slingshot Door" => Ok(SpotId::Deku_Tree__Floor_2__Slingshot_Door),
            "Deku Tree > Floor 2 > Vines" => Ok(SpotId::Deku_Tree__Floor_2__Vines),
            "Deku Tree > Floor 3 > Climb" => Ok(SpotId::Deku_Tree__Floor_3__Climb),
            "Deku Tree > Floor 3 > Door" => Ok(SpotId::Deku_Tree__Floor_3__Door),
            "Deku Tree > Lobby > Center" => Ok(SpotId::Deku_Tree__Lobby__Center),
            "Deku Tree > Lobby > Entry" => Ok(SpotId::Deku_Tree__Lobby__Entry),
            "Deku Tree > Lobby > Vines" => Ok(SpotId::Deku_Tree__Lobby__Vines),
            "Deku Tree > Scrub Room > Entry" => Ok(SpotId::Deku_Tree__Scrub_Room__Entry),
            "Deku Tree > Scrub Room > Rear" => Ok(SpotId::Deku_Tree__Scrub_Room__Rear),
            "Deku Tree > Skull Room > Entry" => Ok(SpotId::Deku_Tree__Skull_Room__Entry),
            "Deku Tree > Slingshot Room > Entry" => Ok(SpotId::Deku_Tree__Slingshot_Room__Entry),
            "Deku Tree > Slingshot Room > Slingshot" => Ok(SpotId::Deku_Tree__Slingshot_Room__Slingshot),
            "Deku Tree > Slingshot Upper > Ledge" => Ok(SpotId::Deku_Tree__Slingshot_Upper__Ledge),
            "KF > Baba Corridor > Deku Babas" => Ok(SpotId::KF__Baba_Corridor__Deku_Babas),
            "KF > Baba Corridor > Tree Side" => Ok(SpotId::KF__Baba_Corridor__Tree_Side),
            "KF > Baba Corridor > Village Side" => Ok(SpotId::KF__Baba_Corridor__Village_Side),
            "KF > Boulder Maze > Entry" => Ok(SpotId::KF__Boulder_Maze__Entry),
            "KF > Boulder Maze > Reward" => Ok(SpotId::KF__Boulder_Maze__Reward),
            "KF > Know-it-all House > Entry" => Ok(SpotId::KF__Know_it_all_House__Entry),
            "KF > Kokiri Village > Know-it-all Porch" => Ok(SpotId::KF__Kokiri_Village__Know_it_all_Porch),
            "KF > Kokiri Village > Link's Porch" => Ok(SpotId::KF__Kokiri_Village__Links_Porch),
            "KF > Kokiri Village > Mido's Guardpost" => Ok(SpotId::KF__Kokiri_Village__Midos_Guardpost),
            "KF > Kokiri Village > Mido's Porch" => Ok(SpotId::KF__Kokiri_Village__Midos_Porch),
            "KF > Kokiri Village > Saria's Porch" => Ok(SpotId::KF__Kokiri_Village__Sarias_Porch),
            "KF > Kokiri Village > Shop Porch" => Ok(SpotId::KF__Kokiri_Village__Shop_Porch),
            "KF > Kokiri Village > Training Center" => Ok(SpotId::KF__Kokiri_Village__Training_Center),
            "KF > Link's House > Entry" => Ok(SpotId::KF__Links_House__Entry),
            "KF > Link's House > Start Point" => Ok(SpotId::KF__Links_House__Start_Point),
            "KF > Mido's House > Entry" => Ok(SpotId::KF__Midos_House__Entry),
            "KF > Outside Deku Tree > Entry" => Ok(SpotId::KF__Outside_Deku_Tree__Entry),
            "KF > Outside Deku Tree > Left" => Ok(SpotId::KF__Outside_Deku_Tree__Left),
            "KF > Outside Deku Tree > Mouth" => Ok(SpotId::KF__Outside_Deku_Tree__Mouth),
            "KF > Outside Deku Tree > Right" => Ok(SpotId::KF__Outside_Deku_Tree__Right),
            "KF > Shop > Entry" => Ok(SpotId::KF__Shop__Entry),
            "Kak > Spider House > Entry" => Ok(SpotId::Kak__Spider_House__Entry),
            _ => Err(format!("Could not recognize as a SpotId: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum LocationId {
    Deku_Tree__Back_Room__Northwest__Break_Wall,
    Deku_Tree__Back_Room__Northwest__Burn_Web,
    Deku_Tree__Basement_1__Center__Vines_GS,
    Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
    Deku_Tree__Basement_1__Corner__Chest,
    Deku_Tree__Basement_1__Corner__Gate_GS,
    Deku_Tree__Basement_1__Corner__Switch,
    Deku_Tree__Basement_2__Boss_Door__Scrubs,
    Deku_Tree__Basement_Ledge__Block__Push_Block,
    Deku_Tree__Basement_Ledge__Web__Burn_Web,
    Deku_Tree__Boss_Room__Arena__Blue_Warp,
    Deku_Tree__Boss_Room__Arena__Gohma,
    Deku_Tree__Boss_Room__Arena__Gohma_Heart,
    Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill,
    Deku_Tree__Compass_Room__Compass__Chest,
    Deku_Tree__Compass_Room__Entry__Burn_Web,
    Deku_Tree__Compass_Room__Ledge__Chest,
    Deku_Tree__Compass_Room__Ledge__GS,
    Deku_Tree__Floor_2__Vines__Map_Chest,
    Deku_Tree__Floor_3__Door__Break_Web,
    Deku_Tree__Lobby__Center__Deku_Baba_Nuts,
    Deku_Tree__Lobby__Center__Deku_Baba_Sticks,
    Deku_Tree__Lobby__Center__Web,
    Deku_Tree__Scrub_Room__Entry__Scrub,
    Deku_Tree__Skull_Room__Entry__GS,
    Deku_Tree__Slingshot_Room__Slingshot__Chest,
    Deku_Tree__Slingshot_Upper__Ledge__Chest,
    KF__Baba_Corridor__Deku_Babas__Nuts,
    KF__Baba_Corridor__Deku_Babas__Sticks,
    KF__Boulder_Maze__Reward__Chest,
    KF__Kokiri_Village__Midos_Guardpost__Show_Mido,
    KF__Kokiri_Village__Training_Center__Victory,
    KF__Midos_House__Entry__Bottom_Left_Chest,
    KF__Midos_House__Entry__Bottom_Right_Chest,
    KF__Midos_House__Entry__Top_Left_Chest,
    KF__Midos_House__Entry__Top_Right_Chest,
    KF__Outside_Deku_Tree__Left__Gossip_Stone,
    KF__Outside_Deku_Tree__Right__Gossip_Stone,
    KF__Shop__Entry__Blue_Rupee,
    KF__Shop__Entry__Item_1,
    KF__Shop__Entry__Item_2,
    KF__Shop__Entry__Item_3,
    KF__Shop__Entry__Item_4,
    KF__Shop__Entry__Item_5,
    KF__Shop__Entry__Item_6,
    KF__Shop__Entry__Item_7,
    KF__Shop__Entry__Item_8,
    Kak__Spider_House__Entry__Skulls_10,
}
impl fmt::Display for LocationId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => write!(f, "{}", "Deku Tree > Back Room > Northwest > Break Wall"),
            LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => write!(f, "{}", "Deku Tree > Back Room > Northwest > Burn Web"),
            LocationId::Deku_Tree__Basement_1__Center__Vines_GS => write!(f, "{}", "Deku Tree > Basement 1 > Center > Vines GS"),
            LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => write!(f, "{}", "Deku Tree > Basement 1 > Corner > Burn Basement Web"),
            LocationId::Deku_Tree__Basement_1__Corner__Chest => write!(f, "{}", "Deku Tree > Basement 1 > Corner > Chest"),
            LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => write!(f, "{}", "Deku Tree > Basement 1 > Corner > Gate GS"),
            LocationId::Deku_Tree__Basement_1__Corner__Switch => write!(f, "{}", "Deku Tree > Basement 1 > Corner > Switch"),
            LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => write!(f, "{}", "Deku Tree > Basement 2 > Boss Door > Scrubs"),
            LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => write!(f, "{}", "Deku Tree > Basement Ledge > Block > Push Block"),
            LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => write!(f, "{}", "Deku Tree > Basement Ledge > Web > Burn Web"),
            LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => write!(f, "{}", "Deku Tree > Boss Room > Arena > Blue Warp"),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma => write!(f, "{}", "Deku Tree > Boss Room > Arena > Gohma"),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => write!(f, "{}", "Deku Tree > Boss Room > Arena > Gohma Heart"),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => write!(f, "{}", "Deku Tree > Boss Room > Arena > Gohma Quick Kill"),
            LocationId::Deku_Tree__Compass_Room__Compass__Chest => write!(f, "{}", "Deku Tree > Compass Room > Compass > Chest"),
            LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => write!(f, "{}", "Deku Tree > Compass Room > Entry > Burn Web"),
            LocationId::Deku_Tree__Compass_Room__Ledge__Chest => write!(f, "{}", "Deku Tree > Compass Room > Ledge > Chest"),
            LocationId::Deku_Tree__Compass_Room__Ledge__GS => write!(f, "{}", "Deku Tree > Compass Room > Ledge > GS"),
            LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => write!(f, "{}", "Deku Tree > Floor 2 > Vines > Map Chest"),
            LocationId::Deku_Tree__Floor_3__Door__Break_Web => write!(f, "{}", "Deku Tree > Floor 3 > Door > Break Web"),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Nuts => write!(f, "{}", "Deku Tree > Lobby > Center > Deku Baba Nuts"),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => write!(f, "{}", "Deku Tree > Lobby > Center > Deku Baba Sticks"),
            LocationId::Deku_Tree__Lobby__Center__Web => write!(f, "{}", "Deku Tree > Lobby > Center > Web"),
            LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => write!(f, "{}", "Deku Tree > Scrub Room > Entry > Scrub"),
            LocationId::Deku_Tree__Skull_Room__Entry__GS => write!(f, "{}", "Deku Tree > Skull Room > Entry > GS"),
            LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => write!(f, "{}", "Deku Tree > Slingshot Room > Slingshot > Chest"),
            LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => write!(f, "{}", "Deku Tree > Slingshot Upper > Ledge > Chest"),
            LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => write!(f, "{}", "KF > Baba Corridor > Deku Babas > Nuts"),
            LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => write!(f, "{}", "KF > Baba Corridor > Deku Babas > Sticks"),
            LocationId::KF__Boulder_Maze__Reward__Chest => write!(f, "{}", "KF > Boulder Maze > Reward > Chest"),
            LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => write!(f, "{}", "KF > Kokiri Village > Mido's Guardpost > Show Mido"),
            LocationId::KF__Kokiri_Village__Training_Center__Victory => write!(f, "{}", "KF > Kokiri Village > Training Center > Victory"),
            LocationId::KF__Midos_House__Entry__Bottom_Left_Chest => write!(f, "{}", "KF > Mido's House > Entry > Bottom Left Chest"),
            LocationId::KF__Midos_House__Entry__Bottom_Right_Chest => write!(f, "{}", "KF > Mido's House > Entry > Bottom Right Chest"),
            LocationId::KF__Midos_House__Entry__Top_Left_Chest => write!(f, "{}", "KF > Mido's House > Entry > Top Left Chest"),
            LocationId::KF__Midos_House__Entry__Top_Right_Chest => write!(f, "{}", "KF > Mido's House > Entry > Top Right Chest"),
            LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => write!(f, "{}", "KF > Outside Deku Tree > Left > Gossip Stone"),
            LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => write!(f, "{}", "KF > Outside Deku Tree > Right > Gossip Stone"),
            LocationId::KF__Shop__Entry__Blue_Rupee => write!(f, "{}", "KF > Shop > Entry > Blue Rupee"),
            LocationId::KF__Shop__Entry__Item_1 => write!(f, "{}", "KF > Shop > Entry > Item 1"),
            LocationId::KF__Shop__Entry__Item_2 => write!(f, "{}", "KF > Shop > Entry > Item 2"),
            LocationId::KF__Shop__Entry__Item_3 => write!(f, "{}", "KF > Shop > Entry > Item 3"),
            LocationId::KF__Shop__Entry__Item_4 => write!(f, "{}", "KF > Shop > Entry > Item 4"),
            LocationId::KF__Shop__Entry__Item_5 => write!(f, "{}", "KF > Shop > Entry > Item 5"),
            LocationId::KF__Shop__Entry__Item_6 => write!(f, "{}", "KF > Shop > Entry > Item 6"),
            LocationId::KF__Shop__Entry__Item_7 => write!(f, "{}", "KF > Shop > Entry > Item 7"),
            LocationId::KF__Shop__Entry__Item_8 => write!(f, "{}", "KF > Shop > Entry > Item 8"),
            LocationId::Kak__Spider_House__Entry__Skulls_10 => write!(f, "{}", "Kak > Spider House > Entry > Skulls 10"),
        }
    }
}
impl analyzer::world::Id for LocationId {}
impl std::str::FromStr for LocationId {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Deku Tree > Back Room > Northwest > Break Wall" => Ok(LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall),
            "Deku Tree > Back Room > Northwest > Burn Web" => Ok(LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web),
            "Deku Tree > Basement 1 > Center > Vines GS" => Ok(LocationId::Deku_Tree__Basement_1__Center__Vines_GS),
            "Deku Tree > Basement 1 > Corner > Burn Basement Web" => Ok(LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web),
            "Deku Tree > Basement 1 > Corner > Chest" => Ok(LocationId::Deku_Tree__Basement_1__Corner__Chest),
            "Deku Tree > Basement 1 > Corner > Gate GS" => Ok(LocationId::Deku_Tree__Basement_1__Corner__Gate_GS),
            "Deku Tree > Basement 1 > Corner > Switch" => Ok(LocationId::Deku_Tree__Basement_1__Corner__Switch),
            "Deku Tree > Basement 2 > Boss Door > Scrubs" => Ok(LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs),
            "Deku Tree > Basement Ledge > Block > Push Block" => Ok(LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block),
            "Deku Tree > Basement Ledge > Web > Burn Web" => Ok(LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web),
            "Deku Tree > Boss Room > Arena > Blue Warp" => Ok(LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp),
            "Deku Tree > Boss Room > Arena > Gohma" => Ok(LocationId::Deku_Tree__Boss_Room__Arena__Gohma),
            "Deku Tree > Boss Room > Arena > Gohma Heart" => Ok(LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart),
            "Deku Tree > Boss Room > Arena > Gohma Quick Kill" => Ok(LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill),
            "Deku Tree > Compass Room > Compass > Chest" => Ok(LocationId::Deku_Tree__Compass_Room__Compass__Chest),
            "Deku Tree > Compass Room > Entry > Burn Web" => Ok(LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web),
            "Deku Tree > Compass Room > Ledge > Chest" => Ok(LocationId::Deku_Tree__Compass_Room__Ledge__Chest),
            "Deku Tree > Compass Room > Ledge > GS" => Ok(LocationId::Deku_Tree__Compass_Room__Ledge__GS),
            "Deku Tree > Floor 2 > Vines > Map Chest" => Ok(LocationId::Deku_Tree__Floor_2__Vines__Map_Chest),
            "Deku Tree > Floor 3 > Door > Break Web" => Ok(LocationId::Deku_Tree__Floor_3__Door__Break_Web),
            "Deku Tree > Lobby > Center > Deku Baba Nuts" => Ok(LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Nuts),
            "Deku Tree > Lobby > Center > Deku Baba Sticks" => Ok(LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks),
            "Deku Tree > Lobby > Center > Web" => Ok(LocationId::Deku_Tree__Lobby__Center__Web),
            "Deku Tree > Scrub Room > Entry > Scrub" => Ok(LocationId::Deku_Tree__Scrub_Room__Entry__Scrub),
            "Deku Tree > Skull Room > Entry > GS" => Ok(LocationId::Deku_Tree__Skull_Room__Entry__GS),
            "Deku Tree > Slingshot Room > Slingshot > Chest" => Ok(LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest),
            "Deku Tree > Slingshot Upper > Ledge > Chest" => Ok(LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest),
            "KF > Baba Corridor > Deku Babas > Nuts" => Ok(LocationId::KF__Baba_Corridor__Deku_Babas__Nuts),
            "KF > Baba Corridor > Deku Babas > Sticks" => Ok(LocationId::KF__Baba_Corridor__Deku_Babas__Sticks),
            "KF > Boulder Maze > Reward > Chest" => Ok(LocationId::KF__Boulder_Maze__Reward__Chest),
            "KF > Kokiri Village > Mido's Guardpost > Show Mido" => Ok(LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido),
            "KF > Kokiri Village > Training Center > Victory" => Ok(LocationId::KF__Kokiri_Village__Training_Center__Victory),
            "KF > Mido's House > Entry > Bottom Left Chest" => Ok(LocationId::KF__Midos_House__Entry__Bottom_Left_Chest),
            "KF > Mido's House > Entry > Bottom Right Chest" => Ok(LocationId::KF__Midos_House__Entry__Bottom_Right_Chest),
            "KF > Mido's House > Entry > Top Left Chest" => Ok(LocationId::KF__Midos_House__Entry__Top_Left_Chest),
            "KF > Mido's House > Entry > Top Right Chest" => Ok(LocationId::KF__Midos_House__Entry__Top_Right_Chest),
            "KF > Outside Deku Tree > Left > Gossip Stone" => Ok(LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone),
            "KF > Outside Deku Tree > Right > Gossip Stone" => Ok(LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone),
            "KF > Shop > Entry > Blue Rupee" => Ok(LocationId::KF__Shop__Entry__Blue_Rupee),
            "KF > Shop > Entry > Item 1" => Ok(LocationId::KF__Shop__Entry__Item_1),
            "KF > Shop > Entry > Item 2" => Ok(LocationId::KF__Shop__Entry__Item_2),
            "KF > Shop > Entry > Item 3" => Ok(LocationId::KF__Shop__Entry__Item_3),
            "KF > Shop > Entry > Item 4" => Ok(LocationId::KF__Shop__Entry__Item_4),
            "KF > Shop > Entry > Item 5" => Ok(LocationId::KF__Shop__Entry__Item_5),
            "KF > Shop > Entry > Item 6" => Ok(LocationId::KF__Shop__Entry__Item_6),
            "KF > Shop > Entry > Item 7" => Ok(LocationId::KF__Shop__Entry__Item_7),
            "KF > Shop > Entry > Item 8" => Ok(LocationId::KF__Shop__Entry__Item_8),
            "Kak > Spider House > Entry > Skulls 10" => Ok(LocationId::Kak__Spider_House__Entry__Skulls_10),
            _ => Err(format!("Could not recognize as a LocationId: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum ExitId {
    Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1,
    Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1,
    Deku_Tree__Basement_1__Center__ex__Lobby__Center_1,
    Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1,
    Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1,
    Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1,
    Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1,
    Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1,
    Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1,
    Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1,
    Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1,
    Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1,
    Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1,
    Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1,
    Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1,
    Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1,
    Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2,
    Deku_Tree__Floor_2__Vines__ex__Lobby__Center_1,
    Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1,
    Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1,
    Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1,
    Deku_Tree__Floor_3__Door__ex__Lobby__Center_1,
    Deku_Tree__Lobby__Center__ex__Basement_1__Center_1,
    Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1,
    Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1,
    Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1,
    Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1,
    Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1,
    Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1,
    Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1,
    Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1,
    KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1,
    KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1,
    KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1,
    KF__Know_it_all_House__Entry__ex__Kokiri_Village__Know_it_all_Porch_1,
    KF__Kokiri_Village__Know_it_all_Porch__ex__Know_it_all_House__Entry_1,
    KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1,
    KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1,
    KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1,
    KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1,
    KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1,
    KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1,
    KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1,
    KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1,
    KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1,
    KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1,
    KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1,
    Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1,
}
impl fmt::Display for ExitId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1 => write!(f, "{}", "Deku Tree > Back Room > East ==> Basement Ledge > Web (1)"),
            ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1 => write!(f, "{}", "Deku Tree > Back Room > Northwest ==> Skull Room > Entry (1)"),
            ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1 => write!(f, "{}", "Deku Tree > Basement 1 > Center ==> Lobby > Center (1)"),
            ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1 => write!(f, "{}", "Deku Tree > Basement 1 > Corner ==> Basement Ledge > Block (1)"),
            ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1 => write!(f, "{}", "Deku Tree > Basement 1 > South Door ==> Back Room > South (1)"),
            ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1 => write!(f, "{}", "Deku Tree > Basement 2 > Boss Door ==> Boss Room > Entry (1)"),
            ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1 => write!(f, "{}", "Deku Tree > Basement 2 > Pool ==> Basement Ledge > Web (1)"),
            ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1 => write!(f, "{}", "Deku Tree > Basement Ledge > Block ==> Basement 1 > Corner (1)"),
            ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1 => write!(f, "{}", "Deku Tree > Basement Ledge > Web ==> Basement 2 > Pool (1)"),
            ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1 => write!(f, "{}", "Deku Tree > Compass Room > Entry ==> Floor 3 > Door (1)"),
            ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1 => write!(f, "{}", "Deku Tree > Floor 2 > Lower ==> Lobby > Center (1)"),
            ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1 => write!(f, "{}", "Deku Tree > Floor 2 > Lower ==> Lobby > Vines (1)"),
            ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1 => write!(f, "{}", "Deku Tree > Floor 2 > Slingshot Door ==> Lobby > Center (1)"),
            ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1 => write!(f, "{}", "Deku Tree > Floor 2 > Slingshot Door ==> Lobby > Entry (1)"),
            ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1 => write!(f, "{}", "Deku Tree > Floor 2 > Slingshot Door ==> Scrub Room > Entry (1)"),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1 => write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Floor 3 > Climb (1)"),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2 => write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Floor 3 > Climb (2)"),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Center_1 => write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Lobby > Center (1)"),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1 => write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Lobby > Entry (1)"),
            ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1 => write!(f, "{}", "Deku Tree > Floor 2 > Vines ==> Lobby > Vines (1)"),
            ExitId::Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1 => write!(f, "{}", "Deku Tree > Floor 3 > Door ==> Compass Room > Entry (1)"),
            ExitId::Deku_Tree__Floor_3__Door__ex__Lobby__Center_1 => write!(f, "{}", "Deku Tree > Floor 3 > Door ==> Lobby > Center (1)"),
            ExitId::Deku_Tree__Lobby__Center__ex__Basement_1__Center_1 => write!(f, "{}", "Deku Tree > Lobby > Center ==> Basement 1 > Center (1)"),
            ExitId::Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1 => write!(f, "{}", "Deku Tree > Lobby > Center ==> Basement Ledge > Block (1)"),
            ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1 => write!(f, "{}", "Deku Tree > Lobby > Vines ==> Floor 2 > Lower (1)"),
            ExitId::Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1 => write!(f, "{}", "Deku Tree > Scrub Room > Entry ==> Floor 2 > Slingshot Door (1)"),
            ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1 => write!(f, "{}", "Deku Tree > Scrub Room > Rear ==> Slingshot Room > Entry (1)"),
            ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1 => write!(f, "{}", "Deku Tree > Skull Room > Entry ==> Back Room > Northwest (1)"),
            ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1 => write!(f, "{}", "Deku Tree > Slingshot Room > Entry ==> Scrub Room > Rear (1)"),
            ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1 => write!(f, "{}", "Deku Tree > Slingshot Room > Slingshot ==> Slingshot Upper > Ledge (1)"),
            ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1 => write!(f, "{}", "Deku Tree > Slingshot Upper > Ledge ==> Slingshot Room > Slingshot (1)"),
            ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1 => write!(f, "{}", "KF > Baba Corridor > Tree Side ==> Outside Deku Tree > Entry (1)"),
            ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1 => write!(f, "{}", "KF > Baba Corridor > Village Side ==> Kokiri Village > Mido's Guardpost (1)"),
            ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1 => write!(f, "{}", "KF > Boulder Maze > Entry ==> Kokiri Village > Training Center (1)"),
            ExitId::KF__Know_it_all_House__Entry__ex__Kokiri_Village__Know_it_all_Porch_1 => write!(f, "{}", "KF > Know-it-all House > Entry ==> Kokiri Village > Know-it-all Porch (1)"),
            ExitId::KF__Kokiri_Village__Know_it_all_Porch__ex__Know_it_all_House__Entry_1 => write!(f, "{}", "KF > Kokiri Village > Know-it-all Porch ==> Know-it-all House > Entry (1)"),
            ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1 => write!(f, "{}", "KF > Kokiri Village > Link's Porch ==> Link's House > Entry (1)"),
            ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1 => write!(f, "{}", "KF > Kokiri Village > Mido's Guardpost ==> Baba Corridor > Village Side (1)"),
            ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1 => write!(f, "{}", "KF > Kokiri Village > Mido's Porch ==> Mido's House > Entry (1)"),
            ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1 => write!(f, "{}", "KF > Kokiri Village > Saria's Porch ==> Kak > Spider House > Entry (1)"),
            ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1 => write!(f, "{}", "KF > Kokiri Village > Shop Porch ==> Shop > Entry (1)"),
            ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1 => write!(f, "{}", "KF > Kokiri Village > Training Center ==> Boulder Maze > Entry (1)"),
            ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1 => write!(f, "{}", "KF > Link's House > Entry ==> Kokiri Village > Link's Porch (1)"),
            ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1 => write!(f, "{}", "KF > Mido's House > Entry ==> Kokiri Village > Mido's Porch (1)"),
            ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1 => write!(f, "{}", "KF > Outside Deku Tree > Entry ==> Baba Corridor > Tree Side (1)"),
            ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1 => write!(f, "{}", "KF > Outside Deku Tree > Mouth ==> Deku Tree > Lobby > Entry (1)"),
            ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1 => write!(f, "{}", "KF > Shop > Entry ==> Kokiri Village > Shop Porch (1)"),
            ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1 => write!(f, "{}", "Kak > Spider House > Entry ==> KF > Kokiri Village > Saria's Porch (1)"),
        }
    }
}
impl analyzer::world::Id for ExitId {}
impl std::str::FromStr for ExitId {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Deku Tree > Back Room > East ==> Basement Ledge > Web (1)" => Ok(ExitId::Deku_Tree__Back_Room__East__ex__Basement_Ledge__Web_1),
            "Deku Tree > Back Room > Northwest ==> Skull Room > Entry (1)" => Ok(ExitId::Deku_Tree__Back_Room__Northwest__ex__Skull_Room__Entry_1),
            "Deku Tree > Basement 1 > Center ==> Lobby > Center (1)" => Ok(ExitId::Deku_Tree__Basement_1__Center__ex__Lobby__Center_1),
            "Deku Tree > Basement 1 > Corner ==> Basement Ledge > Block (1)" => Ok(ExitId::Deku_Tree__Basement_1__Corner__ex__Basement_Ledge__Block_1),
            "Deku Tree > Basement 1 > South Door ==> Back Room > South (1)" => Ok(ExitId::Deku_Tree__Basement_1__South_Door__ex__Back_Room__South_1),
            "Deku Tree > Basement 2 > Boss Door ==> Boss Room > Entry (1)" => Ok(ExitId::Deku_Tree__Basement_2__Boss_Door__ex__Boss_Room__Entry_1),
            "Deku Tree > Basement 2 > Pool ==> Basement Ledge > Web (1)" => Ok(ExitId::Deku_Tree__Basement_2__Pool__ex__Basement_Ledge__Web_1),
            "Deku Tree > Basement Ledge > Block ==> Basement 1 > Corner (1)" => Ok(ExitId::Deku_Tree__Basement_Ledge__Block__ex__Basement_1__Corner_1),
            "Deku Tree > Basement Ledge > Web ==> Basement 2 > Pool (1)" => Ok(ExitId::Deku_Tree__Basement_Ledge__Web__ex__Basement_2__Pool_1),
            "Deku Tree > Compass Room > Entry ==> Floor 3 > Door (1)" => Ok(ExitId::Deku_Tree__Compass_Room__Entry__ex__Floor_3__Door_1),
            "Deku Tree > Floor 2 > Lower ==> Lobby > Center (1)" => Ok(ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Center_1),
            "Deku Tree > Floor 2 > Lower ==> Lobby > Vines (1)" => Ok(ExitId::Deku_Tree__Floor_2__Lower__ex__Lobby__Vines_1),
            "Deku Tree > Floor 2 > Slingshot Door ==> Lobby > Center (1)" => Ok(ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Center_1),
            "Deku Tree > Floor 2 > Slingshot Door ==> Lobby > Entry (1)" => Ok(ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Lobby__Entry_1),
            "Deku Tree > Floor 2 > Slingshot Door ==> Scrub Room > Entry (1)" => Ok(ExitId::Deku_Tree__Floor_2__Slingshot_Door__ex__Scrub_Room__Entry_1),
            "Deku Tree > Floor 2 > Vines ==> Floor 3 > Climb (1)" => Ok(ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_1),
            "Deku Tree > Floor 2 > Vines ==> Floor 3 > Climb (2)" => Ok(ExitId::Deku_Tree__Floor_2__Vines__ex__Floor_3__Climb_2),
            "Deku Tree > Floor 2 > Vines ==> Lobby > Center (1)" => Ok(ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Center_1),
            "Deku Tree > Floor 2 > Vines ==> Lobby > Entry (1)" => Ok(ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Entry_1),
            "Deku Tree > Floor 2 > Vines ==> Lobby > Vines (1)" => Ok(ExitId::Deku_Tree__Floor_2__Vines__ex__Lobby__Vines_1),
            "Deku Tree > Floor 3 > Door ==> Compass Room > Entry (1)" => Ok(ExitId::Deku_Tree__Floor_3__Door__ex__Compass_Room__Entry_1),
            "Deku Tree > Floor 3 > Door ==> Lobby > Center (1)" => Ok(ExitId::Deku_Tree__Floor_3__Door__ex__Lobby__Center_1),
            "Deku Tree > Lobby > Center ==> Basement 1 > Center (1)" => Ok(ExitId::Deku_Tree__Lobby__Center__ex__Basement_1__Center_1),
            "Deku Tree > Lobby > Center ==> Basement Ledge > Block (1)" => Ok(ExitId::Deku_Tree__Lobby__Center__ex__Basement_Ledge__Block_1),
            "Deku Tree > Lobby > Vines ==> Floor 2 > Lower (1)" => Ok(ExitId::Deku_Tree__Lobby__Vines__ex__Floor_2__Lower_1),
            "Deku Tree > Scrub Room > Entry ==> Floor 2 > Slingshot Door (1)" => Ok(ExitId::Deku_Tree__Scrub_Room__Entry__ex__Floor_2__Slingshot_Door_1),
            "Deku Tree > Scrub Room > Rear ==> Slingshot Room > Entry (1)" => Ok(ExitId::Deku_Tree__Scrub_Room__Rear__ex__Slingshot_Room__Entry_1),
            "Deku Tree > Skull Room > Entry ==> Back Room > Northwest (1)" => Ok(ExitId::Deku_Tree__Skull_Room__Entry__ex__Back_Room__Northwest_1),
            "Deku Tree > Slingshot Room > Entry ==> Scrub Room > Rear (1)" => Ok(ExitId::Deku_Tree__Slingshot_Room__Entry__ex__Scrub_Room__Rear_1),
            "Deku Tree > Slingshot Room > Slingshot ==> Slingshot Upper > Ledge (1)" => Ok(ExitId::Deku_Tree__Slingshot_Room__Slingshot__ex__Slingshot_Upper__Ledge_1),
            "Deku Tree > Slingshot Upper > Ledge ==> Slingshot Room > Slingshot (1)" => Ok(ExitId::Deku_Tree__Slingshot_Upper__Ledge__ex__Slingshot_Room__Slingshot_1),
            "KF > Baba Corridor > Tree Side ==> Outside Deku Tree > Entry (1)" => Ok(ExitId::KF__Baba_Corridor__Tree_Side__ex__Outside_Deku_Tree__Entry_1),
            "KF > Baba Corridor > Village Side ==> Kokiri Village > Mido's Guardpost (1)" => Ok(ExitId::KF__Baba_Corridor__Village_Side__ex__Kokiri_Village__Midos_Guardpost_1),
            "KF > Boulder Maze > Entry ==> Kokiri Village > Training Center (1)" => Ok(ExitId::KF__Boulder_Maze__Entry__ex__Kokiri_Village__Training_Center_1),
            "KF > Know-it-all House > Entry ==> Kokiri Village > Know-it-all Porch (1)" => Ok(ExitId::KF__Know_it_all_House__Entry__ex__Kokiri_Village__Know_it_all_Porch_1),
            "KF > Kokiri Village > Know-it-all Porch ==> Know-it-all House > Entry (1)" => Ok(ExitId::KF__Kokiri_Village__Know_it_all_Porch__ex__Know_it_all_House__Entry_1),
            "KF > Kokiri Village > Link's Porch ==> Link's House > Entry (1)" => Ok(ExitId::KF__Kokiri_Village__Links_Porch__ex__Links_House__Entry_1),
            "KF > Kokiri Village > Mido's Guardpost ==> Baba Corridor > Village Side (1)" => Ok(ExitId::KF__Kokiri_Village__Midos_Guardpost__ex__Baba_Corridor__Village_Side_1),
            "KF > Kokiri Village > Mido's Porch ==> Mido's House > Entry (1)" => Ok(ExitId::KF__Kokiri_Village__Midos_Porch__ex__Midos_House__Entry_1),
            "KF > Kokiri Village > Saria's Porch ==> Kak > Spider House > Entry (1)" => Ok(ExitId::KF__Kokiri_Village__Sarias_Porch__ex__Kak__Spider_House__Entry_1),
            "KF > Kokiri Village > Shop Porch ==> Shop > Entry (1)" => Ok(ExitId::KF__Kokiri_Village__Shop_Porch__ex__Shop__Entry_1),
            "KF > Kokiri Village > Training Center ==> Boulder Maze > Entry (1)" => Ok(ExitId::KF__Kokiri_Village__Training_Center__ex__Boulder_Maze__Entry_1),
            "KF > Link's House > Entry ==> Kokiri Village > Link's Porch (1)" => Ok(ExitId::KF__Links_House__Entry__ex__Kokiri_Village__Links_Porch_1),
            "KF > Mido's House > Entry ==> Kokiri Village > Mido's Porch (1)" => Ok(ExitId::KF__Midos_House__Entry__ex__Kokiri_Village__Midos_Porch_1),
            "KF > Outside Deku Tree > Entry ==> Baba Corridor > Tree Side (1)" => Ok(ExitId::KF__Outside_Deku_Tree__Entry__ex__Baba_Corridor__Tree_Side_1),
            "KF > Outside Deku Tree > Mouth ==> Deku Tree > Lobby > Entry (1)" => Ok(ExitId::KF__Outside_Deku_Tree__Mouth__ex__Deku_Tree__Lobby__Entry_1),
            "KF > Shop > Entry ==> Kokiri Village > Shop Porch (1)" => Ok(ExitId::KF__Shop__Entry__ex__Kokiri_Village__Shop_Porch_1),
            "Kak > Spider House > Entry ==> KF > Kokiri Village > Saria's Porch (1)" => Ok(ExitId::Kak__Spider_House__Entry__ex__KF__Kokiri_Village__Sarias_Porch_1),
            _ => Err(format!("Could not recognize as a ExitId: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum ActionId {
    Deku_Tree__Compass_Room__Entry__Light_Torch,
    Global__Change_Time,
    KF__Kokiri_Village__Midos_Porch__Gather_Rupees,
    KF__Kokiri_Village__Sarias_Porch__Save,
}
impl fmt::Display for ActionId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch => write!(f, "{}", "Deku Tree > Compass Room > Entry > Light Torch"),
            ActionId::Global__Change_Time => write!(f, "{}", "Change Time"),
            ActionId::KF__Kokiri_Village__Midos_Porch__Gather_Rupees => write!(f, "{}", "KF > Kokiri Village > Mido's Porch > Gather Rupees"),
            ActionId::KF__Kokiri_Village__Sarias_Porch__Save => write!(f, "{}", "KF > Kokiri Village > Saria's Porch > Save"),
        }
    }
}
impl analyzer::world::Id for ActionId {}
impl std::str::FromStr for ActionId {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Deku Tree > Compass Room > Entry > Light Torch" => Ok(ActionId::Deku_Tree__Compass_Room__Entry__Light_Torch),
            "Change Time" => Ok(ActionId::Global__Change_Time),
            "KF > Kokiri Village > Mido's Porch > Gather Rupees" => Ok(ActionId::KF__Kokiri_Village__Midos_Porch__Gather_Rupees),
            "KF > Kokiri Village > Saria's Porch > Save" => Ok(ActionId::KF__Kokiri_Village__Sarias_Porch__Save),
            _ => Err(format!("Could not recognize as a ActionId: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum CanonId {
    Defeat_Gohma,
    Deku_Basement_Web,
    Deku_Lobby_Web,
    Loc_Deku_Tree__Back_Room__Northwest__Break_Wall,
    Loc_Deku_Tree__Back_Room__Northwest__Burn_Web,
    Loc_Deku_Tree__Basement_1__Center__Vines_GS,
    Loc_Deku_Tree__Basement_1__Corner__Chest,
    Loc_Deku_Tree__Basement_1__Corner__Gate_GS,
    Loc_Deku_Tree__Basement_1__Corner__Switch,
    Loc_Deku_Tree__Basement_2__Boss_Door__Scrubs,
    Loc_Deku_Tree__Basement_Ledge__Block__Push_Block,
    Loc_Deku_Tree__Boss_Room__Arena__Blue_Warp,
    Loc_Deku_Tree__Boss_Room__Arena__Gohma_Heart,
    Loc_Deku_Tree__Compass_Room__Compass__Chest,
    Loc_Deku_Tree__Compass_Room__Ledge__Chest,
    Loc_Deku_Tree__Compass_Room__Ledge__GS,
    Loc_Deku_Tree__Floor_2__Vines__Map_Chest,
    Loc_Deku_Tree__Lobby__Center__Deku_Baba_Nuts,
    Loc_Deku_Tree__Lobby__Center__Deku_Baba_Sticks,
    Loc_Deku_Tree__Scrub_Room__Entry__Scrub,
    Loc_Deku_Tree__Skull_Room__Entry__GS,
    Loc_Deku_Tree__Slingshot_Room__Slingshot__Chest,
    Loc_Deku_Tree__Slingshot_Upper__Ledge__Chest,
    Loc_KF__Baba_Corridor__Deku_Babas__Nuts,
    Loc_KF__Baba_Corridor__Deku_Babas__Sticks,
    Loc_KF__Boulder_Maze__Reward__Chest,
    Loc_KF__Kokiri_Village__Midos_Guardpost__Show_Mido,
    Loc_KF__Kokiri_Village__Training_Center__Victory,
    Loc_KF__Midos_House__Entry__Bottom_Left_Chest,
    Loc_KF__Midos_House__Entry__Bottom_Right_Chest,
    Loc_KF__Midos_House__Entry__Top_Left_Chest,
    Loc_KF__Midos_House__Entry__Top_Right_Chest,
    Loc_KF__Outside_Deku_Tree__Left__Gossip_Stone,
    Loc_KF__Outside_Deku_Tree__Right__Gossip_Stone,
    Loc_KF__Shop__Entry__Blue_Rupee,
    Loc_KF__Shop__Entry__Item_1,
    Loc_KF__Shop__Entry__Item_2,
    Loc_KF__Shop__Entry__Item_3,
    Loc_KF__Shop__Entry__Item_4,
    Loc_KF__Shop__Entry__Item_5,
    Loc_KF__Shop__Entry__Item_6,
    Loc_KF__Shop__Entry__Item_7,
    Loc_KF__Shop__Entry__Item_8,
    Loc_Kak__Spider_House__Entry__Skulls_10,
}
impl fmt::Display for CanonId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            CanonId::Defeat_Gohma => write!(f, "{}", "Defeat_Gohma"),
            CanonId::Deku_Basement_Web => write!(f, "{}", "Deku_Basement_Web"),
            CanonId::Deku_Lobby_Web => write!(f, "{}", "Deku_Lobby_Web"),
            CanonId::Loc_Deku_Tree__Back_Room__Northwest__Break_Wall => write!(f, "{}", "Loc_Deku_Tree__Back_Room__Northwest__Break_Wall"),
            CanonId::Loc_Deku_Tree__Back_Room__Northwest__Burn_Web => write!(f, "{}", "Loc_Deku_Tree__Back_Room__Northwest__Burn_Web"),
            CanonId::Loc_Deku_Tree__Basement_1__Center__Vines_GS => write!(f, "{}", "Loc_Deku_Tree__Basement_1__Center__Vines_GS"),
            CanonId::Loc_Deku_Tree__Basement_1__Corner__Chest => write!(f, "{}", "Loc_Deku_Tree__Basement_1__Corner__Chest"),
            CanonId::Loc_Deku_Tree__Basement_1__Corner__Gate_GS => write!(f, "{}", "Loc_Deku_Tree__Basement_1__Corner__Gate_GS"),
            CanonId::Loc_Deku_Tree__Basement_1__Corner__Switch => write!(f, "{}", "Loc_Deku_Tree__Basement_1__Corner__Switch"),
            CanonId::Loc_Deku_Tree__Basement_2__Boss_Door__Scrubs => write!(f, "{}", "Loc_Deku_Tree__Basement_2__Boss_Door__Scrubs"),
            CanonId::Loc_Deku_Tree__Basement_Ledge__Block__Push_Block => write!(f, "{}", "Loc_Deku_Tree__Basement_Ledge__Block__Push_Block"),
            CanonId::Loc_Deku_Tree__Boss_Room__Arena__Blue_Warp => write!(f, "{}", "Loc_Deku_Tree__Boss_Room__Arena__Blue_Warp"),
            CanonId::Loc_Deku_Tree__Boss_Room__Arena__Gohma_Heart => write!(f, "{}", "Loc_Deku_Tree__Boss_Room__Arena__Gohma_Heart"),
            CanonId::Loc_Deku_Tree__Compass_Room__Compass__Chest => write!(f, "{}", "Loc_Deku_Tree__Compass_Room__Compass__Chest"),
            CanonId::Loc_Deku_Tree__Compass_Room__Ledge__Chest => write!(f, "{}", "Loc_Deku_Tree__Compass_Room__Ledge__Chest"),
            CanonId::Loc_Deku_Tree__Compass_Room__Ledge__GS => write!(f, "{}", "Loc_Deku_Tree__Compass_Room__Ledge__GS"),
            CanonId::Loc_Deku_Tree__Floor_2__Vines__Map_Chest => write!(f, "{}", "Loc_Deku_Tree__Floor_2__Vines__Map_Chest"),
            CanonId::Loc_Deku_Tree__Lobby__Center__Deku_Baba_Nuts => write!(f, "{}", "Loc_Deku_Tree__Lobby__Center__Deku_Baba_Nuts"),
            CanonId::Loc_Deku_Tree__Lobby__Center__Deku_Baba_Sticks => write!(f, "{}", "Loc_Deku_Tree__Lobby__Center__Deku_Baba_Sticks"),
            CanonId::Loc_Deku_Tree__Scrub_Room__Entry__Scrub => write!(f, "{}", "Loc_Deku_Tree__Scrub_Room__Entry__Scrub"),
            CanonId::Loc_Deku_Tree__Skull_Room__Entry__GS => write!(f, "{}", "Loc_Deku_Tree__Skull_Room__Entry__GS"),
            CanonId::Loc_Deku_Tree__Slingshot_Room__Slingshot__Chest => write!(f, "{}", "Loc_Deku_Tree__Slingshot_Room__Slingshot__Chest"),
            CanonId::Loc_Deku_Tree__Slingshot_Upper__Ledge__Chest => write!(f, "{}", "Loc_Deku_Tree__Slingshot_Upper__Ledge__Chest"),
            CanonId::Loc_KF__Baba_Corridor__Deku_Babas__Nuts => write!(f, "{}", "Loc_KF__Baba_Corridor__Deku_Babas__Nuts"),
            CanonId::Loc_KF__Baba_Corridor__Deku_Babas__Sticks => write!(f, "{}", "Loc_KF__Baba_Corridor__Deku_Babas__Sticks"),
            CanonId::Loc_KF__Boulder_Maze__Reward__Chest => write!(f, "{}", "Loc_KF__Boulder_Maze__Reward__Chest"),
            CanonId::Loc_KF__Kokiri_Village__Midos_Guardpost__Show_Mido => write!(f, "{}", "Loc_KF__Kokiri_Village__Midos_Guardpost__Show_Mido"),
            CanonId::Loc_KF__Kokiri_Village__Training_Center__Victory => write!(f, "{}", "Loc_KF__Kokiri_Village__Training_Center__Victory"),
            CanonId::Loc_KF__Midos_House__Entry__Bottom_Left_Chest => write!(f, "{}", "Loc_KF__Midos_House__Entry__Bottom_Left_Chest"),
            CanonId::Loc_KF__Midos_House__Entry__Bottom_Right_Chest => write!(f, "{}", "Loc_KF__Midos_House__Entry__Bottom_Right_Chest"),
            CanonId::Loc_KF__Midos_House__Entry__Top_Left_Chest => write!(f, "{}", "Loc_KF__Midos_House__Entry__Top_Left_Chest"),
            CanonId::Loc_KF__Midos_House__Entry__Top_Right_Chest => write!(f, "{}", "Loc_KF__Midos_House__Entry__Top_Right_Chest"),
            CanonId::Loc_KF__Outside_Deku_Tree__Left__Gossip_Stone => write!(f, "{}", "Loc_KF__Outside_Deku_Tree__Left__Gossip_Stone"),
            CanonId::Loc_KF__Outside_Deku_Tree__Right__Gossip_Stone => write!(f, "{}", "Loc_KF__Outside_Deku_Tree__Right__Gossip_Stone"),
            CanonId::Loc_KF__Shop__Entry__Blue_Rupee => write!(f, "{}", "Loc_KF__Shop__Entry__Blue_Rupee"),
            CanonId::Loc_KF__Shop__Entry__Item_1 => write!(f, "{}", "Loc_KF__Shop__Entry__Item_1"),
            CanonId::Loc_KF__Shop__Entry__Item_2 => write!(f, "{}", "Loc_KF__Shop__Entry__Item_2"),
            CanonId::Loc_KF__Shop__Entry__Item_3 => write!(f, "{}", "Loc_KF__Shop__Entry__Item_3"),
            CanonId::Loc_KF__Shop__Entry__Item_4 => write!(f, "{}", "Loc_KF__Shop__Entry__Item_4"),
            CanonId::Loc_KF__Shop__Entry__Item_5 => write!(f, "{}", "Loc_KF__Shop__Entry__Item_5"),
            CanonId::Loc_KF__Shop__Entry__Item_6 => write!(f, "{}", "Loc_KF__Shop__Entry__Item_6"),
            CanonId::Loc_KF__Shop__Entry__Item_7 => write!(f, "{}", "Loc_KF__Shop__Entry__Item_7"),
            CanonId::Loc_KF__Shop__Entry__Item_8 => write!(f, "{}", "Loc_KF__Shop__Entry__Item_8"),
            CanonId::Loc_Kak__Spider_House__Entry__Skulls_10 => write!(f, "{}", "Loc_Kak__Spider_House__Entry__Skulls_10"),
        }
    }
}
impl analyzer::world::Id for CanonId {}
impl std::str::FromStr for CanonId {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Defeat_Gohma" => Ok(CanonId::Defeat_Gohma),
            "Deku_Basement_Web" => Ok(CanonId::Deku_Basement_Web),
            "Deku_Lobby_Web" => Ok(CanonId::Deku_Lobby_Web),
            "Loc_Deku_Tree__Back_Room__Northwest__Break_Wall" => Ok(CanonId::Loc_Deku_Tree__Back_Room__Northwest__Break_Wall),
            "Loc_Deku_Tree__Back_Room__Northwest__Burn_Web" => Ok(CanonId::Loc_Deku_Tree__Back_Room__Northwest__Burn_Web),
            "Loc_Deku_Tree__Basement_1__Center__Vines_GS" => Ok(CanonId::Loc_Deku_Tree__Basement_1__Center__Vines_GS),
            "Loc_Deku_Tree__Basement_1__Corner__Chest" => Ok(CanonId::Loc_Deku_Tree__Basement_1__Corner__Chest),
            "Loc_Deku_Tree__Basement_1__Corner__Gate_GS" => Ok(CanonId::Loc_Deku_Tree__Basement_1__Corner__Gate_GS),
            "Loc_Deku_Tree__Basement_1__Corner__Switch" => Ok(CanonId::Loc_Deku_Tree__Basement_1__Corner__Switch),
            "Loc_Deku_Tree__Basement_2__Boss_Door__Scrubs" => Ok(CanonId::Loc_Deku_Tree__Basement_2__Boss_Door__Scrubs),
            "Loc_Deku_Tree__Basement_Ledge__Block__Push_Block" => Ok(CanonId::Loc_Deku_Tree__Basement_Ledge__Block__Push_Block),
            "Loc_Deku_Tree__Boss_Room__Arena__Blue_Warp" => Ok(CanonId::Loc_Deku_Tree__Boss_Room__Arena__Blue_Warp),
            "Loc_Deku_Tree__Boss_Room__Arena__Gohma_Heart" => Ok(CanonId::Loc_Deku_Tree__Boss_Room__Arena__Gohma_Heart),
            "Loc_Deku_Tree__Compass_Room__Compass__Chest" => Ok(CanonId::Loc_Deku_Tree__Compass_Room__Compass__Chest),
            "Loc_Deku_Tree__Compass_Room__Ledge__Chest" => Ok(CanonId::Loc_Deku_Tree__Compass_Room__Ledge__Chest),
            "Loc_Deku_Tree__Compass_Room__Ledge__GS" => Ok(CanonId::Loc_Deku_Tree__Compass_Room__Ledge__GS),
            "Loc_Deku_Tree__Floor_2__Vines__Map_Chest" => Ok(CanonId::Loc_Deku_Tree__Floor_2__Vines__Map_Chest),
            "Loc_Deku_Tree__Lobby__Center__Deku_Baba_Nuts" => Ok(CanonId::Loc_Deku_Tree__Lobby__Center__Deku_Baba_Nuts),
            "Loc_Deku_Tree__Lobby__Center__Deku_Baba_Sticks" => Ok(CanonId::Loc_Deku_Tree__Lobby__Center__Deku_Baba_Sticks),
            "Loc_Deku_Tree__Scrub_Room__Entry__Scrub" => Ok(CanonId::Loc_Deku_Tree__Scrub_Room__Entry__Scrub),
            "Loc_Deku_Tree__Skull_Room__Entry__GS" => Ok(CanonId::Loc_Deku_Tree__Skull_Room__Entry__GS),
            "Loc_Deku_Tree__Slingshot_Room__Slingshot__Chest" => Ok(CanonId::Loc_Deku_Tree__Slingshot_Room__Slingshot__Chest),
            "Loc_Deku_Tree__Slingshot_Upper__Ledge__Chest" => Ok(CanonId::Loc_Deku_Tree__Slingshot_Upper__Ledge__Chest),
            "Loc_KF__Baba_Corridor__Deku_Babas__Nuts" => Ok(CanonId::Loc_KF__Baba_Corridor__Deku_Babas__Nuts),
            "Loc_KF__Baba_Corridor__Deku_Babas__Sticks" => Ok(CanonId::Loc_KF__Baba_Corridor__Deku_Babas__Sticks),
            "Loc_KF__Boulder_Maze__Reward__Chest" => Ok(CanonId::Loc_KF__Boulder_Maze__Reward__Chest),
            "Loc_KF__Kokiri_Village__Midos_Guardpost__Show_Mido" => Ok(CanonId::Loc_KF__Kokiri_Village__Midos_Guardpost__Show_Mido),
            "Loc_KF__Kokiri_Village__Training_Center__Victory" => Ok(CanonId::Loc_KF__Kokiri_Village__Training_Center__Victory),
            "Loc_KF__Midos_House__Entry__Bottom_Left_Chest" => Ok(CanonId::Loc_KF__Midos_House__Entry__Bottom_Left_Chest),
            "Loc_KF__Midos_House__Entry__Bottom_Right_Chest" => Ok(CanonId::Loc_KF__Midos_House__Entry__Bottom_Right_Chest),
            "Loc_KF__Midos_House__Entry__Top_Left_Chest" => Ok(CanonId::Loc_KF__Midos_House__Entry__Top_Left_Chest),
            "Loc_KF__Midos_House__Entry__Top_Right_Chest" => Ok(CanonId::Loc_KF__Midos_House__Entry__Top_Right_Chest),
            "Loc_KF__Outside_Deku_Tree__Left__Gossip_Stone" => Ok(CanonId::Loc_KF__Outside_Deku_Tree__Left__Gossip_Stone),
            "Loc_KF__Outside_Deku_Tree__Right__Gossip_Stone" => Ok(CanonId::Loc_KF__Outside_Deku_Tree__Right__Gossip_Stone),
            "Loc_KF__Shop__Entry__Blue_Rupee" => Ok(CanonId::Loc_KF__Shop__Entry__Blue_Rupee),
            "Loc_KF__Shop__Entry__Item_1" => Ok(CanonId::Loc_KF__Shop__Entry__Item_1),
            "Loc_KF__Shop__Entry__Item_2" => Ok(CanonId::Loc_KF__Shop__Entry__Item_2),
            "Loc_KF__Shop__Entry__Item_3" => Ok(CanonId::Loc_KF__Shop__Entry__Item_3),
            "Loc_KF__Shop__Entry__Item_4" => Ok(CanonId::Loc_KF__Shop__Entry__Item_4),
            "Loc_KF__Shop__Entry__Item_5" => Ok(CanonId::Loc_KF__Shop__Entry__Item_5),
            "Loc_KF__Shop__Entry__Item_6" => Ok(CanonId::Loc_KF__Shop__Entry__Item_6),
            "Loc_KF__Shop__Entry__Item_7" => Ok(CanonId::Loc_KF__Shop__Entry__Item_7),
            "Loc_KF__Shop__Entry__Item_8" => Ok(CanonId::Loc_KF__Shop__Entry__Item_8),
            "Loc_Kak__Spider_House__Entry__Skulls_10" => Ok(CanonId::Loc_Kak__Spider_House__Entry__Skulls_10),
            _ => Err(format!("Could not recognize as a CanonId: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, enum_map::Enum, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum WarpId {
    Minuet,
    Save,
}
impl fmt::Display for WarpId {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            WarpId::Minuet => write!(f, "{}", "Minuet"),
            WarpId::Save => write!(f, "{}", "Save"),
        }
    }
}
impl analyzer::world::Id for WarpId {}
impl std::str::FromStr for WarpId {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Minuet" => Ok(WarpId::Minuet),
            "Save" => Ok(WarpId::Save),
            _ => Err(format!("Could not recognize as a WarpId: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, Default, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum RuleVictory {
    #[default]
    Default,
}
impl fmt::Display for RuleVictory {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            RuleVictory::Default => write!(f, "{}", "default"),
        }
    }
}
impl std::str::FromStr for RuleVictory {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "default" => Ok(RuleVictory::Default),
            _ => Err(format!("Could not recognize as a RuleVictory: {}", s)),
        }
    }
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash, Ord, PartialOrd, Default, serde_repr::Serialize_repr, serde_repr::Deserialize_repr)]
#[repr(u8)]
pub enum RuleObjective {
    #[default]
    Gohma,
    Ganon,
    TriforceHunt,
}
impl fmt::Display for RuleObjective {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            RuleObjective::Gohma => write!(f, "{}", "Gohma"),
            RuleObjective::Ganon => write!(f, "{}", "Ganon"),
            RuleObjective::TriforceHunt => write!(f, "{}", "Triforce Hunt"),
        }
    }
}
impl std::str::FromStr for RuleObjective {
    type Err = String;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Gohma" => Ok(RuleObjective::Gohma),
            "Ganon" => Ok(RuleObjective::Ganon),
            "Triforce Hunt" => Ok(RuleObjective::TriforceHunt),
            _ => Err(format!("Could not recognize as a RuleObjective: {}", s)),
        }
    }
}

