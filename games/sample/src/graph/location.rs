//! AUTOGENERATED FOR sample - MODIFICATIONS WILL BE LOST

#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(unused)]

use crate::context::*;
use crate::graph::{World, enums::*};
use crate::items::*;
use crate::observe::FullObservation;
use crate::prices::Currency;
use crate::rules;
use analyzer::context::Ctx;
use analyzer::world;
use analyzer::world::World as _;
use enum_map::{Enum, EnumMap};
use rustc_hash::FxHashMap;
use std::option::Option;

#[derive(Copy, Clone, Debug)]
pub struct Location {
    id: LocationId,
    item: Item,
    canonical: CanonId,
    time: u32,
    dest: SpotId,
    price: Currency,
    price_per_sec: Currency,
    skippable: bool,
}

impl world::Accessible for Location {
    type Context = Context;
    type Currency = Currency;

    fn can_access(&self, ctx: &Context, world: &World) -> bool {
        ctx.can_afford(&self.price) && match self.id {
            LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => rules::access_deku_back_room_web_and_invoke_can_blast_or_smash(ctx, world),
            LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => rules::access_invoke_has_fire_source_with_torch_or_invoke_can_use__bow(ctx, world),
            LocationId::Deku_Tree__Basement_1__Center__Vines_GS => rules::access_invoke_is_adult_or_invoke_sticks_or_kokiri_sword(ctx, world),
            LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => rules::access_deku_basement_block_and_invoke_is_child_and_invoke_sticks(ctx, world),
            LocationId::Deku_Tree__Basement_1__Corner__Chest => rules::access_deku_basement_switch(ctx, world),
            LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => rules::access_invoke_is_adult_or_invoke_can_child_attack(ctx, world),
            LocationId::Deku_Tree__Basement_1__Corner__Switch => true,
            LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => rules::access_invoke_has_shield(ctx, world),
            LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => true,
            LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => rules::access_invoke_has_fire_source(ctx, world),
            LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => rules::access_defeat_gohma(ctx, world),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma => rules::access___invoke_nuts_or_invoke_can_use__slingshot_and_invoke_can_jumpslash(ctx, world),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => rules::access_defeat_gohma(ctx, world),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => rules::access_invoke_nuts_and_invoke_has_shield_and_if___invoke_is_child____invoke_sticks__else____biggoron_sword_(ctx, world),
            LocationId::Deku_Tree__Compass_Room__Compass__Chest => true,
            LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => rules::access_invoke_is_child_and_invoke_sticks_and_invoke_nuts(ctx, world),
            LocationId::Deku_Tree__Compass_Room__Ledge__Chest => true,
            LocationId::Deku_Tree__Compass_Room__Ledge__GS => rules::access_invoke_is_adult_or_invoke_can_child_attack(ctx, world),
            LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => true,
            LocationId::Deku_Tree__Floor_3__Door__Break_Web => rules::access_invoke_is_adult_or_invoke_can_child_attack_or_invoke_nuts(ctx, world),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Nuts => rules::access_invoke_is_adult_or_slingshot_or_invoke_sticks_or_kokiri_sword(ctx, world),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => rules::access_invoke_is_adult_or_kokiri_sword_or_boomerang(ctx, world),
            LocationId::Deku_Tree__Lobby__Center__Web => rules::access_false(ctx, world),
            LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => rules::access_invoke_has_shield(ctx, world),
            LocationId::Deku_Tree__Skull_Room__Entry__GS => rules::access_invoke_can_use__boomerang_or_invoke_can_use__hookshot(ctx, world),
            LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => true,
            LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => true,
            LocationId::Kak__Spider_House__Entry__Skulls_10 => rules::access_gold_skulltula_token__10(ctx, world),
            LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => rules::access_invoke_is_adult(ctx, world),
            LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => rules::access_invoke_is_adult_or_kokiri_sword_or_boomerang(ctx, world),
            LocationId::KF__Boulder_Maze__Reward__Chest => true,
            LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => rules::access_invoke_is_child_and_kokiri_sword_and_invoke_deku_shield(ctx, world),
            LocationId::KF__Kokiri_Village__Training_Center__Victory => rules::access_invoke_objective(ctx, world),
            LocationId::KF__Midos_House__Entry__Bottom_Left_Chest => true,
            LocationId::KF__Midos_House__Entry__Bottom_Right_Chest => true,
            LocationId::KF__Midos_House__Entry__Top_Left_Chest => true,
            LocationId::KF__Midos_House__Entry__Top_Right_Chest => true,
            LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => true,
            LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => true,
            LocationId::KF__Shop__Entry__Blue_Rupee => true,
            LocationId::KF__Shop__Entry__Item_1 => true,
            LocationId::KF__Shop__Entry__Item_2 => true,
            LocationId::KF__Shop__Entry__Item_3 => true,
            LocationId::KF__Shop__Entry__Item_4 => true,
            LocationId::KF__Shop__Entry__Item_5 => true,
            LocationId::KF__Shop__Entry__Item_6 => true,
            LocationId::KF__Shop__Entry__Item_7 => true,
            LocationId::KF__Shop__Entry__Item_8 => true,
        }
    }
    fn observe_access(&self, ctx: &Context, world: &World, full_obs: &mut FullObservation) -> bool {
        ctx.observe_afford(&self.price, full_obs);
        match self.id {
            LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => rules::observe_access_deku_back_room_web_and_invoke_can_blast_or_smash(ctx, world, full_obs),
            LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => rules::observe_access_invoke_has_fire_source_with_torch_or_invoke_can_use__bow(ctx, world, full_obs),
            LocationId::Deku_Tree__Basement_1__Center__Vines_GS => rules::observe_access_invoke_is_adult_or_invoke_sticks_or_kokiri_sword(ctx, world, full_obs),
            LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => rules::observe_access_deku_basement_block_and_invoke_is_child_and_invoke_sticks(ctx, world, full_obs),
            LocationId::Deku_Tree__Basement_1__Corner__Chest => rules::observe_access_deku_basement_switch(ctx, world, full_obs),
            LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => rules::observe_access_invoke_is_adult_or_invoke_can_child_attack(ctx, world, full_obs),
            LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => rules::observe_access_invoke_has_shield(ctx, world, full_obs),
            LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => rules::observe_access_invoke_has_fire_source(ctx, world, full_obs),
            LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => rules::observe_access_defeat_gohma(ctx, world, full_obs),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma => rules::observe_access___invoke_nuts_or_invoke_can_use__slingshot_and_invoke_can_jumpslash(ctx, world, full_obs),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => rules::observe_access_defeat_gohma(ctx, world, full_obs),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => rules::observe_access_invoke_nuts_and_invoke_has_shield_and_if___invoke_is_child____invoke_sticks__else____biggoron_sword_(ctx, world, full_obs),
            LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => rules::observe_access_invoke_is_child_and_invoke_sticks_and_invoke_nuts(ctx, world, full_obs),
            LocationId::Deku_Tree__Compass_Room__Ledge__GS => rules::observe_access_invoke_is_adult_or_invoke_can_child_attack(ctx, world, full_obs),
            LocationId::Deku_Tree__Floor_3__Door__Break_Web => rules::observe_access_invoke_is_adult_or_invoke_can_child_attack_or_invoke_nuts(ctx, world, full_obs),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Nuts => rules::observe_access_invoke_is_adult_or_slingshot_or_invoke_sticks_or_kokiri_sword(ctx, world, full_obs),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => rules::observe_access_invoke_is_adult_or_kokiri_sword_or_boomerang(ctx, world, full_obs),
            LocationId::Deku_Tree__Lobby__Center__Web => rules::observe_access_false(ctx, world, full_obs),
            LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => rules::observe_access_invoke_has_shield(ctx, world, full_obs),
            LocationId::Deku_Tree__Skull_Room__Entry__GS => rules::observe_access_invoke_can_use__boomerang_or_invoke_can_use__hookshot(ctx, world, full_obs),
            LocationId::Kak__Spider_House__Entry__Skulls_10 => rules::observe_access_gold_skulltula_token__10(ctx, world, full_obs),
            LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => rules::observe_access_invoke_is_adult(ctx, world, full_obs),
            LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => rules::observe_access_invoke_is_adult_or_kokiri_sword_or_boomerang(ctx, world, full_obs),
            LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => rules::observe_access_invoke_is_child_and_kokiri_sword_and_invoke_deku_shield(ctx, world, full_obs),
            LocationId::KF__Kokiri_Village__Training_Center__Victory => rules::observe_access_invoke_objective(ctx, world, full_obs),
            _ => true,
        }
    }
    fn base_time(&self) -> u32 { self.time }
    fn time(&self, ctx: &Context, world: &World) -> u32 {
        self.time
            + match self.id {
            _ => 0,
        }
    }
    fn base_price(&self) -> &Currency { &self.price }
    fn price_per_sec(&self) -> &Currency { &self.price_per_sec }
    fn price(&self, ctx: &Context, world: &World) -> Currency {
        if self.price_per_sec == Currency::Free {
            self.price
        } else {
            match self.id {
                _ => self.price + (self.price_per_sec * (self.time(ctx, world) as f32 / 1000.0))
            }
        }
    }

    fn explain_rule(&self, ctx: &Self::Context, world: &World, edict: &mut FxHashMap<&'static str, String>) -> (bool, Vec<&'static str>) {
        match self.id {
            LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall => rules::explain_deku_back_room_web_and_invoke_can_blast_or_smash(ctx, world, edict),
            LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => rules::explain_invoke_has_fire_source_with_torch_or_invoke_can_use__bow(ctx, world, edict),
            LocationId::Deku_Tree__Basement_1__Center__Vines_GS => rules::explain_invoke_is_adult_or_invoke_sticks_or_kokiri_sword(ctx, world, edict),
            LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => rules::explain_deku_basement_block_and_invoke_is_child_and_invoke_sticks(ctx, world, edict),
            LocationId::Deku_Tree__Basement_1__Corner__Chest => rules::explain_deku_basement_switch(ctx, world, edict),
            LocationId::Deku_Tree__Basement_1__Corner__Gate_GS => rules::explain_invoke_is_adult_or_invoke_can_child_attack(ctx, world, edict),
            LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => rules::explain_invoke_has_shield(ctx, world, edict),
            LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => rules::explain_invoke_has_fire_source(ctx, world, edict),
            LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => rules::explain_defeat_gohma(ctx, world, edict),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma => rules::explain___invoke_nuts_or_invoke_can_use__slingshot_and_invoke_can_jumpslash(ctx, world, edict),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart => rules::explain_defeat_gohma(ctx, world, edict),
            LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => rules::explain_invoke_nuts_and_invoke_has_shield_and_if___invoke_is_child____invoke_sticks__else____biggoron_sword_(ctx, world, edict),
            LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => rules::explain_invoke_is_child_and_invoke_sticks_and_invoke_nuts(ctx, world, edict),
            LocationId::Deku_Tree__Compass_Room__Ledge__GS => rules::explain_invoke_is_adult_or_invoke_can_child_attack(ctx, world, edict),
            LocationId::Deku_Tree__Floor_3__Door__Break_Web => rules::explain_invoke_is_adult_or_invoke_can_child_attack_or_invoke_nuts(ctx, world, edict),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Nuts => rules::explain_invoke_is_adult_or_slingshot_or_invoke_sticks_or_kokiri_sword(ctx, world, edict),
            LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks => rules::explain_invoke_is_adult_or_kokiri_sword_or_boomerang(ctx, world, edict),
            LocationId::Deku_Tree__Lobby__Center__Web => rules::explain_false(ctx, world, edict),
            LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => rules::explain_invoke_has_shield(ctx, world, edict),
            LocationId::Deku_Tree__Skull_Room__Entry__GS => rules::explain_invoke_can_use__boomerang_or_invoke_can_use__hookshot(ctx, world, edict),
            LocationId::Kak__Spider_House__Entry__Skulls_10 => rules::explain_gold_skulltula_token__10(ctx, world, edict),
            LocationId::KF__Baba_Corridor__Deku_Babas__Nuts => rules::explain_invoke_is_adult(ctx, world, edict),
            LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => rules::explain_invoke_is_adult_or_kokiri_sword_or_boomerang(ctx, world, edict),
            LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => rules::explain_invoke_is_child_and_kokiri_sword_and_invoke_deku_shield(ctx, world, edict),
            LocationId::KF__Kokiri_Village__Training_Center__Victory => rules::explain_invoke_objective(ctx, world, edict),
            _ => (true, vec![])
        }
    }
}

impl world::Location for Location {
    type LocId = LocationId;
    type CanonId = CanonId;
    type SpotId = SpotId;

    fn id(&self) -> LocationId { self.id }
    fn item(&self) -> Item { self.item }
    fn canon_id(&self) -> CanonId { self.canonical }
    fn skippable(&self) -> bool { self.skippable }
    fn dest(&self) -> SpotId { self.dest }
}

impl Location {
    pub fn set_skippable(&mut self, skippable: bool) {
        self.skippable = skippable;
    }
}

static LOC_DEFS: [Location; 48] = [
    Location {
        id: LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall,
        canonical: CanonId::Loc_Deku_Tree__Back_Room__Northwest__Break_Wall,
        item: Item::Deku_Back_Room_Wall,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web,
        canonical: CanonId::Loc_Deku_Tree__Back_Room__Northwest__Burn_Web,
        item: Item::Deku_Back_Room_Web,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Basement_1__Center__Vines_GS,
        canonical: CanonId::Loc_Deku_Tree__Basement_1__Center__Vines_GS,
        item: Item::Gold_Skulltula_Token,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 2000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web,
        canonical: CanonId::Deku_Basement_Web,
        item: Item::Deku_Basement_Web,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 2000,
        dest: SpotId::Deku_Tree__Basement_Ledge__Web,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Basement_1__Corner__Chest,
        canonical: CanonId::Loc_Deku_Tree__Basement_1__Corner__Chest,
        item: Item::Recovery_Heart,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Basement_1__Corner__Gate_GS,
        canonical: CanonId::Loc_Deku_Tree__Basement_1__Corner__Gate_GS,
        item: Item::Gold_Skulltula_Token,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 2000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Basement_1__Corner__Switch,
        canonical: CanonId::Loc_Deku_Tree__Basement_1__Corner__Switch,
        item: Item::Deku_Basement_Switch,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs,
        canonical: CanonId::Loc_Deku_Tree__Basement_2__Boss_Door__Scrubs,
        item: Item::Deku_Basement_Scrubs,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 4000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block,
        canonical: CanonId::Loc_Deku_Tree__Basement_Ledge__Block__Push_Block,
        item: Item::Deku_Basement_Block,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 4000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web,
        canonical: CanonId::Deku_Basement_Web,
        item: Item::Deku_Basement_Web,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp,
        canonical: CanonId::Loc_Deku_Tree__Boss_Room__Arena__Blue_Warp,
        item: Item::Kokiri_Emerald,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 8000,
        dest: SpotId::KF__Outside_Deku_Tree__Mouth,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma,
        canonical: CanonId::Defeat_Gohma,
        item: Item::Defeat_Gohma,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 10000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart,
        canonical: CanonId::Loc_Deku_Tree__Boss_Room__Arena__Gohma_Heart,
        item: Item::Heart_Container,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill,
        canonical: CanonId::Defeat_Gohma,
        item: Item::Defeat_Gohma,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 4000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Compass_Room__Compass__Chest,
        canonical: CanonId::Loc_Deku_Tree__Compass_Room__Compass__Chest,
        item: Item::Compass_Deku_Tree,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 3000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web,
        canonical: CanonId::Deku_Lobby_Web,
        item: Item::Deku_Lobby_Web,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 5000,
        dest: SpotId::Deku_Tree__Lobby__Center,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Compass_Room__Ledge__Chest,
        canonical: CanonId::Loc_Deku_Tree__Compass_Room__Ledge__Chest,
        item: Item::Recovery_Heart,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Compass_Room__Ledge__GS,
        canonical: CanonId::Loc_Deku_Tree__Compass_Room__Ledge__GS,
        item: Item::Gold_Skulltula_Token,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Floor_2__Vines__Map_Chest,
        canonical: CanonId::Loc_Deku_Tree__Floor_2__Vines__Map_Chest,
        item: Item::Map_Deku_Tree,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 3000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Floor_3__Door__Break_Web,
        canonical: CanonId::Deku_Lobby_Web,
        item: Item::Deku_Lobby_Web,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 4000,
        dest: SpotId::Deku_Tree__Basement_1__Center,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Nuts,
        canonical: CanonId::Loc_Deku_Tree__Lobby__Center__Deku_Baba_Nuts,
        item: Item::Deku_Nut_Drop,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks,
        canonical: CanonId::Loc_Deku_Tree__Lobby__Center__Deku_Baba_Sticks,
        item: Item::Deku_Stick_Drop,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Lobby__Center__Web,
        canonical: CanonId::Deku_Lobby_Web,
        item: Item::Deku_Lobby_Web,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Scrub_Room__Entry__Scrub,
        canonical: CanonId::Loc_Deku_Tree__Scrub_Room__Entry__Scrub,
        item: Item::Deku_Slingshot_Scrub,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 2000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Skull_Room__Entry__GS,
        canonical: CanonId::Loc_Deku_Tree__Skull_Room__Entry__GS,
        item: Item::Gold_Skulltula_Token,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest,
        canonical: CanonId::Loc_Deku_Tree__Slingshot_Room__Slingshot__Chest,
        item: Item::Slingshot,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 3000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest,
        canonical: CanonId::Loc_Deku_Tree__Slingshot_Upper__Ledge__Chest,
        item: Item::Recovery_Heart,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Baba_Corridor__Deku_Babas__Nuts,
        canonical: CanonId::Loc_KF__Baba_Corridor__Deku_Babas__Nuts,
        item: Item::Deku_Nut_Drop,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Baba_Corridor__Deku_Babas__Sticks,
        canonical: CanonId::Loc_KF__Baba_Corridor__Deku_Babas__Sticks,
        item: Item::Deku_Stick_Drop,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Boulder_Maze__Reward__Chest,
        canonical: CanonId::Loc_KF__Boulder_Maze__Reward__Chest,
        item: Item::Kokiri_Sword,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 3000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido,
        canonical: CanonId::Loc_KF__Kokiri_Village__Midos_Guardpost__Show_Mido,
        item: Item::Showed_Mido,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Kokiri_Village__Training_Center__Victory,
        canonical: CanonId::Loc_KF__Kokiri_Village__Training_Center__Victory,
        item: Item::Victory,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 0,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Midos_House__Entry__Bottom_Left_Chest,
        canonical: CanonId::Loc_KF__Midos_House__Entry__Bottom_Left_Chest,
        item: Item::Rupee_1,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Midos_House__Entry__Bottom_Right_Chest,
        canonical: CanonId::Loc_KF__Midos_House__Entry__Bottom_Right_Chest,
        item: Item::Recovery_Heart,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Midos_House__Entry__Top_Left_Chest,
        canonical: CanonId::Loc_KF__Midos_House__Entry__Top_Left_Chest,
        item: Item::Rupees_5,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Midos_House__Entry__Top_Right_Chest,
        canonical: CanonId::Loc_KF__Midos_House__Entry__Top_Right_Chest,
        item: Item::Rupees_50,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone,
        canonical: CanonId::Loc_KF__Outside_Deku_Tree__Left__Gossip_Stone,
        item: Item::Gossip_Stone_Deku_Left,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone,
        canonical: CanonId::Loc_KF__Outside_Deku_Tree__Right__Gossip_Stone,
        item: Item::Gossip_Stone_Deku_Right,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Blue_Rupee,
        canonical: CanonId::Loc_KF__Shop__Entry__Blue_Rupee,
        item: Item::Rupees_5,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Item_1,
        canonical: CanonId::Loc_KF__Shop__Entry__Item_1,
        item: Item::Buy_Deku_Shield,
        price: Currency::Rupees(40),
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Item_2,
        canonical: CanonId::Loc_KF__Shop__Entry__Item_2,
        item: Item::Buy_Deku_Nut_5,
        price: Currency::Rupees(15),
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Item_3,
        canonical: CanonId::Loc_KF__Shop__Entry__Item_3,
        item: Item::Buy_Deku_Nut_10,
        price: Currency::Rupees(30),
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Item_4,
        canonical: CanonId::Loc_KF__Shop__Entry__Item_4,
        item: Item::Buy_Deku_Stick_1,
        price: Currency::Rupees(10),
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Item_5,
        canonical: CanonId::Loc_KF__Shop__Entry__Item_5,
        item: Item::Buy_Deku_Seeds_30,
        price: Currency::Rupees(30),
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Item_6,
        canonical: CanonId::Loc_KF__Shop__Entry__Item_6,
        item: Item::Buy_Arrows_10,
        price: Currency::Rupees(20),
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Item_7,
        canonical: CanonId::Loc_KF__Shop__Entry__Item_7,
        item: Item::Buy_Arrows_30,
        price: Currency::Rupees(60),
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::KF__Shop__Entry__Item_8,
        canonical: CanonId::Loc_KF__Shop__Entry__Item_8,
        item: Item::Buy_Heart,
        price: Currency::Rupees(10),
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
    Location {
        id: LocationId::Kak__Spider_House__Entry__Skulls_10,
        canonical: CanonId::Loc_Kak__Spider_House__Entry__Skulls_10,
        item: Item::Arrows_10,
        price: Currency::Free,
        price_per_sec: Currency::Free,
        time: 1000,
        dest: SpotId::None,
        skippable: false,
    },
];

static CANON_DEFEAT_GOHMA: [LocationId; 2] = [LocationId::Deku_Tree__Boss_Room__Arena__Gohma, LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill];
static CANON_DEKU_BASEMENT_WEB: [LocationId; 2] = [LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web, LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web];
static CANON_DEKU_LOBBY_WEB: [LocationId; 3] = [LocationId::Deku_Tree__Lobby__Center__Web, LocationId::Deku_Tree__Floor_3__Door__Break_Web, LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web];
static CANON_LOC_DEKU_TREE__BACK_ROOM__NORTHWEST__BREAK_WALL: [LocationId; 1] = [LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall];
static CANON_LOC_DEKU_TREE__BACK_ROOM__NORTHWEST__BURN_WEB: [LocationId; 1] = [LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web];
static CANON_LOC_DEKU_TREE__BASEMENT_1__CENTER__VINES_GS: [LocationId; 1] = [LocationId::Deku_Tree__Basement_1__Center__Vines_GS];
static CANON_LOC_DEKU_TREE__BASEMENT_1__CORNER__CHEST: [LocationId; 1] = [LocationId::Deku_Tree__Basement_1__Corner__Chest];
static CANON_LOC_DEKU_TREE__BASEMENT_1__CORNER__GATE_GS: [LocationId; 1] = [LocationId::Deku_Tree__Basement_1__Corner__Gate_GS];
static CANON_LOC_DEKU_TREE__BASEMENT_1__CORNER__SWITCH: [LocationId; 1] = [LocationId::Deku_Tree__Basement_1__Corner__Switch];
static CANON_LOC_DEKU_TREE__BASEMENT_2__BOSS_DOOR__SCRUBS: [LocationId; 1] = [LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs];
static CANON_LOC_DEKU_TREE__BASEMENT_LEDGE__BLOCK__PUSH_BLOCK: [LocationId; 1] = [LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block];
static CANON_LOC_DEKU_TREE__BOSS_ROOM__ARENA__BLUE_WARP: [LocationId; 1] = [LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp];
static CANON_LOC_DEKU_TREE__BOSS_ROOM__ARENA__GOHMA_HEART: [LocationId; 1] = [LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart];
static CANON_LOC_DEKU_TREE__COMPASS_ROOM__COMPASS__CHEST: [LocationId; 1] = [LocationId::Deku_Tree__Compass_Room__Compass__Chest];
static CANON_LOC_DEKU_TREE__COMPASS_ROOM__LEDGE__CHEST: [LocationId; 1] = [LocationId::Deku_Tree__Compass_Room__Ledge__Chest];
static CANON_LOC_DEKU_TREE__COMPASS_ROOM__LEDGE__GS: [LocationId; 1] = [LocationId::Deku_Tree__Compass_Room__Ledge__GS];
static CANON_LOC_DEKU_TREE__FLOOR_2__VINES__MAP_CHEST: [LocationId; 1] = [LocationId::Deku_Tree__Floor_2__Vines__Map_Chest];
static CANON_LOC_DEKU_TREE__LOBBY__CENTER__DEKU_BABA_NUTS: [LocationId; 1] = [LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Nuts];
static CANON_LOC_DEKU_TREE__LOBBY__CENTER__DEKU_BABA_STICKS: [LocationId; 1] = [LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks];
static CANON_LOC_DEKU_TREE__SCRUB_ROOM__ENTRY__SCRUB: [LocationId; 1] = [LocationId::Deku_Tree__Scrub_Room__Entry__Scrub];
static CANON_LOC_DEKU_TREE__SKULL_ROOM__ENTRY__GS: [LocationId; 1] = [LocationId::Deku_Tree__Skull_Room__Entry__GS];
static CANON_LOC_DEKU_TREE__SLINGSHOT_ROOM__SLINGSHOT__CHEST: [LocationId; 1] = [LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest];
static CANON_LOC_DEKU_TREE__SLINGSHOT_UPPER__LEDGE__CHEST: [LocationId; 1] = [LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest];
static CANON_LOC_KF__BABA_CORRIDOR__DEKU_BABAS__NUTS: [LocationId; 1] = [LocationId::KF__Baba_Corridor__Deku_Babas__Nuts];
static CANON_LOC_KF__BABA_CORRIDOR__DEKU_BABAS__STICKS: [LocationId; 1] = [LocationId::KF__Baba_Corridor__Deku_Babas__Sticks];
static CANON_LOC_KF__BOULDER_MAZE__REWARD__CHEST: [LocationId; 1] = [LocationId::KF__Boulder_Maze__Reward__Chest];
static CANON_LOC_KF__KOKIRI_VILLAGE__MIDOS_GUARDPOST__SHOW_MIDO: [LocationId; 1] = [LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido];
static CANON_LOC_KF__KOKIRI_VILLAGE__TRAINING_CENTER__VICTORY: [LocationId; 1] = [LocationId::KF__Kokiri_Village__Training_Center__Victory];
static CANON_LOC_KF__MIDOS_HOUSE__ENTRY__BOTTOM_LEFT_CHEST: [LocationId; 1] = [LocationId::KF__Midos_House__Entry__Bottom_Left_Chest];
static CANON_LOC_KF__MIDOS_HOUSE__ENTRY__BOTTOM_RIGHT_CHEST: [LocationId; 1] = [LocationId::KF__Midos_House__Entry__Bottom_Right_Chest];
static CANON_LOC_KF__MIDOS_HOUSE__ENTRY__TOP_LEFT_CHEST: [LocationId; 1] = [LocationId::KF__Midos_House__Entry__Top_Left_Chest];
static CANON_LOC_KF__MIDOS_HOUSE__ENTRY__TOP_RIGHT_CHEST: [LocationId; 1] = [LocationId::KF__Midos_House__Entry__Top_Right_Chest];
static CANON_LOC_KF__OUTSIDE_DEKU_TREE__LEFT__GOSSIP_STONE: [LocationId; 1] = [LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone];
static CANON_LOC_KF__OUTSIDE_DEKU_TREE__RIGHT__GOSSIP_STONE: [LocationId; 1] = [LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone];
static CANON_LOC_KF__SHOP__ENTRY__BLUE_RUPEE: [LocationId; 1] = [LocationId::KF__Shop__Entry__Blue_Rupee];
static CANON_LOC_KF__SHOP__ENTRY__ITEM_1: [LocationId; 1] = [LocationId::KF__Shop__Entry__Item_1];
static CANON_LOC_KF__SHOP__ENTRY__ITEM_2: [LocationId; 1] = [LocationId::KF__Shop__Entry__Item_2];
static CANON_LOC_KF__SHOP__ENTRY__ITEM_3: [LocationId; 1] = [LocationId::KF__Shop__Entry__Item_3];
static CANON_LOC_KF__SHOP__ENTRY__ITEM_4: [LocationId; 1] = [LocationId::KF__Shop__Entry__Item_4];
static CANON_LOC_KF__SHOP__ENTRY__ITEM_5: [LocationId; 1] = [LocationId::KF__Shop__Entry__Item_5];
static CANON_LOC_KF__SHOP__ENTRY__ITEM_6: [LocationId; 1] = [LocationId::KF__Shop__Entry__Item_6];
static CANON_LOC_KF__SHOP__ENTRY__ITEM_7: [LocationId; 1] = [LocationId::KF__Shop__Entry__Item_7];
static CANON_LOC_KF__SHOP__ENTRY__ITEM_8: [LocationId; 1] = [LocationId::KF__Shop__Entry__Item_8];
static CANON_LOC_KAK__SPIDER_HOUSE__ENTRY__SKULLS_10: [LocationId; 1] = [LocationId::Kak__Spider_House__Entry__Skulls_10];
static CANON_DEFS: [&'static [LocationId]; 44] = [
    &CANON_DEFEAT_GOHMA,
    &CANON_DEKU_BASEMENT_WEB,
    &CANON_DEKU_LOBBY_WEB,
    &CANON_LOC_DEKU_TREE__BACK_ROOM__NORTHWEST__BREAK_WALL,
    &CANON_LOC_DEKU_TREE__BACK_ROOM__NORTHWEST__BURN_WEB,
    &CANON_LOC_DEKU_TREE__BASEMENT_1__CENTER__VINES_GS,
    &CANON_LOC_DEKU_TREE__BASEMENT_1__CORNER__CHEST,
    &CANON_LOC_DEKU_TREE__BASEMENT_1__CORNER__GATE_GS,
    &CANON_LOC_DEKU_TREE__BASEMENT_1__CORNER__SWITCH,
    &CANON_LOC_DEKU_TREE__BASEMENT_2__BOSS_DOOR__SCRUBS,
    &CANON_LOC_DEKU_TREE__BASEMENT_LEDGE__BLOCK__PUSH_BLOCK,
    &CANON_LOC_DEKU_TREE__BOSS_ROOM__ARENA__BLUE_WARP,
    &CANON_LOC_DEKU_TREE__BOSS_ROOM__ARENA__GOHMA_HEART,
    &CANON_LOC_DEKU_TREE__COMPASS_ROOM__COMPASS__CHEST,
    &CANON_LOC_DEKU_TREE__COMPASS_ROOM__LEDGE__CHEST,
    &CANON_LOC_DEKU_TREE__COMPASS_ROOM__LEDGE__GS,
    &CANON_LOC_DEKU_TREE__FLOOR_2__VINES__MAP_CHEST,
    &CANON_LOC_DEKU_TREE__LOBBY__CENTER__DEKU_BABA_NUTS,
    &CANON_LOC_DEKU_TREE__LOBBY__CENTER__DEKU_BABA_STICKS,
    &CANON_LOC_DEKU_TREE__SCRUB_ROOM__ENTRY__SCRUB,
    &CANON_LOC_DEKU_TREE__SKULL_ROOM__ENTRY__GS,
    &CANON_LOC_DEKU_TREE__SLINGSHOT_ROOM__SLINGSHOT__CHEST,
    &CANON_LOC_DEKU_TREE__SLINGSHOT_UPPER__LEDGE__CHEST,
    &CANON_LOC_KF__BABA_CORRIDOR__DEKU_BABAS__NUTS,
    &CANON_LOC_KF__BABA_CORRIDOR__DEKU_BABAS__STICKS,
    &CANON_LOC_KF__BOULDER_MAZE__REWARD__CHEST,
    &CANON_LOC_KF__KOKIRI_VILLAGE__MIDOS_GUARDPOST__SHOW_MIDO,
    &CANON_LOC_KF__KOKIRI_VILLAGE__TRAINING_CENTER__VICTORY,
    &CANON_LOC_KF__MIDOS_HOUSE__ENTRY__BOTTOM_LEFT_CHEST,
    &CANON_LOC_KF__MIDOS_HOUSE__ENTRY__BOTTOM_RIGHT_CHEST,
    &CANON_LOC_KF__MIDOS_HOUSE__ENTRY__TOP_LEFT_CHEST,
    &CANON_LOC_KF__MIDOS_HOUSE__ENTRY__TOP_RIGHT_CHEST,
    &CANON_LOC_KF__OUTSIDE_DEKU_TREE__LEFT__GOSSIP_STONE,
    &CANON_LOC_KF__OUTSIDE_DEKU_TREE__RIGHT__GOSSIP_STONE,
    &CANON_LOC_KF__SHOP__ENTRY__BLUE_RUPEE,
    &CANON_LOC_KF__SHOP__ENTRY__ITEM_1,
    &CANON_LOC_KF__SHOP__ENTRY__ITEM_2,
    &CANON_LOC_KF__SHOP__ENTRY__ITEM_3,
    &CANON_LOC_KF__SHOP__ENTRY__ITEM_4,
    &CANON_LOC_KF__SHOP__ENTRY__ITEM_5,
    &CANON_LOC_KF__SHOP__ENTRY__ITEM_6,
    &CANON_LOC_KF__SHOP__ENTRY__ITEM_7,
    &CANON_LOC_KF__SHOP__ENTRY__ITEM_8,
    &CANON_LOC_KAK__SPIDER_HOUSE__ENTRY__SKULLS_10,
];

pub(super) fn build_locations(locations: &mut EnumMap<LocationId, Location>) {
    for (k, loc) in LOC_DEFS.iter().enumerate() {
        assert!(k == loc.id.into_usize(),
                "Order of location ids does not match: {} defined as {} but expected to be {}",
                loc.id, loc.id.into_usize(), k);
        locations[loc.id] = *loc;
    }
}

pub fn get_location_spot(loc_id: LocationId) -> SpotId {
    match loc_id {
        LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Nuts | LocationId::Deku_Tree__Lobby__Center__Deku_Baba_Sticks | LocationId::Deku_Tree__Lobby__Center__Web => SpotId::Deku_Tree__Lobby__Center,
        LocationId::Deku_Tree__Floor_2__Vines__Map_Chest => SpotId::Deku_Tree__Floor_2__Vines,
        LocationId::Deku_Tree__Scrub_Room__Entry__Scrub => SpotId::Deku_Tree__Scrub_Room__Entry,
        LocationId::Deku_Tree__Slingshot_Room__Slingshot__Chest => SpotId::Deku_Tree__Slingshot_Room__Slingshot,
        LocationId::Deku_Tree__Slingshot_Upper__Ledge__Chest => SpotId::Deku_Tree__Slingshot_Upper__Ledge,
        LocationId::Deku_Tree__Floor_3__Door__Break_Web => SpotId::Deku_Tree__Floor_3__Door,
        LocationId::Deku_Tree__Compass_Room__Entry__Burn_Web => SpotId::Deku_Tree__Compass_Room__Entry,
        LocationId::Deku_Tree__Compass_Room__Compass__Chest => SpotId::Deku_Tree__Compass_Room__Compass,
        LocationId::Deku_Tree__Compass_Room__Ledge__Chest | LocationId::Deku_Tree__Compass_Room__Ledge__GS => SpotId::Deku_Tree__Compass_Room__Ledge,
        LocationId::Deku_Tree__Basement_1__Center__Vines_GS => SpotId::Deku_Tree__Basement_1__Center,
        LocationId::Deku_Tree__Basement_1__Corner__Chest | LocationId::Deku_Tree__Basement_1__Corner__Gate_GS | LocationId::Deku_Tree__Basement_1__Corner__Switch => SpotId::Deku_Tree__Basement_1__Corner,
        LocationId::Deku_Tree__Basement_1__Corner__Burn_Basement_Web => SpotId::Deku_Tree__Basement_1__Corner,
        LocationId::Deku_Tree__Back_Room__Northwest__Break_Wall | LocationId::Deku_Tree__Back_Room__Northwest__Burn_Web => SpotId::Deku_Tree__Back_Room__Northwest,
        LocationId::Deku_Tree__Skull_Room__Entry__GS => SpotId::Deku_Tree__Skull_Room__Entry,
        LocationId::Deku_Tree__Basement_Ledge__Block__Push_Block => SpotId::Deku_Tree__Basement_Ledge__Block,
        LocationId::Deku_Tree__Basement_Ledge__Web__Burn_Web => SpotId::Deku_Tree__Basement_Ledge__Web,
        LocationId::Deku_Tree__Basement_2__Boss_Door__Scrubs => SpotId::Deku_Tree__Basement_2__Boss_Door,
        LocationId::Deku_Tree__Boss_Room__Arena__Gohma | LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Heart | LocationId::Deku_Tree__Boss_Room__Arena__Gohma_Quick_Kill => SpotId::Deku_Tree__Boss_Room__Arena,
        LocationId::Deku_Tree__Boss_Room__Arena__Blue_Warp => SpotId::Deku_Tree__Boss_Room__Arena,
        LocationId::KF__Kokiri_Village__Training_Center__Victory => SpotId::KF__Kokiri_Village__Training_Center,
        LocationId::KF__Kokiri_Village__Midos_Guardpost__Show_Mido => SpotId::KF__Kokiri_Village__Midos_Guardpost,
        LocationId::KF__Boulder_Maze__Reward__Chest => SpotId::KF__Boulder_Maze__Reward,
        LocationId::KF__Baba_Corridor__Deku_Babas__Nuts | LocationId::KF__Baba_Corridor__Deku_Babas__Sticks => SpotId::KF__Baba_Corridor__Deku_Babas,
        LocationId::KF__Outside_Deku_Tree__Left__Gossip_Stone => SpotId::KF__Outside_Deku_Tree__Left,
        LocationId::KF__Outside_Deku_Tree__Right__Gossip_Stone => SpotId::KF__Outside_Deku_Tree__Right,
        LocationId::KF__Midos_House__Entry__Bottom_Left_Chest | LocationId::KF__Midos_House__Entry__Bottom_Right_Chest | LocationId::KF__Midos_House__Entry__Top_Left_Chest | LocationId::KF__Midos_House__Entry__Top_Right_Chest => SpotId::KF__Midos_House__Entry,
        LocationId::KF__Shop__Entry__Blue_Rupee | LocationId::KF__Shop__Entry__Item_1 | LocationId::KF__Shop__Entry__Item_2 | LocationId::KF__Shop__Entry__Item_3 | LocationId::KF__Shop__Entry__Item_4 | LocationId::KF__Shop__Entry__Item_5 | LocationId::KF__Shop__Entry__Item_6 | LocationId::KF__Shop__Entry__Item_7 | LocationId::KF__Shop__Entry__Item_8 => SpotId::KF__Shop__Entry,
        LocationId::Kak__Spider_House__Entry__Skulls_10 => SpotId::Kak__Spider_House__Entry,
    }
}

pub fn get_canon_location_ids(canon_id: CanonId) -> &'static [LocationId] {
    CANON_DEFS[canon_id.into_usize()]
}